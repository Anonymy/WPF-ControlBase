<h:MainWindowBase x:Class="HeBianGu.Application.MainWindow.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:HeBianGu.Application.MainWindow"
        mc:Ignorable="d"  Style="{DynamicResource S.Window.Main.Default}"
        Title="S.Window.Main.Default"
        DataContext="{Binding Source={StaticResource S.DataSource.Locator},Path=ShellViewModel}"   
        NotifyIconSource="/HeBianGu.General.WpfControlLib;component/Resources/iBook.ico"
        xmlns:h="QQ:908293466" 
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:collections="clr-namespace:System.Collections;assembly=mscorlib"
        Height="600" Width="1350" CaptionHeight="35" FIconSize="30">
    <!--<Window.TaskbarItemInfo>
        <TaskbarItemInfo Overlay="/HeBianGu.General.WpfControlLib;component/Resources/iBook.ico" ThumbnailClipMargin="10,5,5,10"  ProgressState="Paused" ProgressValue="0.5" Description="{Binding RelativeSource={RelativeSource Mode=Self},Path=ProgressValue}">
            <TaskbarItemInfo.ThumbButtonInfos>
                <ThumbButtonInfo ImageSource="/HeBianGu.General.WpfControlLib;component/Resources/iBook.ico"/>
                <ThumbButtonInfo ImageSource="/HeBianGu.General.WpfControlLib;component/Resources/iBook.ico"/>
                <ThumbButtonInfo ImageSource="/HeBianGu.General.WpfControlLib;component/Resources/iBook.ico"/>
            </TaskbarItemInfo.ThumbButtonInfos>
        </TaskbarItemInfo>
    </Window.TaskbarItemInfo>-->
    <Window.Resources>
        <!--<ResourceDictionary Source="ComboBox.xaml"/>-->

        <ImageSource x:Key="image">../Resources/组 4@2x.png</ImageSource>
    </Window.Resources>

    <TabControl TabStripPlacement="Left" ItemContainerStyle="{StaticResource S.TabItem.RightLine.Default}">
        <!--<TabControl.Resources>
            <collections:ArrayList x:Key="D.ArrayList.Items">
                <h:FilterModel Name="序号"/>
                <h:FilterModel Name="名称"/>
                <h:FilterModel Name="类型"/>
                <h:FilterModel Name="是否合格"/>
            </collections:ArrayList>
        </TabControl.Resources>-->

        <TabControl.Resources>
            <collections:ArrayList x:Key="D.ArrayList.MyEnum">
                <local:MyEnum>Defatul</local:MyEnum>
                <local:MyEnum>First</local:MyEnum>
            </collections:ArrayList>


            <local:LeagueList x:Key="S.LeagueList.Default"/>

        </TabControl.Resources>


        <TabItem Header="PropertyPath主从模式" >
            <GroupBox Header="TaskBarMessage">
                <UniformGrid Columns="5">

                    <GroupBox>
                        <GroupBox.Background>
                            <DrawingBrush Stretch="Uniform">
                                <DrawingBrush.Drawing>
                                    <DrawingGroup>
                                        <DrawingGroup.Children>
                                            <GeometryDrawing Brush="#00FFFFFF" Geometry="F1M16,16L0,16 0,0 16,0z" />
                                            <GeometryDrawing Brush="#FFF6F6F6" Geometry="F1M16,8L16,13 0,13 0,8 2.632,8 4.303,3 6.716,3 8,6.826 8,3.023 10.838,3.023C11.25,3.023 11.625,3.077 11.951,3.184 12.298,3.295 12.601,3.458 12.848,3.667 13.12,3.899 13.321,4.17 13.452,4.477 13.576,4.764 13.641,5.076 13.641,5.4 13.641,5.676 13.596,5.944 13.508,6.197 13.454,6.346 13.391,6.483 13.316,6.612 13.508,6.82 13.661,7.077 13.766,7.365 13.838,7.563 13.875,7.778 13.895,8z" />
                                            <GeometryDrawing Brush="#FF424242" Geometry="F1M4,12L5,12 5,11 4,11z M14,9L14,11 12,11 12,12 15,12 15,9z M11.893,8.234C11.893,7.95 11.792,7.728 11.591,7.564 11.39,7.402 11.092,7.32 10.696,7.32L10,7.32 10,9.18 10.781,9.18C10.968,9.18 11.131,9.156 11.271,9.107 11.409,9.057 11.525,8.992 11.617,8.907 11.71,8.822 11.778,8.722 11.824,8.606 11.871,8.492 11.893,8.367 11.893,8.234 M10,4.844L10,6.5 10.587,6.5C10.913,6.5 11.168,6.42 11.347,6.262 11.527,6.104 11.617,5.879 11.617,5.587 11.617,5.351 11.53,5.168 11.357,5.038 11.185,4.91 10.931,4.844 10.595,4.844z M12.916,8.259C12.916,8.537 12.863,8.784 12.758,8.999 12.652,9.215 12.508,9.395 12.325,9.545 12.144,9.693 11.929,9.807 11.685,9.885 11.439,9.961 11.18,10 10.903,10L10,10 9,10 9,4.023 10,4.023 10.838,4.023C11.146,4.023 11.415,4.061 11.642,4.134 11.868,4.208 12.057,4.308 12.204,4.432 12.351,4.557 12.461,4.703 12.532,4.87 12.605,5.036 12.641,5.213 12.641,5.4 12.641,5.566 12.614,5.722 12.564,5.868 12.511,6.014 12.44,6.146 12.348,6.264 12.256,6.382 12.146,6.485 12.017,6.575 11.889,6.664 11.748,6.733 11.593,6.784L11.593,6.8C11.796,6.827 11.979,6.881 12.144,6.96 12.307,7.04 12.446,7.142 12.561,7.267 12.677,7.391 12.765,7.537 12.825,7.705 12.886,7.871 12.916,8.055 12.916,8.259 M6.394,8L5.511,5.124 4.628,8z M6.7,9L4.321,9 4.021,10 3.019,10 5.023,4 5.997,4 8.01,10 7,10z M8,12L9,12 9,11 8,11z M10,12L11,12 11,11 10,11z M6,12L7,12 7,11 6,11z M2,11L3,11 3,12 1,12 1,9 2,9z" />
                                        </DrawingGroup.Children>
                                    </DrawingGroup>
                                </DrawingBrush.Drawing>
                            </DrawingBrush>
                        </GroupBox.Background>
                    </GroupBox>
                    
                    <GroupBox Header="DrawingBrush">
                        <!--<Grid.Background>
                        <ImageBrush Stretch="None">
                            <ImageBrush.ImageSource>
                                <DrawingImage Drawing="{StaticResource S.Drawing.EventError}"/>
                            </ImageBrush.ImageSource>
                        </ImageBrush>
                    </Grid.Background>-->

                        <GroupBox.Background>
                            <DrawingBrush Stretch="Uniform" Drawing="{StaticResource S.Drawing.DatabaseColumn.16x}"/>
                        </GroupBox.Background>
                    </GroupBox>

                    <GroupBox Header="DrawingBrush">
                        <GroupBox.Background>
                            <DrawingBrush Stretch="Uniform" Drawing="{StaticResource S.Drawing.DatabaseColumn.16x}"/>
                        </GroupBox.Background>
                    </GroupBox>

                    <GroupBox Header="ImageBrush">
                        <GroupBox.Background>
                            <ImageBrush Stretch="Uniform">
                            <ImageBrush.ImageSource>
                                    <DrawingImage Drawing="{StaticResource S.Drawing.DatabaseMarkup.16x}"/>
                            </ImageBrush.ImageSource>
                        </ImageBrush>
                    </GroupBox.Background>
                    </GroupBox>
                </UniformGrid>


            </GroupBox>
        </TabItem>


        <TabItem Header="TaskBarMessage" >
            <GroupBox Header="TaskBarMessage">
                <h:FButton Command="{Binding RelayCommand}" CommandParameter="TaskBar"/>
            </GroupBox>
        </TabItem>

        <TabItem Header="PropertyPath主从模式" >
            <GroupBox Header="主从模式与分层">

                <!--<Grid Background="{DynamicResource S.Brush.Accent}">
                    -->
                <!--<Grid.Background>
                        -->
                <!--<LinearGradientBrush>
                            <GradientStop Offset="-1" Color="Transparent"/>
                            <GradientStop Offset="1" Color="{DynamicResource AccentColor}"/>
                        </LinearGradientBrush>-->

                <!--<RadialGradientBrush>
                    <GradientStop Offset="-1" Color="Transparent"/>
                    <GradientStop Offset="1" Color="{DynamicResource AccentColor}"/>
                </RadialGradientBrush>-->
                <!--</Grid.Background>-->
                <!--
                    <Grid.OpacityMask>
                        <ImageBrush Stretch="None" ImageSource="E:\Github\Document\Pictures\首页1_slices\背景_小屏幕选择.png"/>
                    </Grid.OpacityMask>

                    -->
                <!--<Image.Effect>
                        <h:PointLightEffect/>
                    </Image.Effect>-->
                <!--
                </Grid>-->

                <!--<TextBlock Text="sgsgsdgd" TextAlignment="Center"/>-->
            </GroupBox>
        </TabItem>

        <TabItem Header="球">
            <GroupBox Header="球">
                <Grid Background="{DynamicResource S.Brush.Accent}">
                    <Viewport3D Focusable="True" Name="myViewport3D" ClipToBounds="True">
                        <Viewport3D.Camera>
                            <PerspectiveCamera
          Position="0,0,3.0"
          LookDirection="0,0,-1"
          UpDirection="0,1,0"
          NearPlaneDistance="0.25"
          FarPlaneDistance="20"
          FieldOfView="60" />
                        </Viewport3D.Camera>

                        <ModelVisual3D>
                            <local:Sphere ThetaDiv="20" PhiDiv="20" Radius="0.5"/>

                            <ModelVisual3D.Content>
                                <!--<AmbientLight Color="Yellow"/>-->
                                <DirectionalLight Color="Green" Direction="-1,-1,-1" />
                            </ModelVisual3D.Content>
                        </ModelVisual3D>


                        <!--<ModelVisual3D>
                    <ModelVisual3D.Transform>
                        <Transform3DGroup>
                            <Transform3DGroup.Children>
                                <Transform3DCollection >
                                    <ScaleTransform3D ScaleX="1" ScaleY="1"  ScaleZ="1" />
                                    <RotateTransform3D>
                                        <RotateTransform3D.Rotation>
                                            <AxisAngleRotation3D Axis="0 1 0" Angle="0" />
                                        </RotateTransform3D.Rotation>
                                    </RotateTransform3D>
                                    <TranslateTransform3D OffsetX="0" OffsetY="0" OffsetZ="0" />
                                </Transform3DCollection>
                            </Transform3DGroup.Children>
                        </Transform3DGroup>
                    </ModelVisual3D.Transform>

                    <ModelVisual3D.Content>
                        <Model3DGroup >
                            <Model3DGroup.Transform>
                                <Transform3DGroup>
                                    <Transform3DGroup.Children>
                                        <Transform3DCollection >
                                            <ScaleTransform3D ScaleX="1" ScaleY="1"  ScaleZ="1" />
                                            <RotateTransform3D>
                                                <RotateTransform3D.Rotation>
                                                    <AxisAngleRotation3D Axis="0 1 0" Angle="0" />
                                                </RotateTransform3D.Rotation>
                                            </RotateTransform3D>
                                            <TranslateTransform3D OffsetX="0" OffsetY="0" OffsetZ="0" />
                                        </Transform3DCollection>
                                    </Transform3DGroup.Children>
                                </Transform3DGroup>
                            </Model3DGroup.Transform>
                                    <Model3DGroup.Children>
                                        -->
                        <!--Group Child 0-->
                        <!--
                                <Model3DGroup >
                                    <Model3DGroup.Transform>
                                        <Transform3DGroup>
                                            <Transform3DGroup.Children>
                                                <Transform3DCollection >
                                                    <ScaleTransform3D x:Name="myScale" ScaleX="1" ScaleY="1"  ScaleZ="1" />
                                                    <RotateTransform3D >
                                                        <RotateTransform3D.Rotation >
                                                            <AxisAngleRotation3D x:Name="myRotate" Axis="1 0 0" Angle="0" />
                                                        </RotateTransform3D.Rotation>
                                                    </RotateTransform3D>
                                                    <RotateTransform3D >
                                                        <RotateTransform3D.Rotation >
                                                            <AxisAngleRotation3D x:Name="myRotate2" Axis="0 1 0" Angle="0" />
                                                        </RotateTransform3D.Rotation>
                                                    </RotateTransform3D>
                                                    <TranslateTransform3D OffsetX="0" OffsetY="0" OffsetZ="0" />
                                                </Transform3DCollection>
                                            </Transform3DGroup.Children>
                                        </Transform3DGroup>
                                    </Model3DGroup.Transform>

                                    <Model3DGroup.Children>

                                        -->
                        <!--Child 0-->
                        <!--
                                                <GeometryModel3D>
                                                    <GeometryModel3D.Material>
                                                        <MaterialGroup>
                                                            <MaterialGroup.Children>
                                                                <EmissiveMaterial>
                                                                    <EmissiveMaterial.Brush>
                                                                        <ImageBrush ImageSource="/HeBianGu.General.WpfControlLib;component/Resources/logo.png">
                                                                            <ImageBrush.Transform>
                                                                                <TransformGroup>
                                                                                    <TransformGroup.Children>
                                                                                        <RotateTransform CenterX="0.5" CenterY="0.5" Angle="0" />
                                                                                    </TransformGroup.Children>
                                                                                </TransformGroup>
                                                                            </ImageBrush.Transform>
                                                                        </ImageBrush>
                                                                    </EmissiveMaterial.Brush>
                                                                </EmissiveMaterial>
                                                            </MaterialGroup.Children>
                                                        </MaterialGroup>
                                                    </GeometryModel3D.Material>

                                                    <GeometryModel3D.BackMaterial>
                                                        <MaterialGroup>
                                                            <MaterialGroup.Children>
                                                                <EmissiveMaterial>
                                                                    <EmissiveMaterial.Brush>
                                                                        <ImageBrush ImageSource="/HeBianGu.General.WpfControlLib;component/Resources/logo.png">
                                                                            <ImageBrush.Transform>
                                                                                <TransformGroup>
                                                                                    <TransformGroup.Children>
                                                                                        <RotateTransform CenterX="0.5" CenterY="0.5" Angle="0" />
                                                                                    </TransformGroup.Children>
                                                                                </TransformGroup>
                                                                            </ImageBrush.Transform>
                                                                        </ImageBrush>
                                                                    </EmissiveMaterial.Brush>
                                                                </EmissiveMaterial>
                                                            </MaterialGroup.Children>
                                                        </MaterialGroup>
                                                    </GeometryModel3D.BackMaterial>

                                                    <GeometryModel3D.Geometry>
                                                        <MeshGeometry3D
      TriangleIndices="0,1,2 3,4,5 6,7,8 9,10,11 12,13,14 15,16,17 18,19,20 21,22,23 24,25,26 27,28,29 30,31,32 33,34,35 "
      Normals="0,0,-1 0,0,-1 0,0,-1 0,0,-1 0,0,-1 0,0,-1 0,0,1 0,0,1 0,0,1 0,0,1 0,0,1 0,0,1 0,-1,0 0,-1,0 0,-1,0 0,-1,0 0,-1,0 0,-1,0 1,0,0 1,0,0 1,0,0 1,0,0 1,0,0 1,0,0 0,1,0 0,1,0 0,1,0 0,1,0 0,1,0 0,1,0 -1,0,0 -1,0,0 -1,0,0 -1,0,0 -1,0,0 -1,0,0 "
      TextureCoordinates="1,0 1,1 0,1 0,1 0,0 1,0 0,0 1,0 1,1 1,1 0,1 0,0 0,0 1,0 1,1 1,1 0,1 0,0 1,0 1,1 0,1 0,1 0,0 1,0 1,1 0,1 0,0 0,0 1,0 1,1 0,1 0,0 1,0 1,0 1,1 0,1 "
      Positions="-0.5,-0.5,-0.5 -0.5,0.5,-0.5 0.5,0.5,-0.5 0.5,0.5,-0.5 0.5,-0.5,-0.5 -0.5,-0.5,-0.5 -0.5,-0.5,0.5 0.5,-0.5,0.5 0.5,0.5,0.5 0.5,0.5,0.5 -0.5,0.5,0.5 -0.5,-0.5,0.5 -0.5,-0.5,-0.5 0.5,-0.5,-0.5 0.5,-0.5,0.5 0.5,-0.5,0.5 -0.5,-0.5,0.5 -0.5,-0.5,-0.5 0.5,-0.5,-0.5 0.5,0.5,-0.5 0.5,0.5,0.5 0.5,0.5,0.5 0.5,-0.5,0.5 0.5,-0.5,-0.5 0.5,0.5,-0.5 -0.5,0.5,-0.5 -0.5,0.5,0.5 -0.5,0.5,0.5 0.5,0.5,0.5 0.5,0.5,-0.5 -0.5,0.5,-0.5 -0.5,-0.5,-0.5 -0.5,-0.5,0.5 -0.5,-0.5,0.5 -0.5,0.5,0.5 -0.5,0.5,-0.5 "/>
                                                    </GeometryModel3D.Geometry>
                                                </GeometryModel3D>
                                            </Model3DGroup.Children>
                                </Model3DGroup>
                                <Model3DGroup>
                                    <Model3DGroup.Children>
                                        <AmbientLight Color="Yellow"/>
                                        <DirectionalLight Color="Green" Direction="-1,-1,-1" />
                                    </Model3DGroup.Children>
                                </Model3DGroup>
                            </Model3DGroup.Children>
                        </Model3DGroup>
                    </ModelVisual3D.Content>
                </ModelVisual3D>-->
                    </Viewport3D>
                </Grid>
            </GroupBox>
        </TabItem>
        <TabItem Header="PropertyPath主从模式" >
            <GroupBox Header="主从模式与分层">
                <Grid>
                    <UniformGrid Columns="3" DataContext="{Binding Source={StaticResource S.LeagueList.Default}}">
                        <GroupBox Header="My Soccer Leagues">
                            <ListBox ItemsSource="{Binding}" DisplayMemberPath="Name"
               IsSynchronizedWithCurrentItem="true"/>
                        </GroupBox>

                        <GroupBox Header="{Binding Path=Name}">
                            <ListBox ItemsSource="{Binding Path=Divisions}" DisplayMemberPath="Name"
               IsSynchronizedWithCurrentItem="true"/>
                        </GroupBox>

                        <GroupBox Header="{Binding Path=Divisions/Name}">
                            <ListBox DisplayMemberPath="Name" IsSynchronizedWithCurrentItem="true" ItemsSource="{Binding Path=Divisions/Teams}"/>
                        </GroupBox>
                    </UniformGrid>
                </Grid>
            </GroupBox>
        </TabItem>

        <TabItem Header="LineStackingStrategy" >
            <GroupBox Header="LineStackingStrategy">
                <Grid>
                    <StackPanel>

                        <!-- This TextBlock has a LineStackingStrategy set to "MaxHeight". -->
                        <TextBlock LineStackingStrategy="MaxHeight" LineHeight="10" Width="500" TextWrapping="Wrap"
     Background="Yellow">
      Use the <Span FontSize="30">LineStackingStrategy</Span> property to determine how a line box is
      created for each line. A value of <Span FontSize="20">MaxHeight</Span> specifies that the stack
      height is the smallest value that contains all the inline elements on that line when those
      elements are properly aligned. A value of <Span FontSize="20">BlockLineHeight</Span> specifies
      that the stack height is determined by the block element LineHeight property value.
                        </TextBlock>


                        <!-- This TextBlock has a LineStackingStrategy set to "MaxHeight". -->
                        <TextBlock LineStackingStrategy="MaxHeight" LineHeight="10" Width="500" TextWrapping="Wrap" Margin="0,10" TextAlignment="Justify" TextDecorations="UnderLine"
     Background="Yellow">
      Use the <Span FontSize="30">LineStackingStrategy</Span> property to determine how a line box is
      created for each line. A value of <Span FontSize="20">MaxHeight</Span> specifies that the stack 
      height is the smallest value that contains all the inline elements on that line when those
      elements are properly aligned. A value of <Span FontSize="20">BlockLineHeight</Span> specifies
      that the stack height is determined by the block element LineHeight property value.
                        </TextBlock>

                        <!-- Here is the same TextBlock but the LineStackingStrategy is set to "BlockLineHeight". -->
                        <TextBlock LineStackingStrategy="BlockLineHeight" LineHeight="10" Width="500" TextWrapping="Wrap" 
     Background="Blue" Margin="0,40,0,0">
      Use the <Span FontSize="30">LineStackingStrategy</Span> property to determine how a line box is
      created for each line. A value of <Span FontSize="20">MaxHeight</Span> specifies that the stack
      height is the smallest value that contains all the inline elements on that line when those
      elements are properly aligned. A value of <Span FontSize="20">BlockLineHeight</Span> specifies
      that the stack height is determined by the block element LineHeight property value.
                        </TextBlock>

                    </StackPanel>
                </Grid>
            </GroupBox>
        </TabItem>

        <TabItem Header="PreviousData" >
            <GroupBox Header="显示居中">
                <Grid>
                    <ListBox>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <UniformGrid Columns="2">
                                    <TextBlock Text="{Binding}"/>
                                    <TextBlock Text="{Binding RelativeSource={RelativeSource Mode=PreviousData}}"/>
                                </UniformGrid>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                        <system:String>111111111</system:String>
                        <system:String>222222222</system:String>
                        <system:String>44444444</system:String>
                        <system:String>55555555</system:String>
                        <system:String>666666666666</system:String>
                        <system:String>7777777777</system:String>
                        <system:String>88888888888</system:String>
                        <system:String>99999999999</system:String>
                    </ListBox>
                </Grid>
            </GroupBox>
        </TabItem>

        <TabItem Header="Chart" >
            <GroupBox Header="显示居中">
                <Grid>
                    <TextBlock Style="{x:Null}" Text="显示居中" FontSize="45" FontStretch="Expanded" FlowDirection="RightToLeft" HorizontalAlignment="Left">
                        <Hyperlink/>
                        <TextBlock.CacheMode>
                            <BitmapCache/>
                        </TextBlock.CacheMode>
                    </TextBlock>
                </Grid>
            </GroupBox>
        </TabItem>

        <TabItem Header="Chart">
            <GroupBox Header="显示居中">
                <DockPanel>
                    <h:ChartMap Background="{DynamicResource S.Brush.Dark.2}" Chart="{Binding ElementName=chart}" DockPanel.Dock="Bottom" yAxis="0,1,2,3,4,5,6,7,8,9,10" 
                                xAxis="{Binding xAxis}" 
                                xDatas="{Binding xAxis}" 
                                yDatas="{Binding Datas}"/>

                    <h:Chart x:Name="chart" Background="Transparent" Style="{StaticResource S.Chart.Coord}"  yAxis="0,1,2,3,4,5,6,7,8,9,10" Padding="100,50">
                        <h:Series>
                            <h:Line TryFreeze="True" Style="{StaticResource S.Line.Single}"/>
                            <h:MarkPosition Style="{StaticResource S.MarkPosition.Single}" MarkValueType="Max"  />
                            <h:MarkPosition Style="{StaticResource S.MarkPosition.Single}" MarkValueType="Min" Foreground="Red"/>
                            <h:MarkPosition Style="{StaticResource S.MarkPosition.Single}" MarkValueType="Default" Foreground="Green" Point="1800,25"/>
                            <h:MarkLine Style="{StaticResource S.MarkLine.Single}" MarkLineType="Average"/>
                        </h:Series>
                        <h:Chart.CacheMode>
                            <BitmapCache/>
                        </h:Chart.CacheMode>
                    </h:Chart>
                </DockPanel>
            </GroupBox>
        </TabItem>

        <TabItem Header="Chart">
            <GroupBox Header="显示居中">
                <DockPanel>
                    <Grid Height="30" DockPanel.Dock="Top">
                        <h:Series >
                            <h:Line Style="{StaticResource S.Line.Single}"  yAxis="0,1,2,3,4,5,6,7,8,9,10" xAxis="{Binding ChartxAxis}" Data="{Binding Datas}"/>
                        </h:Series>
                        <h:StoryBoardToolBar x:Name="tool" Grid.Column="1" LeftPercent="{Binding LeftPercent,Mode=TwoWay}" Height="30"
                                                             RightPercent="{Binding RightPercent,Mode=TwoWay}" MaxValue="1000">
                            <h:Interaction.Triggers>
                                <h:EventTrigger EventName="ValueChanged">
                                    <h:InvokeCommandAction Command="{Binding RelayCommand}" CommandParameter="ToolBar.ValueChanged.RefreshData"/>
                                </h:EventTrigger>
                            </h:Interaction.Triggers>
                        </h:StoryBoardToolBar>
                    </Grid>

                    <h:Chart Background="Transparent" Style="{StaticResource S.Chart.Coord}"  yAxis="0,1,2,3,4,5,6,7,8,9,10" Padding="100,50" xAxis="{Binding DynimacxAxis}">

                        <h:Series xAxis="{Binding xAxis}" yDatas="{Binding DynimacData}">
                            <h:Line TryFreeze="True" Style="{StaticResource S.Line.Single}" />
                            <!--<h:MarkPosition Style="{StaticResource S.MarkPosition.Single}" MarkValueType="Max"  />
                            <h:MarkPosition Style="{StaticResource S.MarkPosition.Single}" MarkValueType="Min" Foreground="Red"/>
                            <h:MarkPosition Style="{StaticResource S.MarkPosition.Single}" MarkValueType="Default" Foreground="Green" Point="1800,25"/>
                            <h:MarkLine Style="{StaticResource S.MarkLine.Single}" MarkLineType="Average"/>-->
                        </h:Series>

                        <h:Interaction.Triggers>
                            <h:EventTrigger EventName="MouseWheel">
                                <h:InvokeCommandAction Command="{Binding RelayCommand}" PassEventArgsToCommand="True"/>
                            </h:EventTrigger>
                        </h:Interaction.Triggers>
                    </h:Chart>
                </DockPanel>
            </GroupBox>
        </TabItem>

        <TabItem Header="RadialGradientBrush">
            <GroupBox Header="None">
                <DockPanel>
                    <h:SwitchToggleButton  IsChecked="True" x:Name="cb1111" DockPanel.Dock="Top" Content="显示/隐藏" HorizontalAlignment="Left" Margin="5" CornerRadius="2" BorderCornerRadius="3" />
                    <Grid Background="{DynamicResource S.Brush.Accent}" h:Cattach.IsVisible="{Binding ElementName=cb1111,Path=IsChecked}">
                        <h:Cattach.VisibleActions>
                            <h:ActionCollection>
                                <!--<h:AngleAction StartAngle="{h:IntRandowm From=0,To=720}" EndAngle="{h:IntRandowm From=0,To=720}" RenderTransformOrigin="0.5,0.5"/>-->
                                <h:RadialOpacityMaskAction/>
                            </h:ActionCollection>
                        </h:Cattach.VisibleActions>
                        <TextBlock Text="Grid" FontSize="100" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                </DockPanel>
            </GroupBox>
        </TabItem>

        <TabItem Header="RadialGradientBrush">
            <Grid x:Name="griddd" Background="Red" RenderTransformOrigin="0.5,0.5">
                <Grid.OpacityMask>
                    <RadialGradientBrush>
                        <RadialGradientBrush.Transform>
                            <ScaleTransform x:Name="stt" CenterX="671" CenterY="240" ScaleX="{Binding ElementName=sd,Path=Value}" ScaleY="{Binding ElementName=sd,Path=Value}"/>
                        </RadialGradientBrush.Transform>
                        <GradientStop Offset="0" Color="Transparent"/>
                        <GradientStop Offset="0.2" Color="Transparent"/>
                        <GradientStop Offset="1" Color="Black"/>
                    </RadialGradientBrush>
                </Grid.OpacityMask>


                <TextBlock Text="{Binding ElementName=griddd,Path=ActualHeight}" Foreground="Black" HorizontalAlignment="Left"/>

                <Slider x:Name="sd" Value="0" Maximum="20"/>
            </Grid>

        </TabItem>

        <TabItem Header="FDrawer">
            <Grid>
                <Grid>
                    <h:FDrawer Style="{StaticResource S.FDrawer.Geomotry.Default}">
                        <ListBox  Background="Purple" Width="500" Height="300">
                            <h:FTextBox UseHistory="False"/>
                            <h:FTextBox/>
                        </ListBox>
                    </h:FDrawer>
                </Grid>

                <Grid>
                    <h:FDrawer Style="{StaticResource S.FDrawer.Geomotry.Default}" HorizontalContentAlignment="Left">
                        <ListBox  Background="Red" Width="500" Height="300">
                            <h:FTextBox UseHistory="False"/>
                            <h:FTextBox/>
                        </ListBox>
                    </h:FDrawer>
                </Grid>
            </Grid>
        </TabItem>

        <TabItem Header="FDrawer">
            <Grid Background="Yellow">
                <h:FDrawer Style="{StaticResource S.FDrawer.Right.Default}" Background="Red">
                    <ListBox HorizontalAlignment="Stretch" Grid.Row="1" Width="200">
                        <h:FTextBox UseHistory="False"/>
                        <h:FTextBox/>
                    </ListBox>
                </h:FDrawer>

                <h:FDrawer Style="{StaticResource S.FDrawer.Left.Default}" Background="Red">
                    <h:Cattach.VisibleActions>
                        <h:ScaleAction/>
                    </h:Cattach.VisibleActions>

                    <ListBox HorizontalAlignment="Stretch" Grid.Row="1" Width="200">
                        <h:FTextBox UseHistory="False"/>
                        <h:FTextBox/>
                    </ListBox>
                </h:FDrawer>

                <h:FDrawer Style="{StaticResource S.FDrawer.Bottom.Default}" Background="Red">
                    <h:Cattach.VisibleActions>
                        <h:ActionCollection>
                            <h:HorizontalAction/>
                        </h:ActionCollection>
                    </h:Cattach.VisibleActions>

                    <ListBox HorizontalAlignment="Stretch" Grid.Row="1" Height="200">
                        <h:FTextBox UseHistory="False"/>
                        <h:FTextBox/>
                    </ListBox>
                </h:FDrawer>

                <h:FDrawer Style="{StaticResource S.FDrawer.Top.Default}" Background="Red">
                    <h:Cattach.VisibleActions>
                        <h:ActionCollection>
                            <h:TranslateAction StartPoint="0,-100" EndPoint="0,-100"/>
                        </h:ActionCollection>
                    </h:Cattach.VisibleActions>

                    <ListBox HorizontalAlignment="Stretch" Grid.Row="1" Height="200">
                        <h:FTextBox UseHistory="False"/>
                        <h:FTextBox/>
                    </ListBox>
                </h:FDrawer>
            </Grid>
        </TabItem>

        <TabItem Header="h:Cattach.IsVisible">
            <Grid Background="Yellow">
                <Grid.RowDefinitions>
                    <RowDefinition Height="50"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <ListBox HorizontalAlignment="Stretch" Grid.Row="1">
                    <h:FTextBox UseHistory="False"/>
                    <h:FTextBox/>
                </ListBox>
                <h:FCheckBox x:Name="cb" DockPanel.Dock="Top"/>

                <Grid Background="Red" Grid.Row="1" h:Cattach.IsVisible="{Binding ElementName=cb,Path=IsChecked}">
                    <h:Cattach.VisibleActions>
                        <h:ActionCollection>
                            <h:HorizontalAction/>
                        </h:ActionCollection>
                    </h:Cattach.VisibleActions>
                </Grid>
            </Grid>
        </TabItem>

        <TabItem Header="Group DataGrid">
            <Grid>
                <h:PagedDataGrid DataSource="{Binding Students}" AutoGenerateColumns="True" >
                    <DataGrid.GroupStyle>
                        <GroupStyle>
                            <GroupStyle.ContainerStyle>
                                <Style TargetType="{x:Type GroupItem}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type GroupItem}">
                                                <Expander Style="{StaticResource MaterialDesignExpander}" IsExpanded="False" Header="{Binding Path=Name}">
                                                    <ItemsPresenter/>
                                                </Expander>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </GroupStyle.ContainerStyle>
                            <GroupStyle.Panel>
                                <ItemsPanelTemplate>
                                    <DataGridRowsPresenter/>
                                </ItemsPanelTemplate>
                            </GroupStyle.Panel>
                        </GroupStyle>
                    </DataGrid.GroupStyle>
                    <!--<DataGrid.Columns>

                    </DataGrid.Columns>-->
                </h:PagedDataGrid>
            </Grid>
        </TabItem>

        <TabItem Header="TEST">
            <StackPanel>

                <!--<ComboBox ItemsSource="{Binding Source={local:EnumBindingSource EnumType={x:Type local:MyEnum}}}" 
                          SelectedItem="{Binding CustomNameViewModel.SelectedMyEnum}"/>-->

                <ComboBox ItemsSource="{Binding Source={h:EnumSource EnumType={x:Type local:MyEnum}}}" 
                          SelectedItem="{Binding CustomNameViewModel.SelectedMyEnum}"/>

                <ComboBox ItemsSource="{Binding Source={h:EnumGroupSource EnumType={x:Type local:MyEnum},GroupName=11}}" 
                          SelectedItem="{Binding CustomNameViewModel.SelectedMyEnum}"/>
                <!--<ComboBox>
                    <local:MyEnum>Defatul</local:MyEnum>
                    <local:MyEnum>First</local:MyEnum>
                    -->
                <!--<ComboBox.ItemsSource>
                        <local:MyEnumColletion>
                            <local:MyEnum>Defatul</local:MyEnum>
                            <local:MyEnum>First</local:MyEnum>
                        </local:MyEnumColletion>
                    </ComboBox.ItemsSource>-->
                <!--
                </ComboBox>-->

            </StackPanel>

        </TabItem>

        <TabItem Header="FilterBox">
            <StackPanel>
                <h:FilterBox x:Name="fb" DataSource="{Binding Students}"/>

                <h:PagedDataGrid PageCount="10" DataSource="{Binding ElementName=fb,Path=OutSource}" AutoGenerateColumns="True">
                    <!--<DataGrid.Columns>
                        <DataGridTextColumn Header="姓名" Binding="{Binding Name}"/>
                        <DataGridTextColumn Header="班级"  Binding="{Binding Class}"/>
                        <DataGridTextColumn Header="姓名"  Binding="{Binding Address}"/>
                        <DataGridTextColumn Header="姓名"  Binding="{Binding Emall}"/>
                        <DataGridTextColumn Header="姓名"  Binding="{Binding IsEnbled}"/>
                        <DataGridTextColumn Header="姓名"  Binding="{Binding time}"/>
                        <DataGridTextColumn Header="姓名"  Binding="{Binding Age}"/>
                        <DataGridTextColumn Header="姓名"  Binding="{Binding Age}"/>
                    </DataGrid.Columns>-->
                </h:PagedDataGrid>
            </StackPanel>
        </TabItem>

        <TabItem Header="FTextBox">
            <StackPanel>
                <h:FTextBox UseHistory="True"/>
                <h:FTextBox/>
                <h:FTextBox/>
                <h:FTextBox/>
                <h:FTextBox/>
                <h:FTextBox/>
                <h:FTextBox/>
                <h:FTextBox/>
                <h:FTextBox/>
                <h:FTextBox/>
            </StackPanel>
        </TabItem>
        <TabItem Header="TEST11111">
            <Grid>
                <Grid.Background>
                    <DrawingBrush  TileMode="Tile" Stretch="Uniform" Viewport="0 0 100 100" ViewportUnits="Absolute" >
                        <DrawingBrush.Drawing>
                            <DrawingGroup>
                                <GeometryDrawing Brush="White">
                                    <GeometryDrawing.Geometry>
                                        <RectangleGeometry Rect="0 0 100 100"></RectangleGeometry>
                                    </GeometryDrawing.Geometry>
                                </GeometryDrawing>

                                <GeometryDrawing Brush="Red">
                                    <GeometryDrawing.Geometry>
                                        <!--<RectangleGeometry Rect="0 0 50 50"></RectangleGeometry>-->
                                        <EllipseGeometry Center="25,25" RadiusX="25" RadiusY="25"/>
                                    </GeometryDrawing.Geometry>
                                </GeometryDrawing>

                                <GeometryDrawing Brush="Red">
                                    <GeometryDrawing.Geometry>
                                        <!--<RectangleGeometry Rect="50 50 50 50"></RectangleGeometry>-->
                                        <!--<EllipseGeometry RadiusX="112" RadiusY="112"/>-->
                                        <EllipseGeometry Center="75,75" RadiusX="25" RadiusY="25"/>
                                    </GeometryDrawing.Geometry>
                                </GeometryDrawing>
                            </DrawingGroup>

                        </DrawingBrush.Drawing>
                    </DrawingBrush>
                </Grid.Background>
                <!--<Grid.Triggers>
                    <EventTrigger RoutedEvent="Loaded" >
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation From="0" To="1" Duration="00:00:03" Storyboard.TargetProperty="Offset"  
                                            Storyboard.TargetName="ss"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Grid.Triggers>-->
            </Grid>
        </TabItem>


        <TabItem Header="TEST">
            <Grid  Background="Green">
                <!--<Grid.OpacityMask>
                    <ImageBrush ImageSource="/HeBianGu.General.WpfControlLib;component/Resources/logo.png"/>
                </Grid.OpacityMask>-->
                <!--<GroupBox Header="None" Height="800">
                    <Grid>
                        <Grid.Resources>
                            <Style TargetType="h:FButton" BasedOn="{StaticResource S.FButton.Style.Default}">
                                <Setter Property="Height" Value="Auto"/>
                                <Setter Property="Width" Value="Auto"/>
                                <Setter Property="FontSize" Value="85"/>
                                <Setter Property="Foreground" Value="Black"/>
                                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                <Setter Property="VerticalAlignment" Value="Stretch"/>
                            </Style>
                        </Grid.Resources>

                        <h:PagePanel x:Name="pp22" Duration="1000">
                            <h:PagePanel.AnimationAction>
                                <h:ImageOpacityMaskAction IsSingle="False" ViewportUnits="RelativeToBoundingBox" TileMode="None" ImageSource="C:\Solution\Github\WPF-ControlBase-master (1) (1)\WPF-ControlBase-master\Source\General\HeBianGu.General.WpfControlLib\Resources\logo.png">
                                </h:ImageOpacityMaskAction>
                                -->
                <!--<h:ScaleGeomotryAction Duration="1000">
                                    <h:ScaleGeomotryAction.Geometry>
                                        <PathGeometry>
                                            <PathFigure StartPoint="-600,-400" IsClosed="True" IsFilled="True">
                                                <LineSegment Point="0,-300"/>
                                                <LineSegment Point="1800,800"/>
                                                <LineSegment Point="-100,1000"/>
                                            </PathFigure>
                                        </PathGeometry>
                                    </h:ScaleGeomotryAction.Geometry>
                                </h:ScaleGeomotryAction>-->
                <!--
                            </h:PagePanel.AnimationAction>
                            <h:FButton Background="Purple" Content="1"/>
                            <h:FButton Background="Red" Content="2"/>
                            <h:FButton Background="Green" Content="3"/>
                            <h:FButton Background="Blue" Content="4"/>
                            <h:FButton Background="Yellow" Content="5"/>
                            <h:FButton Background="Orange" Content="6"/>
                        </h:PagePanel>

                        <h:FButton FIcon="&#xe9be;" Style="{StaticResource S.FButton.Left}" CommandTarget="{Binding ElementName=pp22}"/>
                        <h:FButton FIcon="&#xe9bf;"  Style="{StaticResource S.FButton.Right}" CommandTarget="{Binding ElementName=pp22}"/>

                    </Grid>
                </GroupBox>-->

            </Grid>
        </TabItem>

        <TabItem Header="TEST">
            <Grid Background="Green">
                <!--<Path Fill="Red">
                    <Path.Data>
                        <EllipseGeometry RadiusX="30" RadiusY="30">
                            <EllipseGeometry.Transform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                                </TransformGroup>
                            </EllipseGeometry.Transform>
                        </EllipseGeometry>
                    </Path.Data>
                </Path>-->

                <!--<Path Fill="Red">
                    <Path.Data>
                        -->
                <!--<RectangleGeometry Rect="-100 -100 200 200">
                            <RectangleGeometry.Transform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="3" ScaleY="3"/>
                                    <TranslateTransform X="300" Y="300"/>
                                </TransformGroup>
                            </RectangleGeometry.Transform>
                        </RectangleGeometry>-->
                <!--

                        <PathGeometry>
                            <PathGeometry.Transform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                                    <TranslateTransform X="650" Y="350"/>
                                </TransformGroup>
                            </PathGeometry.Transform>
                            <PathFigure StartPoint="-600,-400">
                                <LineSegment Point="0,-300"/>
                                <LineSegment Point="300,300"/>
                                <LineSegment Point="-100,400"/>
                            </PathFigure>
                        </PathGeometry> 
                    </Path.Data>
                </Path>-->
                <Grid.Clip>
                    <PathGeometry>
                        <PathGeometry.Transform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="0.2" ScaleY="0.2"/>
                                <TranslateTransform X="650" Y="350"/>
                            </TransformGroup>
                        </PathGeometry.Transform>
                        <PathFigure StartPoint="-600,-400">
                            <LineSegment Point="0,-300"/>
                            <LineSegment Point="300,300"/>
                            <LineSegment Point="-100,400"/>
                        </PathFigure>
                    </PathGeometry>
                </Grid.Clip>
            </Grid>
        </TabItem>

        <TabItem Header="TEST11111">
            <Grid Background="Green">
                <Grid.Clip>
                    <EllipseGeometry x:Name="eg" RadiusY="100" RadiusX="100"/>
                </Grid.Clip>
                <Grid.Triggers>
                    <EventTrigger RoutedEvent="Loaded" >
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation From="0" To="1000" Duration="00:00:03" Storyboard.TargetProperty="RadiusY"  
                                            Storyboard.TargetName="eg"/>

                                <DoubleAnimation From="0" To="1000" Duration="00:00:03" Storyboard.TargetProperty="RadiusX"  
                                            Storyboard.TargetName="eg"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Grid.Triggers>
            </Grid>
        </TabItem>

        <TabItem Header="TEST11111">
            <Grid Background="Green">
                <Grid.OpacityMask>
                    <DrawingBrush  TileMode="Tile" Stretch="None" Viewport="1 1 1 1" ViewportUnits="RelativeToBoundingBox" >
                        <DrawingBrush.Drawing>
                            <GeometryDrawing>
                                <GeometryDrawing.Brush>
                                    <RadialGradientBrush>
                                        <GradientStop x:Name="ss" Offset="0" Color="Transparent"/>
                                        <GradientStop Offset="0.3" Color="Transparent"/>
                                        <GradientStop Offset="1.1" Color="Black"/>
                                        <GradientStop Offset="1" Color="Black"/>
                                    </RadialGradientBrush>
                                </GeometryDrawing.Brush>

                                <GeometryDrawing.Geometry>
                                    <!--<RectangleGeometry Rect="0.01 0.01 0.9 0.9"></RectangleGeometry>-->
                                    <PathGeometry>
                                        <PathGeometry.Transform>
                                            <ScaleTransform ScaleX="1" ScaleY="1"/>
                                        </PathGeometry.Transform>
                                        <PathFigure StartPoint="0,0">
                                            <LineSegment Point="160,40"/>
                                            <LineSegment Point="200,100"/>
                                            <LineSegment Point="80,100"/>
                                        </PathFigure>
                                    </PathGeometry>
                                    <!--<EllipseGeometry RadiusX="112" RadiusY="112"/>-->
                                </GeometryDrawing.Geometry>
                            </GeometryDrawing>
                        </DrawingBrush.Drawing>
                    </DrawingBrush>
                </Grid.OpacityMask>
                <!--<Grid.Triggers>
                    <EventTrigger RoutedEvent="Loaded" >
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation From="0" To="1" Duration="00:00:03" Storyboard.TargetProperty="Offset"  
                                            Storyboard.TargetName="ss"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Grid.Triggers>-->
            </Grid>
        </TabItem>



        <TabItem Header="TEST">
            <Grid x:Name="grid" OpacityMask="{StaticResource S.DrawingBrush.Linear}"  Background="Green" Loaded="Grid_Loaded">

            </Grid>
        </TabItem>



        <TabItem Header="TEST">

            <Grid Background="Green" OpacityMask="{StaticResource S.DrawingBrush.Linear}">

                <h:FButton Click="FButton_Click"/>
                <!--<Grid.OpacityMask>
                    <DrawingBrush TileMode="Tile" Viewport="0.5 0.5 0.5 0.5" ViewportUnits="RelativeToBoundingBox" >
                        <DrawingBrush.Drawing>
                            <GeometryDrawing>
                                <GeometryDrawing.Brush>
                                    -->
                <!--<RadialGradientBrush>
                                        <GradientStop Offset="0" Color="Black"/>
                                        <GradientStop Offset="1" Color="Transparent"/>
                                    </RadialGradientBrush>-->
                <!--

                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                        <GradientStop Offset="0" Color="Black"/>
                                        <GradientStop Offset="0.5" Color="Transparent"/>
                                    </LinearGradientBrush>
                                </GeometryDrawing.Brush>
                                <GeometryDrawing.Geometry>
                                    -->
                <!--<EllipseGeometry RadiusX="1" RadiusY="1">
                                        <EllipseGeometry.Transform>
                                            <TransformGroup>
                                                <ScaleTransform ScaleX="0.2" ScaleY="0.2"/>
                                                -->
                <!--<RotateTransform Angle="90"/>
                                                <TranslateTransform X="100" Y="100"/>
                                                <SkewTransform AngleX="130"/>-->
                <!--
                                            </TransformGroup>
                                        </EllipseGeometry.Transform>
                                    </EllipseGeometry>-->
                <!--

                                    <RectangleGeometry Rect="0.01 0.01 0.9 0.9"></RectangleGeometry>
                                    
                                </GeometryDrawing.Geometry>

                                -->
                <!--<GeometryDrawing.Pen>
                                    <Pen Thickness="0.07" Brush="Black"/>
                                </GeometryDrawing.Pen>-->
                <!--
                            </GeometryDrawing>
                        </DrawingBrush.Drawing>
                    </DrawingBrush>
                </Grid.OpacityMask>-->
            </Grid>
        </TabItem>

        <TabItem Header="InvokeTimeSplitAnimationAction">
            <StackPanel x:Name="sssssp">
                <h:FButton Content="1" RenderTransform="{StaticResource S.TransformGroup.Default}">
                    <h:Interaction.Triggers>
                        <h:EventTrigger EventName="Click">
                            <h:InvokeTimeSplitAnimationAction IsUseAll="True" SplitMilliSecond="-800" Target="{Binding ElementName=sssssp}">
                                <h:InvokeTimeSplitAnimationAction.Timelines>
                                    <collections:ArrayList>
                                        <DoubleAnimation Duration="00:00:01" From="0" To="1"  Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"/>
                                        <DoubleAnimation Duration="00:00:01" From="0" To="1"  Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"/>
                                        <DoubleAnimation Duration="00:00:01" From="1" To="0"  Storyboard.TargetProperty="Opacity"/>
                                    </collections:ArrayList>
                                </h:InvokeTimeSplitAnimationAction.Timelines>
                            </h:InvokeTimeSplitAnimationAction>
                        </h:EventTrigger>
                    </h:Interaction.Triggers>
                </h:FButton>

                <h:FButton Content="2" RenderTransform="{StaticResource S.TransformGroup.Default}"/>
                <h:FButton Content="2" RenderTransform="{StaticResource S.TransformGroup.Default}"/>
                <h:FButton Content="2" RenderTransform="{StaticResource S.TransformGroup.Default}"/>
                <h:FButton Content="2" RenderTransform="{StaticResource S.TransformGroup.Default}"/>
                <h:FButton Content="2" RenderTransform="{StaticResource S.TransformGroup.Default}"/>
                <h:FButton Content="2" RenderTransform="{StaticResource S.TransformGroup.Default}"/>
                <h:FButton Content="2" RenderTransform="{StaticResource S.TransformGroup.Default}"/>
                <h:FButton Content="2" RenderTransform="{StaticResource S.TransformGroup.Default}"/>
                <h:FButton Content="2" RenderTransform="{StaticResource S.TransformGroup.Default}"/>

            </StackPanel>
        </TabItem>

        <TabItem Header="InvokeFountainAnimationAction">
            <StackPanel x:Name="ssssp">
                <h:FButton Content="1" RenderTransform="{StaticResource S.TransformGroup.Default}">
                    <h:Interaction.Triggers>
                        <h:EventTrigger EventName="Click">
                            <h:InvokeFountainAnimationAction IsUseAll="True" Target="{Binding ElementName=ssssp}"/>
                        </h:EventTrigger>
                    </h:Interaction.Triggers>
                </h:FButton>

                <h:FButton Content="2" RenderTransform="{StaticResource S.TransformGroup.Default}">
                    <h:Interaction.Triggers>
                        <h:EventTrigger EventName="Click">
                            <h:InvokeFountainAnimationAction IsUseAll="True" Target="{Binding ElementName=ssssp}"/>
                        </h:EventTrigger>
                    </h:Interaction.Triggers>
                </h:FButton>

                <h:FButton Content="3" RenderTransform="{StaticResource S.TransformGroup.Default}">
                    <h:Interaction.Triggers>
                        <h:EventTrigger EventName="Click">
                            <h:InvokeFountainAnimationAction IsUseAll="True" Target="{Binding ElementName=ssssp}"/>
                        </h:EventTrigger>
                    </h:Interaction.Triggers>
                </h:FButton>

                <h:FButton Content="4" RenderTransform="{StaticResource S.TransformGroup.Default}">
                    <h:Interaction.Triggers>
                        <h:EventTrigger EventName="Click">
                            <h:InvokeFountainAnimationAction IsUseAll="True" Target="{Binding ElementName=ssssp}"/>
                        </h:EventTrigger>
                    </h:Interaction.Triggers>
                </h:FButton>


                <h:FButton Content="5" RenderTransform="{StaticResource S.TransformGroup.Default}">
                    <h:Interaction.Triggers>
                        <h:EventTrigger EventName="Click">
                            <h:InvokeFountainAnimationAction IsUseAll="True"/>
                        </h:EventTrigger>
                    </h:Interaction.Triggers>
                </h:FButton>
            </StackPanel>
        </TabItem>

        <TabItem Header="TEST">
            <StackPanel>
                <Button Click="Button_Click" Width="100" Height="40" Content="erete"/>
            </StackPanel>
        </TabItem>

        <TabItem Header="FlashPanel">
            <Grid>
                <UniformGrid Columns="3">
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Purple" Opacity="0.5">

                    </Grid>
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Red">
                        <TextBlock Text="2" FontSize="500" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Green">
                        <TextBlock Text="3" FontSize="500" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Blue">
                        <TextBlock Text="4" FontSize="500" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Gray">
                        <TextBlock Text="5" FontSize="500" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Orange">
                        <TextBlock Text="6" FontSize="500" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                </UniformGrid>

                <h:PagePanel x:Name="pp">
                    <!--<h:PagePanel.AnimationAction>
                        <h:OpacityAction/>
                    </h:PagePanel.AnimationAction>-->

                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Purple" Opacity="0.2">
                        <Grid.Clip>
                            <CombinedGeometry GeometryCombineMode="Exclude">
                                <CombinedGeometry.Geometry1>
                                    <RectangleGeometry Rect="0 0 1000 800" />
                                </CombinedGeometry.Geometry1>

                                <CombinedGeometry.Geometry2>
                                    <RectangleGeometry Rect="500 100 30 30" />
                                </CombinedGeometry.Geometry2>
                            </CombinedGeometry>
                        </Grid.Clip>
                    </Grid>


                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Red">
                        <TextBlock Text="2" FontSize="500" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Green">
                        <TextBlock Text="3" FontSize="500" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Blue">
                        <TextBlock Text="4" FontSize="500" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Gray">
                        <TextBlock Text="5" FontSize="500" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Orange">
                        <TextBlock Text="6" FontSize="500" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                </h:PagePanel>

                <h:FButton Style="{StaticResource S.FButton.Left}" CommandTarget="{Binding ElementName=pp}"/>
                <h:FButton Style="{StaticResource S.FButton.Right}" CommandTarget="{Binding ElementName=pp}"/>
            </Grid>
        </TabItem>

        <TabItem Header="FlashPanel">
            <Grid>
                <h:FlashPanel SplitMilliSecond="-700">
                    <h:FlashPanel.Timelines>
                        <collections:ArrayList>
                            <DoubleAnimation Duration="00:00:01" From="0" To="1"  Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"/>
                            <DoubleAnimation Duration="00:00:01" From="0" To="1"  Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"/>
                            <DoubleAnimation Duration="00:00:01" From="1" To="0"  Storyboard.TargetProperty="Opacity"/>
                        </collections:ArrayList>
                    </h:FlashPanel.Timelines>

                    <Ellipse Fill="Red" Width="200" Height="200" RenderTransform="{StaticResource S.TransformGroup.Default}" RenderTransformOrigin="0.5,0.5"/>
                    <Ellipse Fill="Red" Width="200" Height="200" RenderTransform="{StaticResource S.TransformGroup.Default}" RenderTransformOrigin="0.5,0.5"/>
                    <Ellipse Fill="Red" Width="200" Height="200" RenderTransform="{StaticResource S.TransformGroup.Default}" RenderTransformOrigin="0.5,0.5"/>
                    <Ellipse Fill="Red" Width="200" Height="200" RenderTransform="{StaticResource S.TransformGroup.Default}" RenderTransformOrigin="0.5,0.5"/>
                    <Ellipse Fill="Red" Width="200" Height="200" RenderTransform="{StaticResource S.TransformGroup.Default}" RenderTransformOrigin="0.5,0.5"/>

                </h:FlashPanel>


            </Grid>
        </TabItem>

        <TabItem Header="TupleGroup">
            <Grid>
                <Path Stroke="Red">
                    <Path.Data>
                        <PathGeometry>
                            <PathFigure StartPoint="0,100" >
                                <!--<ArcSegment Point="100,150" Size="300,200" SweepDirection="Clockwise" />-->

                                <BezierSegment Point1="0,0" Point2="300,600" Point3="500,0"/>

                            </PathFigure>
                        </PathGeometry>
                    </Path.Data>
                </Path>
                <!--<Ellipse Fill="Green" Width="300" Height="50" RenderTransform="{StaticResource S.TransformGroup.Default}">-->

                <Ellipse Fill="Green" Width="50" Height="20">
                    <Ellipse.RenderTransform>
                        <MatrixTransform x:Name="mt"/>
                    </Ellipse.RenderTransform>
                    <Ellipse.OpacityMask>
                        <RadialGradientBrush GradientOrigin="0.95,0.5"  Center="0.6,0.5">
                            <GradientStop Color="Black" Offset="0"/>
                            <GradientStop Color="Transparent" Offset="1"/>
                        </RadialGradientBrush>
                    </Ellipse.OpacityMask>
                    <Ellipse.Triggers>
                        <EventTrigger RoutedEvent="Loaded">
                            <BeginStoryboard>
                                <Storyboard RepeatBehavior="Forever" BeginTime="00:00:00" Duration="00:00:12">
                                    <!--<DoubleAnimationUsingPath  Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                        <DoubleAnimationUsingPath.PathGeometry>
                                            <PathGeometry>
                                                <PathFigure StartPoint="0,100" >
                                                    <ArcSegment Point="100,150" Size="300,200" SweepDirection="Clockwise" />
                                                </PathFigure>
                                            </PathGeometry>
                                        </DoubleAnimationUsingPath.PathGeometry>
                                    </DoubleAnimationUsingPath>

                                    <DoubleAnimationUsingPath Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                                        <DoubleAnimationUsingPath.PathGeometry>
                                            <PathGeometry>
                                                <PathFigure StartPoint="0,100" >
                                                    <ArcSegment Point="100,150" Size="300,200" SweepDirection="Clockwise" />
                                                </PathFigure>
                                            </PathGeometry>
                                        </DoubleAnimationUsingPath.PathGeometry>
                                    </DoubleAnimationUsingPath>-->
                                    <!--<MatrixAnimationUsingPath Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(MatrixTransform.Matrix)" DoesRotateWithTangent="True">-->

                                    <MatrixAnimationUsingPath Storyboard.TargetName="mt"  Storyboard.TargetProperty="Matrix" DoesRotateWithTangent="True">
                                        <MatrixAnimationUsingPath.PathGeometry>
                                            <PathGeometry>
                                                <PathFigure StartPoint="0,100" >
                                                    <!--<ArcSegment Point="100,150" Size="1300,1200" SweepDirection="Clockwise" />-->
                                                    <BezierSegment Point1="0,0" Point2="300,600" Point3="500,0"/>
                                                </PathFigure>
                                            </PathGeometry>
                                        </MatrixAnimationUsingPath.PathGeometry>
                                    </MatrixAnimationUsingPath>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Ellipse.Triggers>
                </Ellipse>
            </Grid>
        </TabItem>

        <TabItem Header="TupleGroup">
            <Grid>
                <Path Fill="Red" Stretch="Fill" VerticalAlignment="Center" HorizontalAlignment="Left">
                    <Path.Data>
                        <PathGeometry>
                            <PathFigure StartPoint="0,100" >
                                <LineSegment Point="100,50"/>
                                <ArcSegment Point="100,150" Size="300,200" SweepDirection="Clockwise" />
                                <LineSegment Point="0,100"/>
                            </PathFigure>
                        </PathGeometry>
                    </Path.Data>

                    <Path.Triggers>
                        <EventTrigger RoutedEvent="Loaded">
                            <BeginStoryboard>
                                <Storyboard RepeatBehavior="Forever"  BeginTime="00:00:00" Duration="00:00:02">
                                    <DoubleAnimation From="50" To="500" Storyboard.TargetProperty="Width"/>
                                    <DoubleAnimation From="50" To="500" Storyboard.TargetProperty="Height"/>
                                    <DoubleAnimation From="1" To="0" Storyboard.TargetProperty="Opacity"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Path.Triggers>
                </Path>

                <Path Fill="Red" Stretch="Fill" VerticalAlignment="Center" HorizontalAlignment="Left">
                    <Path.Data>
                        <PathGeometry>
                            <PathFigure StartPoint="0,100" >
                                <LineSegment Point="100,50"/>
                                <ArcSegment Point="100,150" Size="300,200" SweepDirection="Clockwise" />
                                <LineSegment Point="0,100"/>
                            </PathFigure>
                        </PathGeometry>
                    </Path.Data>

                    <Path.Triggers>
                        <EventTrigger RoutedEvent="Loaded">
                            <BeginStoryboard>
                                <Storyboard RepeatBehavior="Forever"  BeginTime="00:00:00.25" Duration="00:00:02">
                                    <DoubleAnimation From="50" To="500" Storyboard.TargetProperty="Width"/>
                                    <DoubleAnimation From="50" To="500" Storyboard.TargetProperty="Height"/>
                                    <DoubleAnimation From="1" To="0" Storyboard.TargetProperty="Opacity"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Path.Triggers>
                </Path>

                <Path Fill="Red" Stretch="Fill" VerticalAlignment="Center" HorizontalAlignment="Left">
                    <Path.Data>
                        <PathGeometry>
                            <PathFigure StartPoint="0,100" >
                                <LineSegment Point="100,50"/>
                                <ArcSegment Point="100,150" Size="300,200" SweepDirection="Clockwise" />
                                <LineSegment Point="0,100"/>
                            </PathFigure>
                        </PathGeometry>
                    </Path.Data>

                    <Path.Triggers>
                        <EventTrigger RoutedEvent="Loaded">
                            <BeginStoryboard>
                                <Storyboard RepeatBehavior="Forever"  BeginTime="00:00:00.5" Duration="00:00:02">
                                    <DoubleAnimation From="50" To="500" Storyboard.TargetProperty="Width"/>
                                    <DoubleAnimation From="50" To="500" Storyboard.TargetProperty="Height"/>
                                    <DoubleAnimation From="1" To="0" Storyboard.TargetProperty="Opacity"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Path.Triggers>
                </Path>

                <Path Fill="Red" Stretch="Fill" VerticalAlignment="Center" HorizontalAlignment="Left">
                    <Path.Data>
                        <PathGeometry>
                            <PathFigure StartPoint="0,100" >
                                <LineSegment Point="100,50"/>
                                <ArcSegment Point="100,150" Size="300,200" SweepDirection="Clockwise" />
                                <LineSegment Point="0,100"/>
                            </PathFigure>
                        </PathGeometry>
                    </Path.Data>

                    <Path.Triggers>
                        <EventTrigger RoutedEvent="Loaded">
                            <BeginStoryboard>
                                <Storyboard RepeatBehavior="Forever" BeginTime="00:00:00.75" Duration="00:00:02">
                                    <DoubleAnimation From="50" To="500" Storyboard.TargetProperty="Width"/>
                                    <DoubleAnimation From="50" To="500" Storyboard.TargetProperty="Height"/>
                                    <DoubleAnimation From="1" To="0" Storyboard.TargetProperty="Opacity"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Path.Triggers>
                </Path>

            </Grid>
        </TabItem>

        <TabItem Header="TupleGroup">
            <!--<Ellipse-->

            <h:EffectBox Style="{StaticResource S.EffectBox.CircleWave}"/>

            <!--<Grid>
                <Ellipse Fill="Red">
                    <Ellipse.Triggers>
                        <EventTrigger RoutedEvent="Loaded">
                            <BeginStoryboard>
                                <Storyboard RepeatBehavior="Forever" BeginTime="00:00:00" Duration="00:00:02">
                                    <DoubleAnimation From="50" To="500" Storyboard.TargetProperty="Width"/>
                                    <DoubleAnimation From="50" To="500" Storyboard.TargetProperty="Height"/>
                                    <DoubleAnimation From="1" To="0" Storyboard.TargetProperty="Opacity"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Ellipse.Triggers>
                </Ellipse>

                <Ellipse Fill="Red">
                    <Ellipse.Triggers>
                        <EventTrigger RoutedEvent="Loaded">
                            <BeginStoryboard>
                                <Storyboard RepeatBehavior="Forever" BeginTime="00:00:00.5" Duration="00:00:02">
                                    <DoubleAnimation From="50" To="500" Storyboard.TargetProperty="Width"/>
                                    <DoubleAnimation From="50" To="500" Storyboard.TargetProperty="Height"/>
                                    <DoubleAnimation From="1" To="0" Storyboard.TargetProperty="Opacity"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Ellipse.Triggers>
                </Ellipse>

                <Ellipse Fill="Red">
                    <Ellipse.Triggers>
                        <EventTrigger RoutedEvent="Loaded">
                            <BeginStoryboard>
                                <Storyboard RepeatBehavior="Forever" BeginTime="00:00:00.8" Duration="00:00:02">
                                    <DoubleAnimation From="50" To="500" Storyboard.TargetProperty="Width"/>
                                    <DoubleAnimation From="50" To="500" Storyboard.TargetProperty="Height"/>
                                    <DoubleAnimation From="1" To="0" Storyboard.TargetProperty="Opacity"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Ellipse.Triggers>
                </Ellipse>
            </Grid>-->
        </TabItem>

        <TabItem Header="TupleGroup">
            <StackPanel>
                <h:TupleGroup>
                    <h:TupleGroup.LeftItem1>
                        <Label Content="LeftItem1"/>
                    </h:TupleGroup.LeftItem1>

                    <h:TupleGroup.LeftItem2>
                        <TextBlock Text="LeftItem2"/>
                    </h:TupleGroup.LeftItem2>

                    <h:TupleGroup.RightItem1>
                        <TextBlock Text="RightItem1"/>
                    </h:TupleGroup.RightItem1>

                    <h:TupleGroup.RightItem2>
                        <TextBlock Text="RightItem2"/>
                    </h:TupleGroup.RightItem2>

                    <TextBlock Text="Center" Background="Red"/>
                </h:TupleGroup>
            </StackPanel>

        </TabItem>


        <TabItem Header="TEST">
            <StackPanel>
                <Slider x:Name="sk_x" DockPanel.Dock="Bottom" Margin="10" Minimum="0" Maximum="1000"/>
                <Slider x:Name="sk_y" DockPanel.Dock="Bottom" Margin="10" Minimum="0" Maximum="1000"/>

                <Slider x:Name="st_x" DockPanel.Dock="Bottom" Margin="10" Value="1" Minimum="-1" Maximum="1" SmallChange="0.1"/>
                <Slider x:Name="st_y" DockPanel.Dock="Bottom" Margin="10" Value="1" Minimum="-1" Maximum="1" SmallChange="0.1"/>

                <Slider x:Name="rt_a" DockPanel.Dock="Bottom" Margin="10" Minimum="0" Maximum="1000" SmallChange="10"/>

                <Slider x:Name="tt_x" DockPanel.Dock="Bottom" Margin="10"  Minimum="0" Maximum="1000" SmallChange="10"/>
                <Slider x:Name="tt_y" DockPanel.Dock="Bottom" Margin="10"  Minimum="0" Maximum="1000" SmallChange="10"/>

                <Grid Background="Red" Width="300" Height="300" RenderTransformOrigin="0.5,0.5">
                    <Grid.RenderTransform>
                        <TransformGroup>
                            <RotateTransform Angle="{Binding ElementName=rt_a,Path=Value}"/>
                            <ScaleTransform ScaleX="{Binding ElementName=st_x,Path=Value}"  ScaleY="{Binding ElementName=st_y,Path=Value}"/>

                            <SkewTransform AngleY="{Binding ElementName=sk_y,Path=Value}" AngleX="{Binding ElementName=sk_x,Path=Value}"/>

                            <TranslateTransform X="{Binding ElementName=tt_x,Path=Value}" Y="{Binding ElementName=tt_y,Path=Value}"/>
                        </TransformGroup>
                    </Grid.RenderTransform>

                    <TextBlock Text="R" FontSize="180" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                </Grid>
            </StackPanel>

        </TabItem>

        <TabItem Header="TEST">
            <!--<StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                -->
            <!--<Rectangle Fill="Red" Width="80" Height="50" Stroke="Yellow">
                    <Rectangle.RenderTransform>
                        <ScaleTransform ScaleX="0.9" ScaleY="1"/>
                    </Rectangle.RenderTransform>
                </Rectangle>-->
            <!--
                <Path Fill="Red" Width="180" HorizontalAlignment="Stretch" Height="50" Stroke="Yellow" Data="M8.9999999,0.5 C13.694421,0.5 17.5,4.7532949 17.5,10 17.5,12.459393 16.663813,14.700507 15.291854,16.387585 L15.088935,16.625462 15.125,16.625 11.5,21.5 9.1249627,27.375 6.7499999,21.5 2.957,16.780495 3.0476097,16.779337 2.9895923,16.717514 C1.4513949,14.998352 0.49999994,12.623352 0.5,10 0.49999994,4.7532949 4.3055796,0.5 8.9999999,0.5 z"/>

                <TextBlock Text="sssss" FontSize="22"/>
            </StackPanel>-->

            <!--<ScrollViewer>
                <Viewbox Height="500">
                    <Grid Background="Yellow" Height="2592" Width="4008">
                        <Path Fill="Green" Data="M2185,1909L2188,1918L2191,1924L2194,1928L2198,1934L2206,1933L2209,1931L2215,1933L2217,1930L2220,1924L2227,1923L2227,1921L2233,1921L2232,1925L2246,1925L2246,1932L2248,1937L2246,1943L2247,1950L2251,1955L2250,1968L2253,1967L2258,1967L2265,1966L2270,1966L2271,1970L2270,1975L2272,1981L2270,1985L2271,1989L2248,1989L2247,2025L2255,2035L2262,2042L2242,2047L2215,2045L2207,2040L2162,2040L2160,2041L2154,2036L2146,2035L2140,2037L2134,2039L2133,2032L2135,2022L2139,2011L2139,2006L2143,1996L2146,1991L2152,1984L2156,1979L2157,1970L2156,1964L2153,1960L2150,1953L2147,1946L2148,1944L2151,1940L2148,1929L2145,1921L2140,1914L2141,1912L2146,1910L2149,1911L2153,1909L2185,1909ZM2142,1907L2139,1908L2136,1900L2141,1895L2144,1893L2148,1897L2144,1899L2143,1902L2142,1907Z"></Path>
                        <Path Fill="Green" Data="M2185,1909L2188,1918L2191,1924L2194,1928L2198,1934L2206,1933L2209,1931L2215,1933L2217,1930L2220,1924L2227,1923L2227,1921L2233,1921L2232,1925L2246,1925L2246,1932L2248,1937L2246,1943L2247,1950L2251,1955L2250,1968L2253,1967L2258,1967L2265,1966L2270,1966L2271,1970L2270,1975L2272,1981L2270,1985L2271,1989L2248,1989L2247,2025L2255,2035L2262,2042L2242,2047L2215,2045L2207,2040L2162,2040L2160,2041L2154,2036L2146,2035L2140,2037L2134,2039L2133,2032L2135,2022L2139,2011L2139,2006L2143,1996L2146,1991L2152,1984L2156,1979L2157,1970L2156,1964L2153,1960L2150,1953L2147,1946L2148,1944L2151,1940L2148,1929L2145,1921L2140,1914L2141,1912L2146,1910L2149,1911L2153,1909L2185,1909ZM2142,1907L2139,1908L2136,1900L2141,1895L2144,1893L2148,1897L2144,1899L2143,1902L2142,1907Z"></Path>
                    </Grid>
                </Viewbox>
            </ScrollViewer>-->

            <h:GeoMap Background="Green" Style="{StaticResource S.GeoMap.China}">
                <h:GeoMap.Resources>
                    <Style TargetType="Polygon">
                        <Setter Property="Fill" Value="{Binding RelativeSource={RelativeSource AncestorType=h:Series},Path=Foreground}"/>
                        <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource AncestorType=h:Series},Path=DisplayName}"/>
                    </Style>
                </h:GeoMap.Resources>
            </h:GeoMap>

        </TabItem>



        <TabItem Header="FluidMoveBehavior">
            <DockPanel>
                <h:FButton DockPanel.Dock="Top" Content="添加.." Command="{Binding RelayCommand}" CommandParameter="Add"/>
                <h:FButton DockPanel.Dock="Top" Content="移除.." Command="{Binding RelayCommand}" CommandParameter="Add"/>

                <ListBox ItemsSource="{Binding Collection}">
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <!--<h:CirclePanel Len="200">
                                -->
                            <!--<h:Interaction.Behaviors>
                                    <h:FluidMoveBehavior AppliesTo="Children"/>
                                </h:Interaction.Behaviors>-->
                            <!--
                            </h:CirclePanel>-->

                            <StackPanel>
                                <h:Interaction.Behaviors>
                                    <h:FluidMoveBehavior AppliesTo="Children"/>
                                </h:Interaction.Behaviors>
                            </StackPanel>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>

                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <h:FButton Content="{Binding Value}" Width="250" Height="Auto" VerticalAlignment="Stretch"/>
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </DockPanel>
        </TabItem>

        <TabItem Header="FluidMoveBehavior">
            <DockPanel>
                <h:FButton DockPanel.Dock="Top" Content="添加.." Command="{Binding RelayCommand}" CommandParameter="Add"/>
                <h:FButton DockPanel.Dock="Top" Content="移除.." Command="{Binding RelayCommand}" CommandParameter="Add"/>

                <ListBox ItemsSource="{Binding Collection}">
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <h:CirclePanel Len="200">
                                <h:Interaction.Behaviors>
                                    <h:FluidMoveBehavior AppliesTo="Children"/>
                                </h:Interaction.Behaviors>
                            </h:CirclePanel>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>

                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <h:FButton Content="{Binding Value}" Width="250" Height="Auto" VerticalAlignment="Stretch"/>
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </DockPanel>
        </TabItem>

        <TabItem Header="UniformGrid">
            <Grid>
                <ListBox>
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <UniformGrid Columns="5"/>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>

                    <h:FButton Width="300" Height="400" Background="Purple"/>
                    <h:FButton Width="300" Height="400"  Background="Gray"/>
                    <h:FButton Width="300" Height="400"  Background="Red"/>
                    <h:FButton Width="300" Height="400"  Background="Orange"/>
                    <h:FButton Width="300" Height="400"  Background="Green"/>
                    <h:FButton Width="300" Height="400"  Background="Beige"/>
                    <h:FButton Width="300" Height="400"  Background="Blue"/>
                    <h:FButton Width="300" Height="400"  Background="Beige"/>
                    <h:FButton Width="300" Height="400"  Background="Green"/>
                    <h:FButton Width="300" Height="400"  Background="Orange"/>
                    <h:FButton Width="300" Height="400"  Background="Red"/>
                    <h:FButton Width="300" Height="400"  Background="Gray"/>
                    <h:FButton Width="300" Height="400"  Background="Purple"/>
                </ListBox>
            </Grid>
        </TabItem>
        <TabItem Header="CoverPanel">
            <Grid>
                <h:CoverPanel ScaleMin="0.3" PressValue="0.6">
                    <h:FButton Width="300" Height="400" Background="Purple"/>
                    <h:FButton Width="300" Height="400"  Background="Gray"/>
                    <h:FButton Width="300" Height="400"  Background="Red"/>
                    <h:FButton Width="300" Height="400"  Background="Orange"/>
                    <h:FButton Width="300" Height="400"  Background="Green"/>
                    <h:FButton Width="300" Height="400"  Background="Beige"/>
                    <h:FButton Width="300" Height="400"  Background="Blue"/>
                    <h:FButton Width="300" Height="400"  Background="Beige"/>
                    <h:FButton Width="300" Height="400"  Background="Green"/>
                    <h:FButton Width="300" Height="400"  Background="Orange"/>
                    <h:FButton Width="300" Height="400"  Background="Red"/>
                    <h:FButton Width="300" Height="400"  Background="Gray"/>
                    <h:FButton Width="300" Height="400"  Background="Purple"/>
                </h:CoverPanel>
            </Grid>
        </TabItem>

        <TabItem Header="GitTop">
            <Grid Background="Red">
                <h:GitTopContainer>
                    <h:GitTopItem Background="Purple">
                        <h:GitTopItem.HeaderContent>
                            <TextBlock Text="测试" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </h:GitTopItem.HeaderContent>

                        <h:FTextBox Margin="10,2" h:Cattach.Watermark="请输入筛选条件" h:Cattach.FIcon="&#xe787;"/>

                    </h:GitTopItem>

                    <h:GitTopItem Background="{DynamicResource S.Brush.Accent}">
                        <h:GitTopItem.HeaderContent>
                            <TextBlock Text="测试" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </h:GitTopItem.HeaderContent>

                        <h:FTextBox Margin="10,2" h:Cattach.Watermark="请输入筛选条件" h:Cattach.FIcon="&#xe787;"/>

                    </h:GitTopItem>
                </h:GitTopContainer>
            </Grid>
        </TabItem>

        <TabItem Header="Chart2D">
            <Grid>
                <Canvas Background="LightGray">
                    <Path Fill="Red">
                        <Path.Data>
                            <PathGeometry>
                                <PathFigure StartPoint="0,100" >
                                    <LineSegment Point="100,50"/>
                                    <ArcSegment Point="100,150" Size="300,200" SweepDirection="Clockwise" />
                                    <LineSegment Point="0,100"/>
                                </PathFigure>
                            </PathGeometry>
                        </Path.Data>
                    </Path>
                </Canvas>
            </Grid>
        </TabItem>

        <TabItem Header="LeftMenuTest">
            <UniformGrid Columns="2">
                <h:LeftMenu>
                    <h:LinkAction DisplayName="Home" Logo="&#xe7b3;"/>
                    <h:LinkAction DisplayName="Counter" Logo="&#xe7b8;"/>
                    <h:LinkAction DisplayName="Fetch Data" Logo="&#xe7be;"/>
                </h:LeftMenu>

                <h:LeftMenu Style="{DynamicResource S.LeftMenu.LinkActionGroup.Default}">
                    <h:LinkActionGroup DisplayName="扩展控件" Logo="&#xe7b3;"  IsExpanded="True">
                        <h:LinkActionGroup.Links>
                            <h:LinkAction  DisplayName="数据列表" Logo="&#xe69f;"  Controller="Loyout" Action="RealData" />
                            <h:LinkAction  DisplayName="穿梭控件" Logo="&#xe69f;" Controller="Custom" Action="Shuttle"/>
                            <h:LinkAction  DisplayName="属性表单" Logo="&#xe69e;" Controller="Custom" Action="PropertyGrid"/>
                            <h:LinkAction  DisplayName="网络诊断" Logo="&#xe69e;" Controller="Custom" Action="Ping"/>
                            <h:LinkAction  DisplayName="步骤进度" Logo="&#xe69e;" Controller="Custom" Action="Step"/>
                            <h:LinkAction  DisplayName="导航菜单" Logo="&#xe69e;" Controller="Custom" Action="LeftMenu"/>
                        </h:LinkActionGroup.Links>
                    </h:LinkActionGroup>

                    <h:LinkActionGroup DisplayName="数据分析" Logo="&#xe7b8;">
                        <h:LinkActionGroup.Links>
                            <h:LinkAction  DisplayName="实时数据" Logo="&#xe69f;"  Controller="Loyout" Action="RealData" />
                            <h:LinkAction  DisplayName="历史数据"  Logo="&#xe6a3;" Controller="Loyout"  Action="History"/>
                            <h:LinkAction  DisplayName="年度报表"  Logo="&#xe6a3;" Controller="Loyout"  Action="RealData"/>
                            <h:LinkAction  DisplayName="监控管理"  Logo="&#xe6a3;" Controller="Loyout" Action="RealData"/>
                        </h:LinkActionGroup.Links>
                    </h:LinkActionGroup>

                    <h:LinkActionGroup DisplayName="综合管理" Logo="&#xe7be;">
                        <h:LinkActionGroup.Links>
                            <h:LinkAction  DisplayName="用户管理" Logo="&#xe69f;" Controller="Loyout" Action="RealData"/>
                            <h:LinkAction  DisplayName="档案管理" Logo="&#xe69e;" Controller="Loyout" Action="RealData"/>
                            <h:LinkAction  DisplayName="日志管理" Logo="&#xe69f;" Controller="Loyout" Action="RealData"/>
                            <h:LinkAction  DisplayName="权限管理" Logo="&#xe69f;" Controller="Loyout" Action="RealData"/>
                            <h:LinkAction  DisplayName="角色管理" Logo="&#xe69f;" Controller="Loyout" Action="RealData"/>
                        </h:LinkActionGroup.Links>
                    </h:LinkActionGroup>
                </h:LeftMenu>
            </UniformGrid>
        </TabItem>

        <TabItem Header="StepStateTest">
            <StackPanel>
                <h:StepState>
                    <h:StepItem DisplayName="1" Message="步骤一" Percent="50" State="2"/>
                    <h:StepItem DisplayName="2" Message="步骤二" Percent="10"  State="-1"/>
                    <h:StepItem DisplayName="3" Message="步骤三" Percent="80"  State="0"/>
                    <h:StepItem DisplayName="4" Message="步骤四" Percent="30" State="0"/>
                </h:StepState>

                <h:StepState>
                    <h:StepItem DisplayName="1" Message="步骤一" Percent="50" State="2"/>
                    <h:StepItem DisplayName="2" Message="步骤二" Percent="10"  State="1"/>
                    <h:StepItem DisplayName="3" Message="步骤三" Percent="80"  State="0"/>
                    <h:StepItem DisplayName="4" Message="步骤四" Percent="30" State="0"/>
                </h:StepState>

                <h:StepState>
                    <h:StepItem DisplayName="1" Message="步骤一" Percent="50" State="2"/>
                    <h:StepItem DisplayName="2" Message="步骤二" Percent="10"  State="2"/>
                    <h:StepItem DisplayName="3" Message="步骤三" Percent="80"  State="2"/>
                    <h:StepItem DisplayName="4" Message="步骤四" Percent="30" State="2"/>
                </h:StepState>
            </StackPanel>
        </TabItem>

        <TabItem Header="PingStateTest">
            <StackPanel>
                <h:PingState Start="True" IP="192.168.18.1"/>
                <h:PingState Start="True" IP="www.baidu.com"/>

                <h:PingState Start="False"  IP="192.168.18.1"/>
                <h:PingState Start="False"  IP="www.baidu.com"/>

                <h:PingState Start="True" IP="192.168.18.1" Style="{DynamicResource S.PingState.Single}"/>
                <h:PingState Start="True" IP="www.baidu.com"  Style="{DynamicResource S.PingState.Single}"/>

                <h:PingState Start="False" IP="192.168.18.1" Style="{DynamicResource S.PingState.Single}"/>
                <h:PingState  Start="False" IP="www.baidu.com"  Style="{DynamicResource S.PingState.Single}"/>
            </StackPanel>
        </TabItem>
    </TabControl>

</h:MainWindowBase>
