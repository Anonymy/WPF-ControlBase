<Page x:Class="HeBianGu.Applications.ControlBase.Demo.Pages.StoryBoardPlayerPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:HeBianGu.App.Blur"
      xmlns:h="QQ:908293466" 
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800" Background="{DynamicResource {x:Static h:BrushKeys.BackgroundDefault}}"
      DataContext="{Binding Source={StaticResource S.DataSource.Locator},Path=ShellViewModel}" 
      Title="StoryBoardPlayerPage">

    <Grid>
        <h:Interaction.Behaviors>
            <h:FountainAnimationBehavior IsUseAll="True"  PointLeft="-2000" PointTop="2000" Split="0.2"/>
        </h:Interaction.Behaviors>
        
        <Grid.RowDefinitions>
            <RowDefinition Height="0"/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition Height="50"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="grid_Column_left" Width="0"/>
                <ColumnDefinition Width="0"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            
            <Grid Width="Auto" Background="{DynamicResource {x:Static h:BrushKeys.BackgroundDefault}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="80"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <Grid x:Name="grid_menu" Grid.Row="0" VerticalAlignment="Center" HorizontalAlignment="Stretch" Margin="0,0" Width="Auto" Visibility="Hidden">
                    <!--隐藏菜单-->
                    <h:FButton Style="{DynamicResource S.FButton.Style.Transparent}" Icon="&#xe7f2;"  FIconSize="15"  Margin="20,-15,0,0" HorizontalAlignment="Left">
                        <h:Interaction.Triggers>
                            <h:EventTrigger EventName="Click">
                                <h:ChangePropertyAction TargetName="grid_Column_left" PropertyName="Width">
                                    <h:ChangePropertyAction.Value>
                                        <GridLength>0.0</GridLength>
                                    </h:ChangePropertyAction.Value>
                                </h:ChangePropertyAction>
                                <h:ChangePropertyAction TargetName="btn_showmenu" PropertyName="Visibility" Value="Visible"/>
                            </h:EventTrigger>
                        </h:Interaction.Triggers>
                    </h:FButton>
                </Grid>

            </Grid>

            <Grid Grid.Column="2" Background="Black">
                <Grid VerticalAlignment="Bottom" Height="50" Background="{DynamicResource {x:Static h:BrushKeys.Dark3}}">
                    <ToggleButton  IsChecked="{Binding StoryBoardPlayerViewModel.PlayMode}"
                                          Content="&#xe76e;"
                                          Grid.Column="3"  Margin="0,5,0,0"
                                          h:Cattach.Icon="&#xe749;" h:Cattach.FIconSize="25"
                                          Style="{DynamicResource {x:Static h:ToggleButtonKeys.DoubleFIconChecked}}">
                        <h:Interaction.Triggers>
                            <h:EventTrigger EventName="Checked">
                                <h:InvokeCommandAction Command="{Binding StoryBoardPlayerViewModel.RelayCommand}" CommandParameter="ToggleButton.Click.Play"/>
                            </h:EventTrigger>

                            <h:EventTrigger EventName="Unchecked">
                                <h:InvokeCommandAction Command="{Binding StoryBoardPlayerViewModel.RelayCommand}" CommandParameter="ToggleButton.Click.Stop"/>
                            </h:EventTrigger>
                        </h:Interaction.Triggers>
                    </ToggleButton>
                </Grid>

                <ListBox ItemsSource="{Binding StoryBoardPlayerViewModel.Collection}" Margin="50,0,0,0"  TextBlock.Foreground="White" HorizontalAlignment="Left" BorderBrush="Transparent" IsHitTestVisible="False">
                    <ListBox.Resources>
                        <DataTemplate DataType="{x:Type local:StoryBoardItemViewModel}">
                            <Grid>
                                <TextBlock  HorizontalAlignment="Left" FontSize="20" Foreground="White">
                                          <Run Text="条目"/>
                                          <Run Text="{Binding Name}"/>
                                          <Run Text="： - 当前帧"/>
                                          <Run Text="{Binding Value}"/>
                                </TextBlock>
                            </Grid>
                        </DataTemplate>
                    </ListBox.Resources>
                </ListBox>
            </Grid>

            <Border BorderThickness="0,0.5,0,0" BorderBrush="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}"/>

            <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Center" Background="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}"></GridSplitter>

            <!--显示菜单-->
            <h:FButton x:Name="btn_showmenu" Style="{StaticResource S.FButton.Style.Transparent}" Icon="&#xe7f1;" Visibility="Collapsed"
                                           Command="{x:Static h:CommandService.VisibleOfOpacityCommand}" FIconSize="15" Grid.ColumnSpan="3"
                                           CommandParameter="{Binding ElementName=grid_menu}" Width="30" HorizontalAlignment="Left" Margin="15,15,0,0"
                                           VerticalAlignment="Top">
                <h:Interaction.Triggers>
                    <h:EventTrigger EventName="Click">
                        <h:ChangePropertyAction TargetName="grid_Column_left" PropertyName="Width">
                            <h:ChangePropertyAction.Value>
                                <GridLength>400.0</GridLength>
                            </h:ChangePropertyAction.Value>
                        </h:ChangePropertyAction>
                        <h:ChangePropertyAction TargetName="btn_showmenu" PropertyName="Visibility" Value="Collapsed"/>
                    </h:EventTrigger>
                </h:Interaction.Triggers>
            </h:FButton>
        </Grid>

        <Grid Grid.Row="2" Margin="10,0,10,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="40"/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="200"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <h:FButton  Style="{StaticResource S.FButton.Style.Transparent}" Icon="&#xe856;" Command="{Binding RelayCommand}" CommandParameter="Button.Add" />

            <Border BorderBrush="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}" BorderThickness="0,1,1,1"/>
            <Border Grid.Column="1" BorderBrush="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}" BorderThickness="0,1,1,1"/>


            <h:StoryBoardPlayer SliderMargin="200,0,0,0" Grid.Row="0" Grid.RowSpan="2" Grid.Column="0" Grid.ColumnSpan="2" 
                                            MaxValue="{Binding StoryBoardPlayerViewModel.MaxValue}"
                                            MinValue="{Binding StoryBoardPlayerViewModel.MinValue}"
                                            Value="{Binding StoryBoardPlayerViewModel.Value,Mode=TwoWay}"
                                            ItemsSource="{Binding StoryBoardPlayerViewModel.Collection}">
                <h:StoryBoardPlayer.Resources>
                    <DataTemplate DataType="{x:Type local:StoryBoardItemViewModel}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="200"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <Grid>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">

                                    <h:FButton Style="{StaticResource S.FButton.Style.Transparent}" Icon="&#xe886;" FIconSize="16" FIconMargin="0,4,0,0" 
                                               RenderTransform="{StaticResource {x:Static h:SystemKeys.TransformGroup}}"
                                               Command="{Binding RelayCommand}" CommandParameter="StoryBoardItem.Button.Delelte" />

                                    <ToggleButton x:Name="toggle" IsChecked="{Binding PlayMode}"
                                          Content="&#xe76e;"   RenderTransform="{StaticResource {x:Static h:SystemKeys.TransformGroup}}"
                                          Grid.Column="3"  Margin="10,5,10,0"
                                          h:Cattach.Icon="&#xe749;" h:Cattach.FIconSize="25"
                                          Style="{DynamicResource {x:Static h:ToggleButtonKeys.DoubleFIconChecked}}">
                                        <h:Interaction.Triggers>
                                            <h:EventTrigger EventName="Checked">
                                                <h:InvokeCommandAction Command="{Binding ToggleButtonCheckChangedCommand}" CommandParameter="{Binding ElementName=toggle}"/>
                                            </h:EventTrigger>

                                            <h:EventTrigger EventName="Unchecked">
                                                <h:InvokeCommandAction Command="{Binding ToggleButtonCheckChangedCommand}" CommandParameter="{Binding ElementName=toggle}"/>
                                            </h:EventTrigger>
                                        </h:Interaction.Triggers>
                                    </ToggleButton>

                                    <ToggleButton IsChecked="{Binding IsEnbled}"
                                          Content="&#xe81d;"  RenderTransform="{StaticResource {x:Static h:SystemKeys.TransformGroup}}"
                                          Grid.Column="3"  Margin="0,5,0,0"
                                          h:Cattach.Icon="&#xe81b;" h:Cattach.FIconSize="25"
                                          Style="{DynamicResource {x:Static h:ToggleButtonKeys.DoubleFIconChecked}}"/>
                                </StackPanel>

                                <Border BorderBrush="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}" BorderThickness="0,1,1,1"/>
                            </Grid>

                            <Border Grid.Column="1" BorderBrush="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}" BorderThickness="0,1,1,1"/>

                            <h:StoryBoardToolBar Grid.Column="1" LeftPercent="{Binding LeftPercent,Mode=TwoWay}"  RenderTransform="{StaticResource {x:Static h:SystemKeys.TransformGroup}}"
                                                             RightPercent="{Binding RightPercent,Mode=TwoWay}" MaxValue="{Binding StoryBoardPlayerViewModel.MaxValue}"
                                                             IsEnabled="{Binding IsEnbled,Converter={x:Static h:XConverter.TrueToFalseConverter}}"/>
                        </Grid>
                    </DataTemplate>
                </h:StoryBoardPlayer.Resources>

            </h:StoryBoardPlayer>
        </Grid>

        <Grid Grid.Row="3">
            <Grid.Resources>
                <Style TargetType="StackPanel">
                    <Setter Property="Height" Value="50"/>
                </Style>
            </Grid.Resources>
            <StackPanel Orientation="Horizontal" Margin="20,0"  RenderTransform="{StaticResource {x:Static h:SystemKeys.TransformGroup}}">
                <TextBlock VerticalAlignment="Center">
                     <Run Text="播放速度"/>
                       <Run Text="：" />
                </TextBlock>

                <Slider Width="200" Value="{Binding StoryBoardPlayerViewModel.Speed}" IsSnapToTickEnabled="True" Ticks="-8 -4 -3 -2 -1 0 1 2 3 4 8" Minimum="-8" Maximum="8"/>

                <TextBlock VerticalAlignment="Center">
                    <Run  Text="{Binding StoryBoardPlayerViewModel.Speed}"/>
                     <Run Text="X"/>
                </TextBlock>
            </StackPanel>

            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center"  RenderTransform="{StaticResource {x:Static h:SystemKeys.TransformGroup}}">
                <TextBlock VerticalAlignment="Center">
                     <Run Text="总帧数"/>
                       <Run Text="：" />
                </TextBlock>
                <TextBlock VerticalAlignment="Center">
                    <Run Text="{Binding StoryBoardPlayerViewModel.Value}"/>
                    <Run Text="/" />
                    <Run Text="{Binding StoryBoardPlayerViewModel.MaxValue}"/>
                </TextBlock>
            </StackPanel>
        </Grid>
    </Grid>
</Page>
