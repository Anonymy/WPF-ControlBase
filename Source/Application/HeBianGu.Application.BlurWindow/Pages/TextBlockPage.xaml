<Page x:Class="WpfControlDemo.View.TextBlockPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:WpfControlDemo.View"
      xmlns:controls="clr-namespace:HeBianGu.General.WpfControlLib;assembly=HeBianGu.General.WpfControlLib"
      xmlns:system="clr-namespace:System;assembly=mscorlib"
      mc:Ignorable="d" 
      d:DesignHeight="1000" d:DesignWidth="1000"
      Title="TextBlockPage">

    <FrameworkElement.Resources>
        <system:String x:Key="TheText">
            I am leaving this harbour
            giving urban a farewell
            its habitants seem too keen on God
            I cannot stomach their rights and wrongs

            I have lost my origin
            and I don't want to find it again
            rather sailing into nature's laws
            and be held by ocean's paws

            (Wanderlust, Volta, Björk)
        </system:String>
    </FrameworkElement.Resources>

    <Grid>
        <TabControl >
            <TabItem Header="跑马灯">
                <ScrollViewer>
                    <StackPanel>
                        <GroupBox Header="跑马灯">
                            <StackPanel>
                                <controls:AnimatedTextBlock x:Name="AnimatedTextBlock"
                                  Text="{StaticResource TheText}"
                                  FontSize="20"
                                  FontWeight="Bold"
                                  Foreground="HotPink"
                                  RepeatBehavior="Forever"
                                  FontFamily="Palatino Linotype"
                                  Typography.Capitals="SmallCaps"
                                  TextWrapping="Wrap"
                                  TextAlignment="Justify" />
                                <TextBlock Text="Segment Length"
                           Margin="5" />
                            <ComboBox Margin="5"
                          SelectedItem="{Binding ElementName=AnimatedTextBlock, Path=SegmentLength}">
                                <system:Int32>1</system:Int32>
                                <system:Int32>2</system:Int32>
                                <system:Int32>3</system:Int32>
                                <system:Int32>4</system:Int32>
                                <system:Int32>5</system:Int32>
                                <system:Int32>6</system:Int32>
                                <system:Int32>7</system:Int32>
                                <system:Int32>8</system:Int32>
                                <system:Int32>9</system:Int32>
                                <system:Int32>10</system:Int32>
                            </ComboBox>
                            <TextBlock Text="Mode"
                           Margin="5" />
                            <ComboBox Margin="5"
                          SelectedItem="{Binding ElementName=AnimatedTextBlock, Path=Mode}">
                                <controls:AnimatedTextMode>None</controls:AnimatedTextMode>
                                <controls:AnimatedTextMode>Reveal</controls:AnimatedTextMode>
                                <controls:AnimatedTextMode>Hide</controls:AnimatedTextMode>
                                <controls:AnimatedTextMode>RevealAndHide</controls:AnimatedTextMode>
                                <controls:AnimatedTextMode>Spotlight</controls:AnimatedTextMode>
                            </ComboBox>
                            <TextBlock Text="Order"
                           Margin="5" />
                            <ComboBox Margin="5"
                          SelectedItem="{Binding ElementName=AnimatedTextBlock, Path=Order}">
                                <controls:AnimatedTextOrder>Forward</controls:AnimatedTextOrder>
                                <controls:AnimatedTextOrder>Backward</controls:AnimatedTextOrder>
                                <controls:AnimatedTextOrder>Random</controls:AnimatedTextOrder>
                            </ComboBox>
                            <CheckBox Content="Continuous"
                          Margin="5"
                          Checked="CheckBox_Checked"
                          Unchecked="CheckBox_Checked"
                          IsChecked="True" />
                        </StackPanel>

                        </GroupBox>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>
            <TabItem Header="闪烁文本">
                <ScrollViewer>
                    <StackPanel>
                        <GroupBox Header="闪烁文本">
                            <Label Style="{StaticResource S.Label.Flash}" Content="注意:闪烁文本" Foreground="Red"/>
                        </GroupBox>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>

            <TabItem Header="基础功能">
                <ScrollViewer>
                    <StackPanel>
                        <GroupBox Header="LineStackingStrategy - MaxHeight">
                            <TextBlock LineStackingStrategy="MaxHeight" LineHeight="10" Width="500" TextWrapping="Wrap"
     Background="Yellow">
      Use the <Span FontSize="30">LineStackingStrategy</Span> property to determine how a line box is
      created for each line. A value of <Span FontSize="20">MaxHeight</Span> specifies that the stack
      height is the smallest value that contains all the inline elements on that line when those
      elements are properly aligned. A value of <Span FontSize="20">BlockLineHeight</Span> specifies
      that the stack height is determined by the block element LineHeight property value.
                            </TextBlock>
                        </GroupBox>

                        <GroupBox Header="LineStackingStrategy - BlockLineHeight">
                            <TextBlock LineStackingStrategy="BlockLineHeight" LineHeight="10" Width="500" TextWrapping="Wrap" 
     Background="Blue" Margin="0,40,0,0">
      Use the <Span FontSize="30">LineStackingStrategy</Span> property to determine how a line box is
      created for each line. A value of <Span FontSize="20">MaxHeight</Span> specifies that the stack
      height is the smallest value that contains all the inline elements on that line when those
      elements are properly aligned. A value of <Span FontSize="20">BlockLineHeight</Span> specifies
      that the stack height is determined by the block element LineHeight property value.
                            </TextBlock>
                        </GroupBox>

                        <GroupBox Header="TextAlignment - Justify">
                            <TextBlock LineStackingStrategy="MaxHeight" LineHeight="10" Width="500" TextWrapping="Wrap" TextAlignment="Justify">
      Use the <Span FontSize="30">LineStackingStrategy</Span> property to determine how a line box is
      created for each line. A value of <Span FontSize="20">MaxHeight</Span> specifies that the stack
      height is the smallest value that contains all the inline elements on that line when those
      elements are properly aligned. A value of <Span FontSize="20">BlockLineHeight</Span> specifies
      that the stack height is determined by the block element LineHeight property value.
                            </TextBlock>
                        </GroupBox>


                        <GroupBox Header="TextDecorations - UnderLine - PenOffset">
                            <TextBlock LineStackingStrategy="MaxHeight" LineHeight="10" Width="500" TextWrapping="Wrap">
                                <TextBlock.TextDecorations>
                                    <TextDecoration PenOffset="3"/>
                                </TextBlock.TextDecorations>
      Use the <Span FontSize="30">LineStackingStrategy</Span> property to determine how a line box is
      created for each line. A value of <Span FontSize="20">MaxHeight</Span> specifies that the stack
      height is the smallest value that contains all the inline elements on that line when those
      elements are properly aligned. A value of <Span FontSize="20">BlockLineHeight</Span> specifies
      that the stack height is determined by the block element LineHeight property value.
                            </TextBlock>
                        </GroupBox>

                        <GroupBox Header="TextDecorations - BaseLine">
                            <TextBlock LineStackingStrategy="MaxHeight" LineHeight="10" Width="500" TextWrapping="Wrap">
                                <TextBlock.TextDecorations>
                                    <TextDecoration Location="BaseLine">
                                        <TextDecoration.Pen>
                                            <Pen Thickness="2">
                                                <Pen.DashStyle>
                                                    <DashStyle Dashes="5 5"/>
                                                </Pen.DashStyle>
                                                <Pen.Brush>
                                                    <LinearGradientBrush>
                                                        <GradientStop Offset="0" Color="Red"/>
                                                        <GradientStop Offset="1" Color="Yellow"/>
                                                    </LinearGradientBrush>
                                                </Pen.Brush>
                                            </Pen>
                                        </TextDecoration.Pen>
                                    </TextDecoration>
                                </TextBlock.TextDecorations>
                                
      Use the <Span FontSize="30">LineStackingStrategy</Span> property to determine how a line box is
      created for each line. A value of <Span FontSize="20">MaxHeight</Span> specifies that the stack
      height is the smallest value that contains all the inline elements on that line when those
      elements are properly aligned. A value of <Span FontSize="20">BlockLineHeight</Span> specifies
      that the stack height is determined by the block element LineHeight property value.
                               
                            </TextBlock>
                        </GroupBox>

                        <GroupBox Header="TextDecorations - OverLine">
                            <TextBlock LineStackingStrategy="MaxHeight" LineHeight="10" Width="500" TextWrapping="Wrap" TextDecorations="OverLine">
      Use the <Span FontSize="30">LineStackingStrategy</Span> property to determine how a line box is
      created for each line. A value of <Span FontSize="20">MaxHeight</Span> specifies that the stack
      height is the smallest value that contains all the inline elements on that line when those
      elements are properly aligned. A value of <Span FontSize="20">BlockLineHeight</Span> specifies
      that the stack height is determined by the block element LineHeight property value.
                            </TextBlock>
                        </GroupBox>

                        <GroupBox Header="TextDecorations - StrikeThrough">
                            <TextBlock LineStackingStrategy="MaxHeight" LineHeight="10" Width="500" TextWrapping="Wrap">
                                <TextBlock.TextDecorations>
                                    <TextDecoration Location="StrikeThrough" PenOffset="-1"/>
                                    <TextDecoration Location="StrikeThrough">
                                        <TextDecoration.Pen>
                                            <Pen Brush="Red" Thickness="2"/>
                                        </TextDecoration.Pen>
                                    </TextDecoration>
                                    <TextDecoration Location="StrikeThrough"  PenOffset="1"/>
                                </TextBlock.TextDecorations>
      Use the <Span FontSize="30">LineStackingStrategy</Span> property to determine how a line box is
      created for each line. A value of <Span FontSize="20">MaxHeight</Span> specifies that the stack
      height is the smallest value that contains all the inline elements on that line when those
      elements are properly aligned. A value of <Span FontSize="20">BlockLineHeight</Span> specifies
      that the stack height is determined by the block element LineHeight property value. 
                            </TextBlock>
                        </GroupBox>

                        <GroupBox Header="TextDecorations - Animation">
                            <TextBlock LineStackingStrategy="MaxHeight" LineHeight="10" Width="500" TextWrapping="Wrap">
                                <TextBlock.TextDecorations>
                                    <TextDecoration PenThicknessUnit="Pixel" PenOffsetUnit="Pixel">
                                        <TextDecoration.Pen>
                                            <Pen Thickness="2">
                                                <Pen.DashStyle>
                                                    <DashStyle Dashes="5 5"/>
                                                </Pen.DashStyle>
                                                <Pen.Brush>
                                                    <LinearGradientBrush>
                                                        <GradientStop Offset="0" Color="Red"/>
                                                        <GradientStop Offset="1" Color="Yellow"/>
                                                    </LinearGradientBrush>
                                                </Pen.Brush>
                                            </Pen>
                                        </TextDecoration.Pen>
                                    </TextDecoration>
                                </TextBlock.TextDecorations>
                                <TextBlock.Triggers>
                                    <EventTrigger RoutedEvent="Loaded">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetProperty="TextDecorations[0].PenOffset" From="0" To="-15" AutoReverse="True" RepeatBehavior="Forever"/>
                                                <DoubleAnimation Storyboard.TargetProperty="TextDecorations[0].Pen.DashStyle.Offset" From="0" To="100" Duration="00:00:10" AutoReverse="True" RepeatBehavior="Forever"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                </TextBlock.Triggers>
      Use the <Span FontSize="30">LineStackingStrategy</Span> property to determine how a line box is
      created for each line. A value of <Span FontSize="20">MaxHeight</Span> specifies that the stack
      height is the smallest value that contains all the inline elements on that line when those
      elements are properly aligned. A value of <Span FontSize="20">BlockLineHeight</Span> specifies
      that the stack height is determined by the block element LineHeight property value.
                              
                              
                            </TextBlock>
                        </GroupBox>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>
        </TabControl >

    </Grid>
</Page>
