<h:MainWindowBase
    x:Class="JJ.Kby.App.Demo1.ShellWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:JJ.Kby.App.Demo1"
        xmlns:h="QQ:908293466" xmlns:cl="clr-namespace:System.Collections;assembly=mscorlib"
    DataContext="{Binding Source={StaticResource S.DataSource.Locator},Path=ShellViewModel}" 
        Style="{DynamicResource S.Window.Main.Default}"
        NotifyIconSource="/HeBianGu.General.WpfControlLib;component/Resources/iBook.ico"
        mc:Ignorable="d" Title="可搬移式训练电磁环境够设系统" Height="800" Width="1200" CaptionHeight="50">
    <Grid>
        <Grid>
            <h:GitTopContainer HeaderHeight="0">
                <h:GitTopContainer.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Grid/>
                    </ItemsPanelTemplate>
                </h:GitTopContainer.ItemsPanel>

                <h:GitTopContainer.CenterContent>
                    <Grid>

                        <h:ImageCore ImageSource="..\Resources\2.5米_ALOS_彩色-1.tif" Location="0,0,600,600" OperateType="{Binding ElementName=list_selecttype,Path=SelectedItem}">
                            <!--<h:ImageCore ImageSource="..\Resources\捕获.PNG">-->
                            <h:ImageCore.Resources>
                                <Style TargetType="Ellipse">
                                    <Setter Property="RenderTransform" Value="{StaticResource S.TransformGroup.Default}"/>
                                    <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                                </Style>
                            </h:ImageCore.Resources>

                            <h:Interaction.Behaviors>
                                <h:ImageBaseMouseWheelBehavior/>
                                <h:ImageBaseMouseEnlargeBehavior/>
                                <h:ImageBaseMouseDragBehavior/>
                                <h:ImageBaseMouseSignBehavior/>
                                <h:ImageBaseMouseBubbleBehavior/>
                            </h:Interaction.Behaviors>

                            <h:ImageCore.InnerContent>
                                <UniformGrid HorizontalAlignment="Left" VerticalAlignment="Top" Margin="200">
                                    <Grid>
                                        <h:FlashPanel SplitMilliSecond="-700" Height="300" Width="300">
                                            <h:FlashPanel.Timelines>
                                                <cl:ArrayList>
                                                    <DoubleAnimation Duration="00:00:01" From="0" To="1"  Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"/>
                                                    <DoubleAnimation Duration="00:00:01" From="0" To="1"  Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"/>
                                                    <DoubleAnimation Duration="00:00:01" From="1" To="0"  Storyboard.TargetProperty="Opacity"/>
                                                </cl:ArrayList>
                                            </h:FlashPanel.Timelines>

                                            <Ellipse Fill="Red"/>
                                            <Ellipse Fill="Red"/>
                                            <Ellipse Fill="Red"/>
                                            <Ellipse Fill="Red"/>
                                            <Ellipse Fill="Red"/>
                                        </h:FlashPanel>

                                        <!--<TextBlock Text="&#xe6f9;" Style="{DynamicResource S.TextBlock.FIcon}" FontSize="33" Foreground="Red" HorizontalAlignment="Center" VerticalAlignment="Center">
                                            <TextBlock.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimation From="0,-50,0,0" To="0,0,0,0" Duration="00:00:01" Storyboard.TargetProperty="Margin" RepeatBehavior="Forever">
                                                                <ThicknessAnimation.EasingFunction>
                                                                    <BounceEase/>
                                                                </ThicknessAnimation.EasingFunction>
                                                            </ThicknessAnimation>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </TextBlock.Triggers>
                                            
                                            <h:Interaction.Triggers>
                                                <h:EventTrigger EventName="MouseUp">
                                                    <h:ChangePropertyAction TargetObject="{Binding ElementName=cb}" 
                                                                            PropertyName="IsChecked" 
                                                                            Value="{Binding ElementName=cb,Path=IsChecked,Converter={x:Static h:XConverter.TrueToFalseConverter}}"/>
                                                </h:EventTrigger>
                                            </h:Interaction.Triggers>
                                        </TextBlock>-->


                                        <h:ElementExpander Style="{StaticResource S.ElementExpander.MouseEnter}">
                                            <h:Interaction.Behaviors>
                                                <h:MouseDragElementBehavior/>
                                            </h:Interaction.Behaviors>

                                            <h:ToggleExpander.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <!--<h:CirclePanel Len="60" Margin="-20"/>-->
                                                    <h:CirclePanel Len="70" Background="Transparent" IsAnimation="False" Margin="-30"/>
                                                </ItemsPanelTemplate>
                                            </h:ToggleExpander.ItemsPanel>

                                            <h:ElementExpander.Content>
                                                <!--<TextBlock Text="&#xe6f9;" Style="{DynamicResource S.TextBlock.FIcon}" FontSize="33" Foreground="Red" HorizontalAlignment="Center" VerticalAlignment="Center"/>-->

                                                <TextBlock Text="&#xe6f9;" Style="{DynamicResource S.TextBlock.FIcon}" FontSize="33" Foreground="Red" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                    <TextBlock.Triggers>
                                                        <EventTrigger RoutedEvent="Loaded">
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <ThicknessAnimation From="0,-50,0,0" To="0,0,0,0" Duration="00:00:01" Storyboard.TargetProperty="Margin" RepeatBehavior="Forever">
                                                                        <ThicknessAnimation.EasingFunction>
                                                                            <BounceEase/>
                                                                        </ThicknessAnimation.EasingFunction>
                                                                    </ThicknessAnimation>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </EventTrigger>
                                                    </TextBlock.Triggers>
                                            
                                            <h:Interaction.Triggers>
                                                <h:EventTrigger EventName="MouseUp">
                                                    <h:ChangePropertyAction TargetObject="{Binding ElementName=cb}" 
                                                                            PropertyName="IsChecked" 
                                                                            Value="{Binding ElementName=cb,Path=IsChecked,Converter={x:Static h:XConverter.TrueToFalseConverter}}"/>
                                                </h:EventTrigger>
                                            </h:Interaction.Triggers>
                                                </TextBlock>
                                            </h:ElementExpander.Content>

                                            <Button h:Cattach.Icon="&#xe610;" Visibility="Collapsed" h:Cattach.FIconSize="22" ToolTip="取消运行" Style="{StaticResource S.Button.Circle.Transparent}"/>
                                            <Button h:Cattach.Icon="&#xe841;" Visibility="Collapsed" h:Cattach.FIconSize="22" ToolTip="暂停运行" Style="{StaticResource S.Button.Circle.Transparent}"/>
                                            <Button h:Cattach.Icon="&#xe610;" Visibility="Collapsed" h:Cattach.FIconSize="22" ToolTip="取消运行" Style="{StaticResource S.Button.Circle.Transparent}"/>
                                            <Button h:Cattach.Icon="&#xe841;" Visibility="Collapsed" h:Cattach.FIconSize="22" ToolTip="暂停运行" Style="{StaticResource S.Button.Circle.Transparent}"/>
                                            <Button h:Cattach.Icon="&#xe610;" Visibility="Collapsed" h:Cattach.FIconSize="22" ToolTip="取消运行" Style="{StaticResource S.Button.Circle.Transparent}"/>
                                            <Button h:Cattach.Icon="&#xe841;" Visibility="Collapsed" h:Cattach.FIconSize="22" ToolTip="暂停运行" Style="{StaticResource S.Button.Circle.Transparent}"/>
                                            <Button h:Cattach.Icon="&#xe7e5;" Visibility="Collapsed" h:Cattach.FIconSize="22" ToolTip="查看波形" 
                                    Command="{Binding RelayCommand}" CommandParameter="Button.Click.ShowWave"
                                    Style="{StaticResource S.Button.Circle.Transparent}"/>
                                            <Button h:Cattach.Icon="&#xe614;" Visibility="Collapsed" h:Cattach.FIconSize="22" ToolTip="查看日志"
                                    Command="{Binding RelayCommand}" CommandParameter="Button.Click.ShowLog"
                                    Style="{StaticResource S.Button.Circle.Transparent}"/>
                                        </h:ElementExpander>


                                        <CheckBox x:Name="cb" Visibility="Hidden"/>

                                        <GroupBox x:Name="gb_detial_1" Width="300" Height="250" HorizontalAlignment="Right" Padding="10,0" Margin="0,-400,-200,0" Header="主机 - 1" Background="{DynamicResource S.Brush.Accent.MouseOver}"  h:Cattach.IsVisible="{Binding ElementName=cb,Path=IsChecked}">
                                            <h:Cattach.VisibleActions>
                                                <h:ActionCollection>
                                                    <h:TranslateAction StartPoint="-220,200" EndPoint="-220,200"/>
                                                    <h:ScaleAction StartX="0" StartY="0" EndX="0" EndY="0"/>
                                                </h:ActionCollection>
                                            </h:Cattach.VisibleActions>

                                            <!--<TextBlock Text="Grid" FontSize="80" HorizontalAlignment="Center" VerticalAlignment="Center"/>-->

                                            <StackPanel TextBlock.Foreground="{DynamicResource S.Brush.TextForeground.White}">
                                                <h:TupleGroup>
                                                    <h:TupleGroup.LeftItem1>
                                                        <TextBlock Text="地址："/>
                                                    </h:TupleGroup.LeftItem1>
                                                    <h:TupleGroup.LeftItem2>
                                                        <TextBlock Text="192.168.0.1"/>
                                                    </h:TupleGroup.LeftItem2>
                                                </h:TupleGroup>

                                                <h:TupleGroup>
                                                    <h:TupleGroup.LeftItem1>
                                                        <TextBlock Text="状态："/>
                                                    </h:TupleGroup.LeftItem1>
                                                    <h:TupleGroup.LeftItem2>
                                                        <!--<TextBlock Text="待机"/>-->
                                                        <h:Ping IP="192.168.0.1"/>
                                                    </h:TupleGroup.LeftItem2>
                                                </h:TupleGroup>

                                                <h:TupleGroup>
                                                    <h:TupleGroup.LeftItem1>
                                                        <TextBlock Text="LatLngX："/>
                                                    </h:TupleGroup.LeftItem1>
                                                    <h:TupleGroup.LeftItem2>
                                                        <TextBlock Text="34.2393"/>
                                                    </h:TupleGroup.LeftItem2>
                                                </h:TupleGroup>

                                                <h:TupleGroup>
                                                    <h:TupleGroup.LeftItem1>
                                                        <TextBlock Text="LatLngY："/>
                                                    </h:TupleGroup.LeftItem1>
                                                    <h:TupleGroup.LeftItem2>
                                                        <TextBlock Text="108.8473"/>
                                                    </h:TupleGroup.LeftItem2>
                                                </h:TupleGroup>

                                                <h:TupleGroup>
                                                    <h:TupleGroup.LeftItem1>
                                                        <TextBlock Text="信号数量："/>
                                                    </h:TupleGroup.LeftItem1>
                                                    <h:TupleGroup.LeftItem2>
                                                        <TextBlock Text="6"/>
                                                    </h:TupleGroup.LeftItem2>
                                                </h:TupleGroup>
                                            </StackPanel>
                                            <h:Cattach.AttachContent>
                                                <ControlTemplate>
                                                    <Button  Width="35" Height="35" Style="{DynamicResource S.Button.Close}"
                                        h:Cattach.AllowsAnimation="True"  Command="{x:Static h:CommandService.ActionHiddenCommand}"
                                        CommandParameter="{Binding ElementName=gb_detial_1}"
                                        Foreground="{DynamicResource S.Brush.TextForeground.White}"/>
                                                </ControlTemplate>
                                            </h:Cattach.AttachContent>
                                        </GroupBox>


                                        <GroupBox x:Name="gb_detial_2" Width="300" Height="250" HorizontalAlignment="Right" Padding="10,0" Margin="0,200,-200,0" Header="信号监测" Background="{DynamicResource S.Brush.Accent.MouseOver}"  h:Cattach.IsVisible="{Binding ElementName=cb,Path=IsChecked}">
                                            <h:Cattach.VisibleActions>
                                                <h:ActionCollection>
                                                    <h:TranslateAction StartPoint="-220,-100" EndPoint="-220,-100" Duration="1200"/>
                                                    <h:ScaleAction StartX="0" StartY="0" EndX="0" EndY="0" Duration="1200"/>
                                                </h:ActionCollection>
                                            </h:Cattach.VisibleActions>

                                            <h:Chart yAxis="-25,0,25,75" xAxis="0,60,120,180,240,300,360" Padding="10,10">
                                                <h:Series xDatas="{Binding WaveyAxis}" yDatas="{Binding WaveData}" Foreground="{DynamicResource S.Brush.Orange.Notice}">
                                                    <h:Line  TryFreeze="False" Style="{StaticResource S.Line.Single}"/>
                                                    <h:MarkPosition  TryFreeze="False" Style="{StaticResource S.MarkPosition.Single}" MarkValueType="Max"/>
                                                    <h:MarkPosition  TryFreeze="False" Style="{StaticResource S.MarkPosition.Single}" MarkValueType="Min" Foreground="Red"/>
                                                    <!--<h:MarkPosition  TryFreeze="False" Style="{StaticResource S.MarkPosition.Single}" MarkValueType="Default" Foreground="Green" Point="1800,25"/>-->
                                                    <h:MarkLine  TryFreeze="False" Style="{StaticResource S.MarkLine.Single}" MarkLineType="Average"/>
                                                </h:Series>
                                            </h:Chart>

                                            <h:Cattach.AttachContent>
                                                <ControlTemplate>
                                                    <Button  Width="35" Height="35" Style="{DynamicResource S.Button.Close}"
                                        h:Cattach.AllowsAnimation="True"  Command="{x:Static h:CommandService.ActionHiddenCommand}"
                                        CommandParameter="{Binding ElementName=gb_detial_2}"
                                        Foreground="{DynamicResource S.Brush.TextForeground.White}"/>
                                                </ControlTemplate>
                                            </h:Cattach.AttachContent>
                                        </GroupBox>

                                    </Grid>

                                    <!--<Grid>
                                        <h:FlashPanel SplitMilliSecond="-700" Height="500" Width="500">
                                            <h:FlashPanel.Timelines>
                                                <cl:ArrayList>
                                                    <DoubleAnimation Duration="00:00:01" From="0" To="1"  Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"/>
                                                    <DoubleAnimation Duration="00:00:01" From="0" To="1"  Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"/>
                                                    <DoubleAnimation Duration="00:00:01" From="1" To="0"  Storyboard.TargetProperty="Opacity"/>
                                                </cl:ArrayList>
                                            </h:FlashPanel.Timelines>

                                            <Ellipse Fill="Orange"/>
                                            <Ellipse Fill="Green"/>
                                            <Ellipse Fill="Orange"/>
                                            <Ellipse Fill="Green"/>
                                            <Ellipse Fill="Orange"/>
                                        </h:FlashPanel>
                                        <TextBlock Text="&#xe823;" Style="{DynamicResource S.TextBlock.FIcon}" FontSize="33" Foreground="Orange" HorizontalAlignment="Center" VerticalAlignment="Center">
                                            <TextBlock.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimation From="0,-50,0,0" To="0,0,0,0" Duration="00:00:01" Storyboard.TargetProperty="Margin" RepeatBehavior="Forever">
                                                                <ThicknessAnimation.EasingFunction>
                                                                    <BounceEase/>
                                                                </ThicknessAnimation.EasingFunction>
                                                            </ThicknessAnimation>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </TextBlock.Triggers>
                                        </TextBlock>
                                    </Grid>-->

                                    <!--<h:FlashPanel SplitMilliSecond="-700" Height="500" Width="500">
                                        <h:FlashPanel.Timelines>
                                            <cl:ArrayList>
                                                <DoubleAnimation Duration="00:00:01" From="0" To="1"  Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"/>
                                                <DoubleAnimation Duration="00:00:01" From="0" To="1"  Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"/>
                                                <DoubleAnimation Duration="00:00:01" From="1" To="0"  Storyboard.TargetProperty="Opacity"/>
                                            </cl:ArrayList>
                                        </h:FlashPanel.Timelines>

                                        <Button h:Cattach.Icon="&#xe868;" Foreground="Red" h:Cattach.FIconSize="155" Height="Auto" Style="{DynamicResource S.Button.Transparent}"/>
                                        <Button h:Cattach.Icon="&#xe868;" Foreground="Red"  h:Cattach.FIconSize="155" Height="Auto"  Style="{DynamicResource S.Button.Transparent}"/>
                                        <Button h:Cattach.Icon="&#xe868;" Foreground="Red"  h:Cattach.FIconSize="155" Height="Auto"  Style="{DynamicResource S.Button.Transparent}"/>
                                        <Button h:Cattach.Icon="&#xe868;" Foreground="Red"  h:Cattach.FIconSize="155" Height="Auto"  Style="{DynamicResource S.Button.Transparent}"/>
                                        <Button h:Cattach.Icon="&#xe868;" Foreground="Red"  h:Cattach.FIconSize="155" Height="Auto"  Style="{DynamicResource S.Button.Transparent}"/> 
                                    </h:FlashPanel>-->


                                    <!--<h:FlashPanel SplitMilliSecond="-700" Height="500" Width="500">
                                        <h:FlashPanel.Timelines>
                                            <cl:ArrayList>
                                                <DoubleAnimation Duration="00:00:01" From="0" To="1"  Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"/>
                                                <DoubleAnimation Duration="00:00:01" From="0" To="1"  Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"/>
                                                <DoubleAnimation Duration="00:00:01" From="1" To="0"  Storyboard.TargetProperty="Opacity"/>
                                            </cl:ArrayList>
                                        </h:FlashPanel.Timelines>

                                        <Button h:Cattach.Icon="&#xe7d5;" RenderTransformOrigin="0.5 1" Foreground="Red" h:Cattach.FIconSize="155" Height="Auto" Style="{DynamicResource S.Button.Transparent}"/>
                                        <Button h:Cattach.Icon="&#xe7d5;" RenderTransformOrigin="0.5 1" Foreground="Red"  h:Cattach.FIconSize="155" Height="Auto"  Style="{DynamicResource S.Button.Transparent}"/>
                                        <Button h:Cattach.Icon="&#xe7d5;" RenderTransformOrigin="0.5 1" Foreground="Red"  h:Cattach.FIconSize="155" Height="Auto"  Style="{DynamicResource S.Button.Transparent}"/>
                                        <Button h:Cattach.Icon="&#xe7d5;" RenderTransformOrigin="0.5 1" Foreground="Red"  h:Cattach.FIconSize="155" Height="Auto"  Style="{DynamicResource S.Button.Transparent}"/>
                                        <Button h:Cattach.Icon="&#xe7d5;" RenderTransformOrigin="0.5 1" Foreground="Red"  h:Cattach.FIconSize="155" Height="Auto"  Style="{DynamicResource S.Button.Transparent}"/>
                                    </h:FlashPanel>-->
                                </UniformGrid>
                            </h:ImageCore.InnerContent>

                        </h:ImageCore>

                        <h:ToggleExpander Style="{StaticResource S.ToggleExpander.Single}" IsExpanded="False" Foreground="{DynamicResource S.Brush.TextForeground.White}" Background="{DynamicResource S.Brush.Accent.MouseOver}" DockPanel.Dock="Right" HorizontalAlignment="Right" VerticalAlignment="Top">
                            <h:ToggleExpander.Resources>
                                <Style x:Key="C.FButton.Default" TargetType="h:FButton" BasedOn="{StaticResource S.FButton.Style.Transparent}">
                                    <Setter Property="Height" Value="Auto"/>
                                    <Setter Property="FIcon" Value="&#xe67f;"/>
                                    <Setter Property="FIconSize" Value="30"/>
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="HorizontalAlignment" Value="Center"/>
                                    <Setter Property="Foreground" Value="{DynamicResource S.Brush.TextForeground.White}"/>
                                    <!--<Setter Property="RenderTransform" Value="{StaticResource S.TransformGroup.Default}"/>-->
                                </Style>
                            </h:ToggleExpander.Resources>

                            <h:Interaction.Behaviors>
                                <h:MouseDragElementBehavior ConstrainToParentBounds="True"/>
                            </h:Interaction.Behaviors>
                            <h:ToggleExpander.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal"/>
                                </ItemsPanelTemplate>
                            </h:ToggleExpander.ItemsPanel>
                            <h:FButton FIcon="&#xe909;" Style="{StaticResource C.FButton.Default}"/>
                            <h:FButton FIcon="&#xe90b;" Style="{StaticResource C.FButton.Default}"/>
                            <h:FButton FIcon="&#xe90c;" Style="{StaticResource C.FButton.Default}"/>
                            <h:FButton FIcon="&#xe91a;" Style="{StaticResource C.FButton.Default}"/>
                            <h:FButton FIcon="&#xe91b;" Style="{StaticResource C.FButton.Default}"/>
                            <h:FButton FIcon="&#xe927;" Style="{StaticResource C.FButton.Default}"/>
                            <h:FButton FIcon="&#xe929;" Style="{StaticResource C.FButton.Default}"/>
                            <h:FButton FIcon="&#xe92a;" Style="{StaticResource C.FButton.Default}"/>
                            <h:FButton FIcon="&#xe93a;" Style="{StaticResource C.FButton.Default}"/>
                        </h:ToggleExpander>

                        <Border  HorizontalAlignment="Left" VerticalAlignment="Top" Background="{DynamicResource S.Brush.Accent.MouseOver}" Height="{DynamicResource S.Window.Row.Height}">
                            <TextBlock VerticalAlignment="Center" Foreground="{DynamicResource S.Brush.TextForeground.White}" Margin="20,0">
                            <Run Text="当前任务:" FontSize="{DynamicResource S.FontSize.Header.3}"/>
                            <Run Text=" 任务一    "/>
                             <Run Text="状态:" FontSize="{DynamicResource S.FontSize.Header.4}"/>
                            <Run Text="正在运行"/>
                            </TextBlock>
                        </Border>

                        <Grid Margin="0,50">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <!--左侧-->
                            <h:Drawer Header="信号管理" Style="{StaticResource S.Drawer.Left.Default}"  h:Cattach.Icon="&#xe61f;"  IsExpanded="True" ToolTip="信号管理"  Background="{DynamicResource S.Brush.Accent.MouseOver}">
                                <h:Cattach.VisibleActions>
                                    <h:ActionCollection>
                                        <h:TranslateAction StartPoint="-300,0" EndPoint="-200,0"/>
                                    </h:ActionCollection>
                                </h:Cattach.VisibleActions>

                                <ListBox Width="200" Height="500" h:Cattach.IsUseClose="True">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Value}" VerticalAlignment="Center" Foreground="{DynamicResource S.Brush.TextForeground.White}"/>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                    <h:TestViewModel Value="信号一"/>
                                    <h:TestViewModel Value="信号二"/>
                                    <h:TestViewModel Value="信号三"/>
                                    <h:TestViewModel Value="信号四"/>
                                    <h:TestViewModel Value="信号五"/>
                                    <h:TestViewModel Value="信号六"/>
                                </ListBox>
                            </h:Drawer>

                            <h:Drawer Grid.Row="1" Header="装备管理" Style="{StaticResource S.Drawer.Left.Default}" h:Cattach.Icon="&#xe6f5;" h:Cattach.IconMargin="0,100,0,0" IsExpanded="True" ToolTip="功放设置"  Background="{DynamicResource S.Brush.Accent.MouseOver}">
                                <h:Cattach.VisibleActions>
                                    <h:ActionCollection>
                                        <h:TranslateAction StartPoint="-300,0" EndPoint="-200,0"/>
                                    </h:ActionCollection>
                                </h:Cattach.VisibleActions>

                                <ListBox HorizontalAlignment="Stretch" Grid.Row="1" Width="200" h:Cattach.IsUseClose="True">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Value}" VerticalAlignment="Center"  Foreground="{DynamicResource S.Brush.TextForeground.White}"/>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                    <h:TestViewModel Value="装备一"/>
                                    <h:TestViewModel Value="装备二"/>
                                    <h:TestViewModel Value="装备三"/>
                                    <h:TestViewModel Value="装备四"/>
                                    <h:TestViewModel Value="装备五"/>
                                    <h:TestViewModel Value="装备六"/>
                                </ListBox>
                            </h:Drawer>


                            <!--<h:Drawer Header="参数编辑" Style="{StaticResource S.Drawer.Left.Default}" h:Cattach.Icon="&#xe6f9;"  h:Cattach.IconMargin="0,-100,0,0" IsExpanded="False" ToolTip="参数编辑"  Background="{DynamicResource S.Brush.Accent.MouseOver}">
                                <h:Cattach.VisibleActions>
                                    <h:ActionCollection>
                                        <h:TranslateAction StartPoint="-300,0" EndPoint="-200,0"/>
                                    </h:ActionCollection>
                                </h:Cattach.VisibleActions>

                                <ListBox HorizontalAlignment="Stretch" Grid.Row="1" Width="200">
                                    <h:FTextBox UseHistory="False"/>
                                    <h:FTextBox/>
                                </ListBox>
                            </h:Drawer>-->

                        </Grid>

                        <!--右侧-->
                        <!--
                        <h:Drawer Header="操作模式" Style="{StaticResource S.Drawer.Right.Default}" ToolTip="操作模式" IsExpanded="True">
                            <h:Cattach.VisibleActions>
                                <h:ActionCollection>
                                    <h:TranslateAction StartPoint="0,100" EndPoint="0,100"/>
                                </h:ActionCollection>
                            </h:Cattach.VisibleActions>


                            <ListBox x:Name="list_selecttype" ItemContainerStyle="{StaticResource S.ListBoxItem.CheckBox.Box}" HorizontalAlignment="Right" VerticalAlignment="Center" Width="100" Background="{DynamicResource S.Brush.TextBackground.Default}">
                                <h:OperateType>Default</h:OperateType>
                                <h:OperateType>Sign</h:OperateType>
                                <h:OperateType>Enlarge</h:OperateType>
                                <h:OperateType>Bubble</h:OperateType>
                            </ListBox>
                        </h:Drawer>-->
                    </Grid>
                </h:GitTopContainer.CenterContent>

                <h:GitTopItem Style="{StaticResource S.GitTopItem.Circle}" HorizontalContentAlignment="Right" VerticalContentAlignment="Center">
                    <h:Cattach.VisibleActions>
                        <h:ActionCollection>
                            <h:TranslateAction StartPoint="800,400" EndPoint="800,400"/>
                            <h:ScaleAction StartX="0" StartY="0" EndX="0" EndY="0"/>
                        </h:ActionCollection>
                    </h:Cattach.VisibleActions>

                    <h:GitTopItem.HeaderContent>
                        <h:ElementExpander Style="{StaticResource S.ElementExpander.MouseEnter}" Width="200" Height="200">
                            <h:Interaction.Behaviors>
                                <h:MouseDragElementBehavior ConstrainToParentBounds="True"/>
                            </h:Interaction.Behaviors>

                            <!--<h:ToggleExpander.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <h:CirclePanel Len="60" Margin="-20"/>
                                    --><!--<h:ArcPanel Len="70" StartAngle="-10" EndAngle="100" Background="Transparent" IsAnimation="False" Margin="-30"/>--><!--
                                </ItemsPanelTemplate>
                            </h:ToggleExpander.ItemsPanel>-->

                            <h:ElementExpander.Content>
                                <Viewbox Width="80" HorizontalAlignment="Center" VerticalAlignment="Center"> 
                                    <ToggleButton IsChecked="True" Margin="0,30,0,0">
                                        <ToggleButton.Template>
                                            <ControlTemplate TargetType="ToggleButton">
                                                <Grid>
                                                    <ContentControl x:Name="cc1">
                                                        <h:StepItem DisplayName="生成" State="1"/> 
                                                    </ContentControl>

                                                    <ContentControl x:Name="cc2">
                                                        <h:StepItem  DisplayName="开始" State="2"/>
                                                    </ContentControl>
                                                </Grid>
                                                
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter Property="Visibility" Value="Visible" TargetName="cc1"/>
                                                        <Setter Property="Visibility" Value="Hidden" TargetName="cc1"/> 
                                                    </Trigger>
                                                    <Trigger Property="IsChecked" Value="False">
                                                        <Setter Property="Visibility" Value="Visible" TargetName="cc1"/>
                                                        <Setter Property="Visibility" Value="Hidden" TargetName="cc2"/> 
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </ToggleButton.Template>
                                    </ToggleButton>

                                    <h:Interaction.Behaviors>
                                        <h:SelectListBoxItemElementBehavior/>
                                    </h:Interaction.Behaviors>
                                </Viewbox>
                            </h:ElementExpander.Content>

                            <Button h:Cattach.Icon="&#xe610;" h:Cattach.FIconSize="22" ToolTip="取消运行" Style="{StaticResource S.Button.MouseOver}"/>
                            <Button h:Cattach.Icon="&#xe841;" h:Cattach.FIconSize="22" ToolTip="暂停运行" Style="{StaticResource S.Button.MouseOver}"/>
                            <Button h:Cattach.Icon="&#xe841;" h:Cattach.FIconSize="22" ToolTip="暂停运行" Style="{StaticResource S.Button.MouseOver}"/>
                            <Button h:Cattach.Icon="&#xe841;" h:Cattach.FIconSize="22" ToolTip="暂停运行" Style="{StaticResource S.Button.MouseOver}"/>
                            <Button h:Cattach.Icon="&#xe841;" h:Cattach.FIconSize="22" ToolTip="暂停运行" Style="{StaticResource S.Button.MouseOver}"/>
                            <Button h:Cattach.Icon="&#xe7e5;" h:Cattach.FIconSize="22" ToolTip="查看波形" 
                                    Command="{Binding RelayCommand}" CommandParameter="Button.Click.ShowWave"
                                    Style="{StaticResource S.Button.MouseOver}"/>
                            <Button h:Cattach.Icon="&#xe614;" h:Cattach.FIconSize="22" ToolTip="查看日志"
                                    Command="{Binding RelayCommand}" CommandParameter="Button.Click.ShowLog"
                                    Style="{StaticResource S.Button.MouseOver}"/>
                        </h:ElementExpander>
                    </h:GitTopItem.HeaderContent>

                    <Grid Width="900" Height="300">
                        <GroupBox Header="信号生成进度">
                            <h:Step>
                                <h:StepItem DisplayName="1" Message="检查" Percent="50" State="2"/>
                                <h:StepItem DisplayName="2" Message="合成" Percent="10"  State="2"/>
                                <h:StepItem DisplayName="3" Message="生成" Percent="80"  State="1"/>
                                <h:StepItem DisplayName="4" Message="发送" Percent="30" State="0"/>
                                <h:StepItem DisplayName="5" Message="完成" Percent="30" State="0"/>
                            </h:Step>
                        </GroupBox>

                        <h:FButton Style="{DynamicResource S.FButton.Close}" 
                                   MouseOverForeground="Red" Margin="10,5"
                                   Foreground="{DynamicResource S.Brush.TextForeground.White}" Command="{x:Static h:GitTopContainer.CoverHideCommand}"/>
                    </Grid>
                </h:GitTopItem>

                <h:GitTopItem Style="{StaticResource S.GitTopItem.Circle}" HorizontalContentAlignment="Left" VerticalContentAlignment="Bottom">
                    <h:Cattach.VisibleActions>
                        <h:ActionCollection>
                            <h:TranslateAction StartPoint="-800,400" EndPoint="-800,400"/>
                            <h:ScaleAction StartX="0" StartY="0" EndX="0" EndY="0"/>
                        </h:ActionCollection>
                    </h:Cattach.VisibleActions>

                    <h:GitTopItem.HeaderContent>
                        <Button h:Cattach.Icon="&#xe6f7;"  h:Cattach.FIconSize="40" Height="60" Width="60"
                                ToolTip="任务管理" Style="{StaticResource S.Button.MouseOver}" Margin="10,0">
                            <h:Interaction.Behaviors>
                                <h:SelectListBoxItemElementBehavior/>
                            </h:Interaction.Behaviors>
                        </Button>
                    </h:GitTopItem.HeaderContent>
                    <GroupBox Header="任务管理" Width="600">
                        <h:Cattach.AttachContent>
                            <ControlTemplate>
                                <h:FButton  Width="35" Height="35" 
                                        MouseOverForeground="{DynamicResource S.Brush.TextForeground.White}"  PressedForeground="{DynamicResource S.Brush.TextForeground.White}"
                                        AllowsAnimation="True" 
                                        Style="{DynamicResource S.FButton.Style.Transparent}"  
                                        FIcon="&#xe6f4;" FIconSize="15" Command="{x:Static h:GitTopContainer.CoverHideCommand}"
                                        Foreground="{DynamicResource S.Brush.TextForeground.White}">
                                </h:FButton>
                            </ControlTemplate>
                        </h:Cattach.AttachContent>

                        <DockPanel>
                            <UniformGrid DockPanel.Dock="Bottom" Columns="5" HorizontalAlignment="Center">
                                <Button Content="添加" h:Cattach.CornerRadius="16,0,0,16" Width="80"/>
                                <Button Content="编辑" h:Cattach.CornerRadius="0" Width="80"/>
                                <Button Content="导入" h:Cattach.CornerRadius="0" Width="80"/>
                                <Button Content="导出" h:Cattach.CornerRadius="0" Width="80"/>
                                <Button Content="确定" h:Cattach.CornerRadius="0,16,16,0" Width="80"  Command="{x:Static h:GitTopContainer.CoverHideCommand}"/> 
                            </UniformGrid>
                            <ListBox h:Cattach.IsUseClose="True">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <DockPanel LastChildFill="False">
                                            <TextBlock Text="{Binding Value}" Style="{StaticResource S.TextBlock.ListBoxItem}"/>
                                            <TextBlock Text="{Binding Value2}" Style="{StaticResource S.TextBlock.ListBoxItem}" Margin="10,0"/>
                                            <TextBlock Text="{Binding Value3}" Style="{StaticResource S.TextBlock.ListBoxItem}"/>
                                            <TextBlock Text="{Binding Value4}" Style="{StaticResource S.TextBlock.ListBoxItem}"/>

                                            <!--<Button Style="{StaticResource S.Button.Transparent}" Foreground="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem},Path=Foreground}" h:Cattach.Icon="&#xe621;" Margin="35,0" DockPanel.Dock="Right"/>-->
                                            <!--<Button Style="{StaticResource S.Button.Transparent}" Foreground="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem},Path=Foreground}" h:Cattach.Icon="&#xe618;" DockPanel.Dock="Right"/>-->
                                        </DockPanel>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>

                                <h:TestViewModel Value="任务一" Value2="2001-10-15 12:22:00"/>
                                <h:TestViewModel Value="任务二" Value2="2001-10-15 12:22:00"/>
                                <h:TestViewModel Value="任务三" Value2="2001-10-15 12:22:00"/>
                                <h:TestViewModel Value="任务四" Value2="2001-10-15 12:22:00"/>
                                <h:TestViewModel Value="任务五" Value2="2001-10-15 12:22:00"/>
                                <h:TestViewModel Value="任务六" Value2="2001-10-15 12:22:00"/>
                            </ListBox>
                        </DockPanel>
                    </GroupBox>
                </h:GitTopItem>

                <h:GitTopItem Style="{StaticResource S.GitTopItem.Circle}" HorizontalContentAlignment="Left" VerticalContentAlignment="Bottom">
                    <h:TransitionCollection>
                        <h:ActionCollection>
                            <h:TranslateAction StartPoint="-700,400" EndPoint="-700,400"/>
                            <h:ScaleAction StartX="0" StartY="0" EndX="0" EndY="0"/>
                        </h:ActionCollection>
                    </h:<Unknown>>

                    <h:GitTopItem.HeaderContent>
                        <Button h:Cattach.Icon="&#xe6ff;"  h:Cattach.FIconSize="40" Height="60" Width="60"
                                ToolTip="主机管理" Style="{StaticResource S.Button.MouseOver}" Margin="80,0">
                            <h:Interaction.Behaviors>
                                <h:SelectListBoxItemElementBehavior/>
                            </h:Interaction.Behaviors>
                        </Button>
                    </h:GitTopItem.HeaderContent>
                    <GroupBox Header="主机管理" Width="600">
                        <h:Cattach.AttachContent>
                            <ControlTemplate>
                                <h:FButton  Width="35" Height="35" 
                                        MouseOverForeground="{DynamicResource S.Brush.TextForeground.White}"  PressedForeground="{DynamicResource S.Brush.TextForeground.White}"
                                        AllowsAnimation="True" 
                                        Style="{DynamicResource S.FButton.Style.Transparent}"  
                                        FIcon="&#xe6f4;" FIconSize="15" Command="{x:Static h:GitTopContainer.CoverHideCommand}"
                                        Foreground="{DynamicResource S.Brush.TextForeground.White}">
                                </h:FButton>
                            </ControlTemplate>
                        </h:Cattach.AttachContent>
                        <DockPanel>
                            <UniformGrid DockPanel.Dock="Bottom" Columns="4 " HorizontalAlignment="Center">
                                <Button Content="添加" h:Cattach.CornerRadius="16,0,0,16" Width="80"/>
                                <Button Content="编辑" h:Cattach.CornerRadius="0" Width="80"/>
                                <Button Content="测试连接" h:Cattach.CornerRadius="0" Width="80"/> 
                                <Button Content="检索" h:Cattach.CornerRadius="0,16,16,0" Width="80"/>
                            </UniformGrid>
                            <ListBox h:Cattach.IsUseClose="True">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <DockPanel LastChildFill="True" Margin="0,0,40,0">
                                            <TextBlock Text="{Binding Value}" Style="{StaticResource S.TextBlock.ListBoxItem}"/>
                                            <!--<TextBlock Text="{Binding Value2}" Style="{StaticResource S.TextBlock.ListBoxItem}" Margin="10,0"/>-->
                                            <TextBlock Text="{Binding Value3}" Margin="10,0" Style="{StaticResource S.TextBlock.ListBoxItem}"/>
                                            <!--<TextBlock Text="{Binding Value4}" Style="{StaticResource S.TextBlock.ListBoxItem}"/>-->

                                            <!--<Button Style="{StaticResource S.Button.Transparent}" Foreground="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem},Path=Foreground}" h:Cattach.Icon="&#xe621;" Margin="5,0" DockPanel.Dock="Right"/>
                                        <Button Style="{StaticResource S.Button.Transparent}" Foreground="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem},Path=Foreground}" h:Cattach.Icon="&#xe618;" DockPanel.Dock="Right"/>-->

                                            <h:Ping IP="{Binding Value4}"/>
                                        </DockPanel>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>

                                <h:TestViewModel Value="主机一" Value2="日期：2001-10-15 12:22:00" Value3="坐标:（100,50）" Value4="192.168.0.1"/>
                                <h:TestViewModel Value="主机二" Value2="日期：2001-10-15 12:22:00" Value3="坐标:（100,50）" Value4="192.168.0.2"/>
                                <h:TestViewModel Value="主机三" Value2="日期：2001-10-15 12:22:00" Value3="坐标:（100,50）" Value4="192.168.0.3"/>
                                <h:TestViewModel Value="主机四" Value2="日期：2001-10-15 12:22:00" Value3="坐标:（100,50）" Value4="192.168.0.4"/>
                                <h:TestViewModel Value="主机五" Value2="日期：2001-10-15 12:22:00" Value3="坐标:（100,50）" Value4="192.168.0.5"/>
                                <h:TestViewModel Value="主机六" Value2="日期：2001-10-15 12:22:00" Value3="坐标:（100,50）" Value4="192.168.0.6"/>
                                <h:TestViewModel Value="主机六" Value2="日期：2001-10-15 12:22:00" Value3="坐标:（100,50）" Value4="192.168.0.7"/>
                                <h:TestViewModel Value="主机六" Value2="日期：2001-10-15 12:22:00" Value3="坐标:（100,50）" Value4="192.168.0.8"/>
                                <h:TestViewModel Value="主机六" Value2="日期：2001-10-15 12:22:00" Value3="坐标:（100,50）" Value4="192.168.0.9"/>
                                <h:TestViewModel Value="主机六" Value2="日期：2001-10-15 12:22:00" Value3="坐标:（100,50）" Value4="192.168.0.10"/>
                                <h:TestViewModel Value="主机六" Value2="日期：2001-10-15 12:22:00" Value3="坐标:（100,50）" Value4="192.168.0.11"/>
                                <h:TestViewModel Value="主机六" Value2="日期：2001-10-15 12:22:00" Value3="坐标:（100,50）" Value4="192.168.0.12"/>
                                <h:TestViewModel Value="主机六" Value2="日期：2001-10-15 12:22:00" Value3="坐标:（100,50）" Value4="192.168.0.13"/>
                                <h:TestViewModel Value="主机六" Value2="日期：2001-10-15 12:22:00" Value3="坐标:（100,50）" Value4="192.168.0.14"/>
                                <h:TestViewModel Value="主机六" Value2="日期：2001-10-15 12:22:00" Value3="坐标:（100,50）" Value4="192.168.0.15"/>
                            </ListBox>

                        </DockPanel>
                    </GroupBox>
                </h:GitTopItem>

            </h:GitTopContainer>
        </Grid>
    </Grid>
</h:MainWindowBase>
