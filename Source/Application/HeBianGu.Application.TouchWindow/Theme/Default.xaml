<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:h="QQ:908293466"
                    xmlns:local="clr-namespace:HeBianGu.Application.TouchWindow"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <Style x:Key="C.TextBlock.FIcon" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="/Resources/#health"></Setter>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="20"/>
    </Style>


    <system:Double x:Key="C.FontSize.Title">42</system:Double>
    <system:Double x:Key="C.FontSize.Big">60</system:Double>
    <system:Double x:Key="C.FontSize.Accent">36</system:Double>
    <system:Double x:Key="C.FontSize.Default">30</system:Double>
    <system:Double x:Key="C.FontSize.Small">26</system:Double>

    <Style x:Key="C.TextBlock.Base" TargetType="TextBlock">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{DynamicResource S.Brush.TextForeground.Title}"/>
    </Style>

    <Style x:Key="C.TextBlock.Title" BasedOn="{StaticResource C.TextBlock.Base}" TargetType="TextBlock">
        <Setter Property="FontSize" Value="{StaticResource C.FontSize.Title}"/>
    </Style>

    <Style x:Key="C.TextBlock.Default" BasedOn="{StaticResource C.TextBlock.Base}" TargetType="TextBlock">
        <Setter Property="FontSize" Value="{StaticResource C.FontSize.Default}"/>
    </Style>

    <Style x:Key="C.TextBlock.Accent" BasedOn="{StaticResource C.TextBlock.Base}" TargetType="TextBlock">
        <Setter Property="FontSize" Value="{StaticResource C.FontSize.Accent}"/>
    </Style>

    <Style x:Key="C.TextBlock.Small" BasedOn="{StaticResource C.TextBlock.Base}" TargetType="TextBlock">
        <Setter Property="FontSize" Value="{StaticResource C.FontSize.Small}"/>
    </Style>

    <Style x:Key="C.TextBlock.Big" BasedOn="{StaticResource C.TextBlock.Base}" TargetType="TextBlock">
        <Setter Property="FontSize" Value="{StaticResource C.FontSize.Big}"/>
    </Style>

    <Style x:Key="C.FButton.Tranparent" TargetType="h:FButton" BasedOn="{StaticResource S.FButton.Style.Transparent}">
        <!--<Setter Property="Command" Value="{Binding RelayCommand}"/>-->
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="30,0,0,0"/>
        <Setter Property="FontSize" Value="36"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Width" Value="Auto"/>
    </Style>

    <Style x:Key="C.FButton.Default" TargetType="h:FButton" BasedOn="{StaticResource S.FButton.Style.Default}">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="FontSize" Value="30"/>
        <Setter Property="Height" Value="65"/>
        <Setter Property="Width" Value="200"/>
        <Setter Property="CornerRadius" Value="33"/>
    </Style>

    <Style x:Key="C.FButton.Cancel" TargetType="h:FButton" BasedOn="{StaticResource S.FButton.Style.Default}">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="FontSize" Value="36"/>
        <Setter Property="Height" Value="65"/>
        <Setter Property="Width" Value="200"/>
        <Setter Property="CornerRadius" Value="33"/>
        <Setter Property="BorderBrush" Value="{DynamicResource S.Brush.Accent}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Foreground" Value="{DynamicResource S.Brush.Accent}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="MouseOverBackground" Value="Transparent"/>
        <Setter Property="PressedBackground" Value="Transparent"/>
        <Setter Property="MouseOverForeground" Value="{DynamicResource S.Brush.Accent.MouseOver}"/>
        <Setter Property="PressedForeground" Value="{DynamicResource S.Brush.Accent.MouseOver}"/>
        <Setter Property="MouseOverBorderBrush" Value="{DynamicResource S.Brush.Accent.MouseOver}"/>
        <Setter Property="PressedBorderBrush" Value="{DynamicResource S.Brush.Accent.MouseOver}"/>
    </Style>

    <DataTemplate DataType="{x:Type local:DataValueEntity}">
        <Grid>
            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                <Grid x:Name="txt" Height="70" Margin="15" >
                    <TextBlock  Text="{Binding Value}" Foreground="{Binding Foreground}" Style="{StaticResource C.TextBlock.Big}" VerticalAlignment="Center" HorizontalAlignment="Center" />
                </Grid>
                <h:ModernProgressRing x:Name="progress" Visibility="Collapsed" IsActive="{Binding IsBuzy}" Width="70" Height="70" Margin="15"  Style="{StaticResource FCircleProgressRingStyle}" /> 

                <TextBlock Text="{Binding Name}" Style="{StaticResource C.TextBlock.Default}"  HorizontalAlignment="Center" Margin="0,20,0,10"/>
                <TextBlock Text="{Binding Range}" Style="{StaticResource C.TextBlock.Default}"  HorizontalAlignment="Center"/>
            </StackPanel>
        </Grid>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding IsBuzy}" Value="True">
                <Setter Property="Visibility" Value="Collapsed" TargetName="txt"/>
                <Setter Property="Visibility" Value="Visible" TargetName="progress"/>
            </DataTrigger>
        </DataTemplate.Triggers>
      
    </DataTemplate>

    <Thickness x:Key="C.Margin.Default">10,6</Thickness>

    <SolidColorBrush x:Key="C.Brush.Red" Color="#FE2828"/>
    <SolidColorBrush x:Key="C.Brush.Orange" Color="#FDA714"/>
    <SolidColorBrush x:Key="C.Brush.Green" Color="#27DB22"/>
    <SolidColorBrush x:Key="C.Brush.Blue" Color="#39C9FE"/>

    <SolidColorBrush x:Key="C.Brush.Background.LightBlue" Color="#E2F4FF"/>

    <system:Double x:Key="C.WindowItemHeight.Default">45</system:Double> 

    <!--BorderBrush="#E2F4FF" BorderThickness="2"-->
    <Style x:Key="C.Border.Default" TargetType="Border">
        <Setter Property="BorderBrush" Value="{DynamicResource S.Brush.Accent.Opacity.2}"/>
        <Setter Property="BorderThickness" Value="2"/>
    </Style>

    <local:LastLinkActionsToCollapsedConverter x:Key="C.Convert.LastLinkActionsToCollapsedConverter"/>


    <Style TargetType="{x:Type h:FTextBox}" BasedOn="{StaticResource S.FTextBox.Single.LabelClear}">
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="{StaticResource C.WindowItemHeight.Default}"/>
        <Setter Property="Margin" Value="45,0"/>
        <Setter Property="FontSize" Value="{StaticResource C.FontSize.Default}"/>
        <Setter Property="h:Cattach.FIcon" Value=""/>
    </Style>

    <Style TargetType="ComboBox" BasedOn="{StaticResource S.ComboBox.Single.Label}">
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="{StaticResource C.WindowItemHeight.Default}"/>
        <Setter Property="FontSize" Value="{StaticResource C.FontSize.Default}"/>
        <Setter Property="Margin" Value="45,0"/>
    </Style>

    <Style TargetType="h:FCheckBox" BasedOn="{StaticResource S.CheckBox.Default}">
        <Setter Property="FontSize" Value="{StaticResource C.FontSize.Default}"/>
        <Setter Property="h:Cattach.FIconSize" Value="{StaticResource C.FontSize.Default}"/>
    </Style>
</ResourceDictionary>