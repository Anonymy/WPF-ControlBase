<h:MenuWindowBase x:Class="HeBianGu.Application.MapWindow.ShellWindow"
                  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                  xmlns:cl="clr-namespace:System.Collections;assembly=mscorlib"
                  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                  xmlns:h="QQ:908293466"
                  xmlns:local="clr-namespace:HeBianGu.Application.MapWindow"
                  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                  xmlns:system="clr-namespace:System;assembly=mscorlib"
                  Title="ShellWindow"
                  Width="1300"
                  Height="800"
                  CaptionHeight="50"
                  DataContext="{Binding Source={StaticResource S.DataSource.Locator}, Path=ShellViewModel}"
                  Icon="&#xeb02;"
                  NotifyIconSource="/HeBianGu.General.WpfControlLib;component/Resources/iBook.ico"
                  Style="{DynamicResource S.Window.Menu.Default}"
                  mc:Ignorable="d">
    <h:MenuWindowBase.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/HeBianGu.General.WpfControlLib;component/Custom/System/Menu.xaml" />
                <ResourceDictionary Source="pack://application:,,,/HeBianGu.General.WpfControlLib;component/Custom/System/ToggleButton.xaml" />
                <ResourceDictionary Source="pack://application:,,,/HeBianGu.General.WpfControlLib;component/Custom/Control/Button.xaml" />

            </ResourceDictionary.MergedDictionaries>


            <Style x:Key="C.MenuItem.Default" BasedOn="{StaticResource {x:Static h:MenuItemKeys.Handy}}" TargetType="MenuItem">
                <Setter Property="Command" Value="{Binding RelayCommand}" />
                <Setter Property="IsEnabled" Value="False" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
                <Setter Property="CommandParameter" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Header}" />
            </Style>

            <Style x:Key="C.MenuItem.Header" BasedOn="{StaticResource {x:Static h:MenuItemKeys.Accent}}" TargetType="MenuItem">
                <Setter Property="Command" Value="{Binding RelayCommand}" />
                <Setter Property="IsEnabled" Value="True" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}" />
                <Setter Property="CommandParameter" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Header}" />
                <Setter Property="h:Cattach.MouseOverForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}" />
                <Setter Property="h:Cattach.MouseOverBackground" Value="Transparent" />
                <Setter Property="h:Cattach.MouseOverBorderBrush" Value="Transparent" />
                <Setter Property="h:Cattach.SelectBackground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}" />
                <Setter Property="h:Cattach.SelectForeground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
            </Style>

            <Style BasedOn="{StaticResource C.MenuItem.Default}" TargetType="MenuItem" />

            <Style x:Key="C.MenuItem.Menu" BasedOn="{StaticResource {x:Static h:MenuItemKeys.Handy}}" TargetType="MenuItem">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}" />
                <Setter Property="Height" Value="Auto" />
                <Setter Property="VerticalAlignment" Value="Stretch" />
            </Style>

            <Style BasedOn="{DynamicResource {x:Static h:ToggleButtonKeys.Single}}" TargetType="ToggleButton">
                <Setter Property="VerticalAlignment" Value="Top" />
                <Setter Property="Height" Value="60" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.AccentMouseOverForeground}}" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}" />
            </Style>

            <DataTemplate DataType="{x:Type h:TestViewModel}">
                <Grid x:Name="grid"
                      HorizontalAlignment="Stretch"
                      Background="{DynamicResource {x:Static h:BrushKeys.Accent}}"
                      TextBlock.Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.RowSpan="2"
                               Margin="10,0"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               Style="{DynamicResource {x:Static h:TextBlockKeys.Icon}}"
                               Text="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton}, Path=Tag}" />

                    <TextBlock Grid.Row="0"
                               Grid.Column="1"
                               VerticalAlignment="Bottom"
                               Text="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton}, Path=(h:Cattach.Detail)}" />

                    <TextBlock Grid.Row="1"
                               Grid.Column="1"
                               VerticalAlignment="Center"
                               FontWeight="Black"
                               Text="{Binding Value}" />

                    <!--<ToggleButton x:Name="tb" Style="{StaticResource {x:Static h:ToggleButtonKeys.ComboBox}}" h:Cattach.Icon="&#xe63a;"  Margin="10,0" IsChecked="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton},Path=IsChecked}"
                                      Grid.Column="2" Grid.RowSpan="2" Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}"
                                      VerticalAlignment="Center" HorizontalAlignment="Center"/>-->
                </Grid>
                <!--<DataTemplate.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton},Path=IsChecked}" Value="True">
                    <Setter Property="TextBlock.Foreground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" TargetName="grid"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" TargetName="tb"/>
                    <Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.BackgroundDefault}}" TargetName="grid"/>
                </DataTrigger>
            </DataTemplate.Triggers>-->
            </DataTemplate>

            <DataTemplate x:Key="C.TestViewModel.Item" DataType="{x:Type h:TestViewModel}">
                <Grid x:Name="grid"
                      Width="320"
                      HorizontalAlignment="Left"
                      TextBlock.Foreground="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Path=Foreground}">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.RowSpan="2"
                               Margin="10,0"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               FontSize="15"
                               Style="{DynamicResource {x:Static h:TextBlockKeys.Icon}}"
                               Text="&#xe90c;" />

                    <TextBlock Grid.Row="1"
                               Grid.Column="1"
                               VerticalAlignment="Center"
                               Text="{Binding Value}"
                               ToolTip="{Binding Value1}" />

                    <Button x:Name="btn_close"
                               Grid.Column="2"
                               Margin="10,0"
                               Foreground="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Path=Foreground}"
                               h:Cattach.IconSize="12"
                               h:Cattach.MouseOverForeground="{DynamicResource {x:Static h:BrushKeys.Red}}"
                               Style="{DynamicResource {x:Static h:ButtonKeys.Close}}"
                               Visibility="Hidden" />
                </Grid>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Path=IsMouseOver}" Value="True">
                        <Setter TargetName="btn_close" Property="Visibility" Value="Visible" />
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>

            <DataTemplate x:Key="C.TestViewModel.Item.Checked" DataType="{x:Type h:TestViewModel}">
                <Grid x:Name="grid" HorizontalAlignment="Stretch" TextBlock.Foreground="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Path=Foreground}">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <!--<TextBlock Style="{DynamicResource {x:Static h:TextBlockKeys.Icon}}" Margin="10,0" Grid.RowSpan="2" Text="&#xe90c;" FontSize="15" VerticalAlignment="Center" HorizontalAlignment="Center"/>-->

                    <CheckBox Margin="10,0" Foreground="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Path=Foreground}" />

                    <TextBlock Grid.Row="1"
                               Grid.Column="1"
                               VerticalAlignment="Center"
                               Text="{Binding Value}"
                               ToolTip="{Binding Value1}" />

                    <Button x:Name="btn_close"
                               Grid.Column="2"
                               Foreground="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Path=Foreground}"
                               h:Cattach.IconSize="12"
                               h:Cattach.MouseOverForeground="{DynamicResource {x:Static h:BrushKeys.Red}}"
                               Style="{DynamicResource {x:Static h:ButtonKeys.Close}}"
                               Visibility="Hidden" />
                </Grid>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Path=IsMouseOver}" Value="True">
                        <Setter TargetName="btn_close" Property="Visibility" Value="Visible" />
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>
        </ResourceDictionary>
    </h:MenuWindowBase.Resources>
    <!--<h:MenuWindowBase.Resources>

        <Style x:Key="C.MenuItem.Default" BasedOn="{StaticResource S.MenuItem.Single}" TargetType="MenuItem">
            <Setter Property="Command" Value="{Binding RelayCommand}" />
            <Setter Property="IsEnabled" Value="False" />
            <Setter Property="Foreground" Value="{DynamicResource S.Brush.TextForeground.Default}" />
            <Setter Property="CommandParameter" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Header}" />
        </Style>


        <Style x:Key="C.MenuItem.Header" BasedOn="{StaticResource S.MenuItem.Accent}" TargetType="MenuItem">
            <Setter Property="Command" Value="{Binding RelayCommand}" />
            <Setter Property="IsEnabled" Value="True" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}" />
            <Setter Property="CommandParameter" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Header}" />
            <Setter Property="h:Cattach.MouseOverForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}" />
            <Setter Property="h:Cattach.MouseOverBackground" Value="Transparent" />
            <Setter Property="h:Cattach.MouseOverBorderBrush" Value="Transparent" />
            <Setter Property="h:Cattach.SelectBackground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}" />
            <Setter Property="h:Cattach.SelectForeground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
        </Style>

        <Style BasedOn="{StaticResource C.MenuItem.Default}" TargetType="MenuItem" />

        <Style x:Key="C.MenuItem.Menu" BasedOn="{StaticResource S.MenuItem.Handy}" TargetType="MenuItem">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}" />
            <Setter Property="Height" Value="Auto" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
        </Style>

        <Style BasedOn="{StaticResource S.ToggleButton.Single}" TargetType="ToggleButton">
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="Height" Value="60" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.AccentMouseOverBackground}}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}" />
        </Style>

        <DataTemplate DataType="{x:Type h:TestViewModel}">
            <Grid x:Name="grid"
                  HorizontalAlignment="Stretch"
                  Background="{DynamicResource {x:Static h:BrushKeys.Accent}}"
                  TextBlock.Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <TextBlock Grid.RowSpan="2"
                           Margin="10,0"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Style="{StaticResource {x:Static h:TextBlockKeys.Icon}}"
                           Text="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton}, Path=Tag}" />

                <TextBlock Grid.Row="0"
                           Grid.Column="1"
                           VerticalAlignment="Bottom"
                           Text="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton}, Path=(h:Cattach.Detail)}" />

                <TextBlock Grid.Row="1"
                           Grid.Column="1"
                           VerticalAlignment="Center"
                           FontWeight="Black"
                           Text="{Binding Value}" />

    -->
    <!--<ToggleButton x:Name="tb" Style="{StaticResource {x:Static h:ToggleButtonKeys.ComboBox}}" h:Cattach.Icon="&#xe63a;"  Margin="10,0" IsChecked="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton},Path=IsChecked}"
                                      Grid.Column="2" Grid.RowSpan="2" Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}"
                                      VerticalAlignment="Center" HorizontalAlignment="Center"/>-->
    <!--
            </Grid>
    -->
    <!--<DataTemplate.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton},Path=IsChecked}" Value="True">
                    <Setter Property="TextBlock.Foreground" Value="{DynamicResource S.Brush.TextForeground.Default}" TargetName="grid"/>
                    <Setter Property="Foreground" Value="{DynamicResource S.Brush.TextForeground.Default}" TargetName="tb"/>
                    <Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.BackgroundDefault}}" TargetName="grid"/>
                </DataTrigger>
            </DataTemplate.Triggers>-->
    <!--
        </DataTemplate>

        <DataTemplate x:Key="C.TestViewModel.Item" DataType="{x:Type h:TestViewModel}">
            <Grid x:Name="grid"
                  Width="{Binding RelativeSource={RelativeSource AncestorType=ListBox}, Path=ActualWidth}"
                  HorizontalAlignment="Left"
                  TextBlock.Foreground="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Path=Foreground}">
                <Grid.RowDefinitions>
                    <RowDefinition />
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <TextBlock Grid.RowSpan="2"
                           Margin="10,0"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           FontSize="15"
                           Style="{StaticResource {x:Static h:TextBlockKeys.Icon}}"
                           Text="&#xe90c;" />

                <TextBlock Grid.Row="1"
                           Grid.Column="1"
                           VerticalAlignment="Center"
                           Text="{Binding Value}"
                           ToolTip="{Binding Value1}" />

                <Button Grid.Column="2"
                        Margin="0,0"
                        VerticalAlignment="Center"
                        h:Cattach.Icon="&#xe7f3;"
                        Style="{DynamicResource {x:Static h:ButtonKeys.Transparent}}" />

                <Button x:Name="btn_close"
                        Grid.Column="3"
                        Margin="15,0"
                        VerticalAlignment="Center"
                        Style="{DynamicResource {x:Static h:ButtonKeys.Close}}" />
    -->
    <!--<Button x:Name="btn_close" Grid.Column="2" Style="{DynamicResource {x:Static h:ButtonKeys.Close}}" Margin="10,0"
                                                   IconSize="12" MouseOverForeground="{DynamicResource {x:Static h:BrushKeys.Red}}}" Visibility="Hidden"
                                                   Foreground="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem},Path=Foreground}"/>-->
    <!--
            </Grid>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Path=IsMouseOver}" Value="True">
                    <Setter TargetName="btn_close" Property="Visibility" Value="Visible" />
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <DataTemplate x:Key="C.TestViewModel.Item.Checked" DataType="{x:Type h:TestViewModel}">
            <Grid x:Name="grid" HorizontalAlignment="Stretch" TextBlock.Foreground="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Path=Foreground}">
                <Grid.RowDefinitions>
                    <RowDefinition />
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

    -->
    <!--<TextBlock Style="{StaticResource {x:Static h:TextBlockKeys.Icon}}" Margin="10,0" Grid.RowSpan="2" Text="&#xe90c;" FontSize="15" VerticalAlignment="Center" HorizontalAlignment="Center"/>-->
    <!--

                <CheckBox Margin="10,0" Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}" />

                <TextBlock Grid.Row="1"
                           Grid.Column="1"
                           VerticalAlignment="Center"
                           Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}"
                           Text="{Binding Value}"
                           ToolTip="{Binding Value1}" />


                <Button x:Name="btn_close"
                           Grid.Column="2"
                           IconSize="12"
                           Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}"
                           MouseOverForeground="{DynamicResource {x:Static h:BrushKeys.Red}}}"
                           Style="{DynamicResource {x:Static h:ButtonKeys.Close}}"
                           Visibility="Hidden" />
            </Grid>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Path=IsMouseOver}" Value="True">
                    <Setter TargetName="btn_close" Property="Visibility" Value="Visible" />
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <DataTemplate x:Key="C.TestViewModel.Item.Many" DataType="{x:Type h:TestViewModel}">
            <Grid x:Name="grid" HorizontalAlignment="Stretch" TextBlock.Foreground="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Path=Foreground}">
                <Grid.RowDefinitions>
                    <RowDefinition />
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

    -->
    <!--<TextBlock Style="{StaticResource {x:Static h:TextBlockKeys.Icon}}" Margin="10,0" Grid.RowSpan="2" Text="&#xe90c;" FontSize="15" VerticalAlignment="Center" HorizontalAlignment="Center"/>-->
    <!--

                <CheckBox Margin="2,0" Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}" />

                <TextBlock Grid.Row="1"
                           Grid.Column="1"
                           VerticalAlignment="Center"
                           Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}"
                           Text="{Binding Value}"
                           ToolTip="{Binding Value1}" />

                <TextBlock Grid.Row="1"
                           Grid.Column="2"
                           VerticalAlignment="Center"
                           Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}"
                           Text="{Binding Value1}"
                           ToolTip="{Binding Value1}" />

                <Border x:Name="tb_v2"
                        Grid.Column="3"
                        Height="{DynamicResource {x:Static h:SystemKeys.ItemHeight}}"
                        MinWidth="60"
                        HorizontalAlignment="Center"
                        CornerRadius="{DynamicResource {x:Static h:CornerRadiusKeys.CornerRadius}}">
                    <TextBlock Grid.Row="1"
                               Margin="2,0"
                               VerticalAlignment="Center"
                               Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}"
                               Text="{Binding Value2}"
                               ToolTip="{Binding Value1}" />
                </Border>

                <Button x:Name="btn_close"
                           Grid.Column="4"
                           IconSize="12"
                           Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}"
                           MouseOverForeground="{DynamicResource {x:Static h:BrushKeys.Red}}}"
                           Style="{DynamicResource {x:Static h:ButtonKeys.Close}}"
                           Visibility="Hidden" />
            </Grid>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Path=IsMouseOver}" Value="True">
                    <Setter TargetName="btn_close" Property="Visibility" Value="Visible" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Value2}" Value="空闲">
                    <Setter TargetName="tb_v2" Property="Background" Value="Gray" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Value2}" Value="故障">
                    <Setter TargetName="tb_v2" Property="Background" Value="Red" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Value2}" Value="未连接">
                    <Setter TargetName="tb_v2" Property="Background" Value="Black" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Value2}" Value="生成中">
                    <Setter TargetName="tb_v2" Property="Background" Value="Green" />
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <DataTemplate x:Key="C.TestViewModel.Item.Server" DataType="{x:Type h:TestViewModel}">
            <Grid x:Name="grid" HorizontalAlignment="Stretch" TextBlock.Foreground="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Path=Foreground}">
                <Grid.RowDefinitions>
                    <RowDefinition />
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <CheckBox Margin="2,0" Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}" />

                <TextBlock Grid.Row="1"
                           Grid.Column="2"
                           VerticalAlignment="Center"
                           Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}"
                           Text="{Binding Value}"
                           ToolTip="{Binding Value1}" />
                <h:Ping Grid.Column="1"
                        IP="{Binding Value1}"
                        RunningForegroundBrush="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}"
                        Style="{DynamicResource {x:Static h:Ping.SingleKey}}" />

                <Button x:Name="btn_close"
                           Grid.Column="4"
                           IconSize="12"
                           Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}"
                           MouseOverForeground="{DynamicResource {x:Static h:BrushKeys.Red}}}"
                           Style="{DynamicResource {x:Static h:ButtonKeys.Close}}"
                           Visibility="Hidden" />
            </Grid>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Path=IsMouseOver}" Value="True">
                    <Setter TargetName="btn_close" Property="Visibility" Value="Visible" />
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
    </h:MenuWindowBase.Resources>-->

    <h:MenuWindowBase.MenuContent>
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="文件(F)" Style="{StaticResource C.MenuItem.Header}">
                <MenuItem Header="新建任务" IsEnabled="True" />
                <MenuItem Header="新建模板" IsEnabled="True" />
                <MenuItem Header="打开任务" />
                <MenuItem Header="保存任务" />
                <MenuItem Header="另存为" />
                <Separator Style="{DynamicResource {x:Static h:SeparatorKeys.Default}}" />
                <MenuItem Header="导出任务" />
                <MenuItem Header="导入任务" />
                <MenuItem Header="另存为模板" />
                <Separator Style="{DynamicResource {x:Static h:SeparatorKeys.Default}}" />
                <MenuItem Header="退出" />
            </MenuItem>

            <MenuItem Header="编辑(E)" Style="{StaticResource C.MenuItem.Header}">
                <MenuItem Header="撤销" />
                <MenuItem Header="剪切" />
                <Separator Style="{DynamicResource {x:Static h:SeparatorKeys.Default}}" />
                <MenuItem Header="复制" />
                <MenuItem Header="粘贴" />
                <MenuItem Header="删除" />
            </MenuItem>

            <MenuItem Header="设置(S)" Style="{StaticResource C.MenuItem.Header}">
                <MenuItem Header="滤波" IsEnabled="True" />
                <MenuItem Header="陷波" IsEnabled="True" />
            </MenuItem>

            <MenuItem Header="帮助(H)" Style="{StaticResource C.MenuItem.Header}">
                <MenuItem Header="查看帮助" IsEnabled="True" />
                <MenuItem Header="注册产品" IsEnabled="True" />
                <MenuItem Header="技术支持" IsEnabled="True" />
                <MenuItem Header="软件升级" IsEnabled="True" />
                <Separator Style="{DynamicResource {x:Static h:SeparatorKeys.Default}}" />
                <MenuItem Header="检查更新" IsEnabled="True" />
                <MenuItem Header="关于" IsEnabled="True" />
            </MenuItem>
        </Menu>
    </h:MenuWindowBase.MenuContent>

    <h:GitTopContainer HeaderHeight="60">
        <h:GitTopContainer.CenterContent>
            <Grid Background="{DynamicResource {x:Static h:BrushKeys.BackgroundDefault}}">
                <h:Row Grid.Row="1" Height="Auto" Style="{DynamicResource {x:Static h:Row.Column4Key}}">

                    <h:ImageCore Grid.ColumnSpan="4"
                                 ImageSource="..\Resources\捕获.PNG"
                                 Location="0,0,300,300"
                                 OperateType="{Binding ElementName=list_selecttype, Path=SelectedItem}">
                        <!--<h:ImageCore ImageSource="..\Resources\捕获.PNG">-->
                        <h:ImageCore.Resources>
                            <Style TargetType="Ellipse">
                                <Setter Property="RenderTransform" Value="{DynamicResource {x:Static h:SystemKeys.TransformGroup}}" />
                                <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
                            </Style>
                        </h:ImageCore.Resources>

                        <h:Interaction.Behaviors>
                            <h:ImageBaseMouseWheelBehavior />
                            <h:ImageBaseMouseEnlargeBehavior />
                            <!--<h:ImageBaseMouseDragBehavior/>-->
                            <h:ImageBaseMouseRightDragBehavior />
                            <h:ImageBaseMouseSignBehavior />
                            <h:ImageBaseMouseBubbleBehavior />
                        </h:Interaction.Behaviors>

                        <h:ImageCore.InnerContent>

                            <Grid x:Name="grid_drag">
                                <ListBox Width="1000"
                                         Height="800"
                                         HorizontalAlignment="Stretch"
                                         VerticalAlignment="Stretch"
                                         ItemsSource="{Binding Servers}"
                                         SelectedItem="{Binding SelectedServer}"
                                         Style="{DynamicResource {x:Static h:ListBoxKeys.Clear}}">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel>
                                                <StackPanel DockPanel.Dock="Top" Orientation="Horizontal">
                                                    <TextBlock x:Name="tb_icon"
                                                               Cursor="ScrollAll"
                                                               FontSize="42"
                                                               FontWeight="Black"
                                                               Foreground="{DynamicResource {x:Static h:BrushKeys.Accent}}"
                                                               Style="{DynamicResource {x:Static h:TextBlockKeys.Icon}}"
                                                               Text="&#xe6f9;" />

                                                    <TextBlock x:Name="tb_name"
                                                               Cursor="Hand"
                                                               Foreground="{DynamicResource {x:Static h:BrushKeys.Accent}}"
                                                               Text="{Binding Value}">
                                                        <h:Interaction.Triggers>
                                                            <h:EventTrigger EventName="MouseDown">
                                                                <h:InvokeCommandAction Command="{Binding Source={StaticResource S.DataSource.Locator}, Path=ShellViewModel.RelayCommand}" CommandParameter="SelectionChanged.Server.ShowProperty" />
                                                            </h:EventTrigger>
                                                        </h:Interaction.Triggers>

                                                        <h:Interaction.Behaviors>
                                                            <h:SelectListBoxItemElementBehavior />
                                                        </h:Interaction.Behaviors>
                                                    </TextBlock>

                                                    <!--<ToggleButton x:Name="tb"  Foreground="Red" Style="{StaticResource S.ToggleButton.Rotate.90}"/>-->

                                                    <CheckBox x:Name="tb"
                                                              Margin="5,0"
                                                              VerticalAlignment="Center"
                                                              h:Cattach.SelectedText="&#xe863;"
                                                              h:Cattach.UnSelectedText="&#xe862;"
                                                              Style="{DynamicResource {x:Static h:CheckBoxKeys.Single}}" />

                                                    <StackPanel.ContextMenu>
                                                        <ContextMenu>
                                                            <MenuItem Command="{Binding Source={StaticResource S.DataSource.Locator}, Path=ShellViewModel.RelayCommand}"
                                                                      CommandParameter="新建任务"
                                                                      Header="添加装备"
                                                                      IsEnabled="True" />
                                                            <MenuItem Header="删除位置" IsEnabled="True" />
                                                            <Separator Style="{DynamicResource {x:Static h:SeparatorKeys.Default}}" />
                                                            <MenuItem Header="信号检测" IsEnabled="True" />
                                                            <MenuItem Header="功率调整" IsEnabled="True" />
                                                            <Separator Style="{DynamicResource {x:Static h:SeparatorKeys.Default}}" />
                                                            <MenuItem Header="关闭输出" IsEnabled="True" />
                                                            <MenuItem Header="显示/隐藏" IsEnabled="True" />
                                                        </ContextMenu>
                                                    </StackPanel.ContextMenu>
                                                </StackPanel>

                                                <ListBox Width="200"
                                                         MaxHeight="130"
                                                         HorizontalAlignment="Left"
                                                         h:TransitionService.IsVisible="{Binding ElementName=tb, Path=IsChecked}"
                                                         Background="{DynamicResource {x:Static h:BrushKeys.AccentMouseOverBackground}}"
                                                         ItemsSource="{Binding Children}"
                                                         SelectedItem="{Binding SelectedEquipment}"
                                                         Style="{DynamicResource {x:Static h:ListBoxKeys.Single}}">
                                                    <ListBox.ContextMenu>
                                                        <ContextMenu>
                                                            <MenuItem Command="{Binding Source={StaticResource S.DataSource.Locator}, Path=ShellViewModel.RelayCommand}"
                                                                      CommandParameter="新建任务"
                                                                      Header="添加装备"
                                                                      IsEnabled="True" />
                                                            <MenuItem Header="删除装备" IsEnabled="True" />
                                                        </ContextMenu>
                                                    </ListBox.ContextMenu>

                                                    <ListBox.ItemTemplate>
                                                        <DataTemplate>
                                                            <DockPanel>
                                                                <TextBlock x:Name="tb_icon1"
                                                                           FontSize="10"
                                                                           Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}"
                                                                           Style="{DynamicResource {x:Static h:TextBlockKeys.Icon}}"
                                                                           Text="&#xe81f;" />
                                                                <TextBlock x:Name="tb_name1"
                                                                           Margin="10,0"
                                                                           Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}"
                                                                           Text="{Binding Value}" />
                                                                <TextBlock Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}" Text="{Binding Value1}" />
                                                            </DockPanel>

                                                            <!--<TextBlock Text="&#xe81f;" Margin="2,0" Style="{DynamicResource {x:Static h:TextBlockKeys.Icon}}"/>-->
                                                            <!--<DataTemplate.Triggers>
                                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem},Path=IsSelected}" Value="True">
                                                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.Red}}}" TargetName="tb_icon1"/>
                                                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.Red}}}" TargetName="tb_name1"/>
                                                                </DataTrigger>
                                                            </DataTemplate.Triggers>-->
                                                        </DataTemplate>
                                                    </ListBox.ItemTemplate>

                                                    <!--<ListBox.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <WrapPanel MaxWidth="230" Background="{DynamicResource {x:Static h:BrushKeys.AccentMouseOverBackground}}" HorizontalAlignment="Left"/>
                                                    </ItemsPanelTemplate>
                                                </ListBox.ItemsPanel>-->

                                                    <h:Interaction.Triggers>
                                                        <h:EventTrigger EventName="SelectionChanged">
                                                            <!--<h:ChangePropertyAction TargetObject="{Binding ElementName=fd_property}" PropertyName="IsExpanded" Value="True"/>-->

                                                            <h:InvokeCommandAction Command="{Binding Source={StaticResource S.DataSource.Locator}, Path=ShellViewModel.RelayCommand}" CommandParameter="SelectionChanged.ShowProperty" />

                                                        </h:EventTrigger>
                                                    </h:Interaction.Triggers>
                                                </ListBox>

                                                <h:Interaction.Behaviors>
                                                    <h:MouseDragElementBehavior ParentElement="{Binding ElementName=grid_drag}" />
                                                    <!--<h:CanvasMouseDragElementBehavior/>-->
                                                </h:Interaction.Behaviors>
                                            </StackPanel>

                                            <DataTemplate.Triggers>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Path=IsSelected}" Value="True">
                                                    <Setter TargetName="tb_icon" Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.Red}}" />
                                                    <Setter TargetName="tb_name" Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.Red}}" />
                                                </DataTrigger>
                                            </DataTemplate.Triggers>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>

                                    <ListBox.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <!--<UniformGrid Columns="3" Margin="10"/>-->
                                            <h:CirclePanel IsItemsHost="True" Len="350" />
                                        </ItemsPanelTemplate>
                                    </ListBox.ItemsPanel>
                                </ListBox>
                            </Grid>

                            <!--<UniformGrid HorizontalAlignment="Left" VerticalAlignment="Top" Margin="200">
                                <Grid>

                                    <DockPanel>
                                        <TextBlock Text="&#xe6f9;" Style="{DynamicResource {x:Static h:TextBlockKeys.Icon}}" FontSize="33" Foreground="Red" HorizontalAlignment="Center" VerticalAlignment="Center">
                                          <h:Interaction.Behaviors>
                                            <h:MouseDragElementBehavior/>
                                        </h:Interaction.Behaviors>
                                        </TextBlock>

                                        <list
                                    </DockPanel>


                            -->
                            <!--<h:ElementExpander Style="{StaticResource S.ElementExpander.CheckBox}">
                                        <h:Interaction.Behaviors>
                                            <h:MouseDragElementBehavior/>
                                        </h:Interaction.Behaviors>

                                        <h:ToggleExpander.ItemsPanel>
                            -->
                            <!--<ItemsPanelTemplate>
                                                <h:CirclePanel Len="60" Margin="-20"/>
                                                <h:CirclePanel Len="70" Background="Transparent" IsAnimation="False" Margin="-30"/>
                                            </ItemsPanelTemplate>-->
                            <!--

                                            <ItemsPanelTemplate>
                                                <UniformGrid/>
                                            </ItemsPanelTemplate>
                                        </h:ToggleExpander.ItemsPanel>

                                        <h:ElementExpander.Content>
                            -->
                            <!--<TextBlock Text="&#xe6f9;" Style="{DynamicResource {x:Static h:TextBlockKeys.Icon}}" FontSize="33" Foreground="Red" HorizontalAlignment="Center" VerticalAlignment="Center"/>-->
                            <!--


                                            <TextBlock Text="&#xe6f9;" Style="{DynamicResource {x:Static h:TextBlockKeys.Icon}}" FontSize="33" Foreground="Red" HorizontalAlignment="Center" VerticalAlignment="Center">
                            -->
                            <!--<TextBlock.Triggers>
                                                    <EventTrigger RoutedEvent="Loaded">
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <ThicknessAnimation From="0,-50,0,0" To="0,0,0,0" Duration="00:00:01" Storyboard.TargetProperty="Margin" RepeatBehavior="Forever">
                                                                    <ThicknessAnimation.EasingFunction>
                                                                        <BounceEase/>
                                                                    </ThicknessAnimation.EasingFunction>
                                                                </ThicknessAnimation>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </EventTrigger>
                                                </TextBlock.Triggers>-->

                            <!--<h:Interaction.Triggers>
                                                <h:EventTrigger EventName="MouseUp">
                                                    <h:ChangePropertyAction TargetObject="{Binding ElementName=cb}"
                                                                            PropertyName="IsChecked"
                                                                            Value="{Binding ElementName=cb,Path=IsChecked,Converter={x:Static h:XConverter.TrueToFalseConverter}}"/>
                                                </h:EventTrigger>
                                            </h:Interaction.Triggers>-->
                            <!--
                                            </TextBlock>
                                        </h:ElementExpander.Content>

                                        <Button h:Cattach.Icon="&#xe610;" Visibility="Collapsed" h:Cattach.IconSize="22" ToolTip="取消运行" Style="{StaticResource S.Button.Circle.Transparent}"/>
                                        <Button h:Cattach.Icon="&#xe841;" Visibility="Collapsed" h:Cattach.IconSize="22" ToolTip="暂停运行" Style="{StaticResource S.Button.Circle.Transparent}"/>
                                        <Button h:Cattach.Icon="&#xe610;" Visibility="Collapsed" h:Cattach.IconSize="22" ToolTip="取消运行" Style="{StaticResource S.Button.Circle.Transparent}"/>
                                        <Button h:Cattach.Icon="&#xe841;" Visibility="Collapsed" h:Cattach.IconSize="22" ToolTip="暂停运行" Style="{StaticResource S.Button.Circle.Transparent}"/>
                                        <Button h:Cattach.Icon="&#xe610;" Visibility="Collapsed" h:Cattach.IconSize="22" ToolTip="取消运行" Style="{StaticResource S.Button.Circle.Transparent}"/>
                                        <Button h:Cattach.Icon="&#xe841;" Visibility="Collapsed" h:Cattach.IconSize="22" ToolTip="暂停运行" Style="{StaticResource S.Button.Circle.Transparent}"/>
                                        <Button h:Cattach.Icon="&#xe7e5;" Visibility="Collapsed" h:Cattach.IconSize="22" ToolTip="查看波形"
                                    Command="{Binding RelayCommand}" CommandParameter="Button.Click.ShowWave"
                                    Style="{StaticResource S.Button.Circle.Transparent}"/>
                                        <Button h:Cattach.Icon="&#xe614;" Visibility="Collapsed" h:Cattach.IconSize="22" ToolTip="查看日志"
                                    Command="{Binding RelayCommand}" CommandParameter="Button.Click.ShowLog"
                                    Style="{StaticResource S.Button.Circle.Transparent}"/>
                                    </h:ElementExpander>-->
                            <!--


                                    <CheckBox x:Name="cb" IsChecked="False" Visibility="Hidden"/>

                            -->
                            <!--<GroupBox x:Name="gb_detial_1" Width="300" Height="250" HorizontalAlignment="Right" Padding="10,0" Margin="0,-400,-200,0" Header="位置 - 1" Background="{DynamicResource {x:Static h:BrushKeys.AccentMouseOverBackground}}"  h:Cattach.IsVisible="{Binding ElementName=cb,Path=IsChecked}">
                                        <h:Cattach.VisibleActions>
                                            <h:ActionCollection>
                                                <h:TranslateAction StartPoint="-220,200" EndPoint="-220,200"/>
                                                <h:ScaleAction StartX="0" StartY="0" EndX="0" EndY="0"/>
                                            </h:ActionCollection>
                                        </h:Cattach.VisibleActions>

                            -->
                            <!--<TextBlock Text="Grid" FontSize="80" HorizontalAlignment="Center" VerticalAlignment="Center"/>-->
                            <!--

                                        <StackPanel TextBlock.Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}">
                                            <h:TupleGroup>
                                                <h:TupleGroup.LeftItem1>
                                                    <TextBlock Text="地址："/>
                                                </h:TupleGroup.LeftItem1>
                                                <h:TupleGroup.LeftItem2>
                                                    <TextBlock Text="192.168.0.1"/>
                                                </h:TupleGroup.LeftItem2>
                                            </h:TupleGroup>

                                            <h:TupleGroup>
                                                <h:TupleGroup.LeftItem1>
                                                    <TextBlock Text="状态："/>
                                                </h:TupleGroup.LeftItem1>
                                                <h:TupleGroup.LeftItem2>
                            -->
                            <!--<TextBlock Text="待机"/>-->
                            <!--
                                                    <h:PingState IP="192.168.0.1"/>
                                                </h:TupleGroup.LeftItem2>
                                            </h:TupleGroup>

                                            <h:TupleGroup>
                                                <h:TupleGroup.LeftItem1>
                                                    <TextBlock Text="LatLngX："/>
                                                </h:TupleGroup.LeftItem1>
                                                <h:TupleGroup.LeftItem2>
                                                    <TextBlock Text="34.2393"/>
                                                </h:TupleGroup.LeftItem2>
                                            </h:TupleGroup>

                                            <h:TupleGroup>
                                                <h:TupleGroup.LeftItem1>
                                                    <TextBlock Text="LatLngY："/>
                                                </h:TupleGroup.LeftItem1>
                                                <h:TupleGroup.LeftItem2>
                                                    <TextBlock Text="108.8473"/>
                                                </h:TupleGroup.LeftItem2>
                                            </h:TupleGroup>

                                            <h:TupleGroup>
                                                <h:TupleGroup.LeftItem1>
                                                    <TextBlock Text="信号数量："/>
                                                </h:TupleGroup.LeftItem1>
                                                <h:TupleGroup.LeftItem2>
                                                    <TextBlock Text="6"/>
                                                </h:TupleGroup.LeftItem2>
                                            </h:TupleGroup>
                                        </StackPanel>
                                        <h:Cattach.AttachContent>
                                            <ControlTemplate>
                                                <Button  Width="35" Height="35" Style="{DynamicResource {x:Static h:ButtonKeys.Close}}"
                                        h:Cattach.AllowsAnimation="True"  Command="{x:Static h:CommandService.ActionHiddenCommand}"
                                        CommandParameter="{Binding ElementName=gb_detial_1}"
                                        Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}"/>
                                            </ControlTemplate>
                                        </h:Cattach.AttachContent>
                                    </GroupBox>


                                    <GroupBox x:Name="gb_detial_2" Width="300" Height="250" HorizontalAlignment="Right" Padding="10,0" Margin="0,200,-200,0" Header="信号监测" Background="{DynamicResource {x:Static h:BrushKeys.AccentMouseOverBackground}}"  h:Cattach.IsVisible="{Binding ElementName=cb,Path=IsChecked}">
                                        <h:Cattach.VisibleActions>
                                            <h:ActionCollection>
                                                <h:TranslateAction StartPoint="-220,-100" EndPoint="-220,-100" Duration="1200"/>
                                                <h:ScaleAction StartX="0" StartY="0" EndX="0" EndY="0" Duration="1200"/>
                                            </h:ActionCollection>
                                        </h:Cattach.VisibleActions>

                                        <h:Chart yAxis="-25,0,25,75" xAxis="0,60,120,180,240,300,360" Padding="10,10">
                                            <h:Series xDatas="{Binding WaveyAxis}" yDatas="{Binding WaveData}" Foreground="{DynamicResource {x:Static h:BrushKeys.Orange}}">
                                                <h:Line  TryFreeze="False" Style="{StaticResource S.Line.Single}"/>
                                                <h:MarkPosition  TryFreeze="False" Style="{StaticResource S.MarkPosition.Single}" MarkValueType="Max"/>
                                                <h:MarkPosition  TryFreeze="False" Style="{StaticResource S.MarkPosition.Single}" MarkValueType="Min" Foreground="Red"/>
                            -->
                            <!--<h:MarkPosition  TryFreeze="False" Style="{StaticResource S.MarkPosition.Single}" MarkValueType="Default" Foreground="Green" Point="1800,25"/>-->
                            <!--
                                                <h:MarkLine  TryFreeze="False" Style="{StaticResource S.MarkLine.Single}" MarkLineType="Average"/>
                                            </h:Series>
                                        </h:Chart>

                                        <h:Cattach.AttachContent>
                                            <ControlTemplate>
                                                <Button  Width="35" Height="35" Style="{DynamicResource {x:Static h:ButtonKeys.Close}}"
                                        h:Cattach.AllowsAnimation="True"  Command="{x:Static h:CommandService.ActionHiddenCommand}"
                                        CommandParameter="{Binding ElementName=gb_detial_2}"
                                        Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}"/>
                                            </ControlTemplate>
                                        </h:Cattach.AttachContent>
                                    </GroupBox>-->
                            <!--

                                </Grid>


                            </UniformGrid>-->
                        </h:ImageCore.InnerContent>
                    </h:ImageCore>

                    <!--  左侧  -->
                    <h:Drawer Padding="0"
                              HorizontalAlignment="Left"
                              h:Cattach.Icon="装"
                              Header="装备列表"
                              IsExpanded="True"
                              Style="{DynamicResource {x:Static h:Drawer.LeftKey}}"
                              ToolTip="装备列表">
                        <h:Drawer.Background>
                            <SolidColorBrush Opacity="0.5" Color="{DynamicResource AccentColor}" />
                        </h:Drawer.Background>
                        <h:Drawer.Effect>
                            <DropShadowEffect />
                        </h:Drawer.Effect>
                        <h:TransitionService.VisibleActions>
                            <h:TransitionCollection>
                                <h:TranslateTransition StartPoint="-300,0" EndPoint="-200,0" />
                            </h:TransitionCollection>
                        </h:TransitionService.VisibleActions>

                        <DockPanel Width="300" Margin="-10">
                            <h:Row DockPanel.Dock="Top">
                                <TextBox Grid.ColumnSpan="22"
                                         Margin="5,0"
                                         h:Cattach.Icon="&#xe787;"
                                         h:Cattach.Watermark="请输入筛选条件"
                                         Style="{DynamicResource {x:Static h:TextBoxKeys.ClearSingle}}" />
                            </h:Row>

                            <DockPanel Grid.Row="1" DockPanel.Dock="Bottom">

                                <h:Row Height="45"
                                       Margin="10,0"
                                       DockPanel.Dock="Bottom"
                                       Style="{DynamicResource {x:Static h:Row.Column4Key}}">

                                    <CheckBox Content="全选" Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}" />

                                    <Button Grid.Row="2"
                                               Grid.Column="1"
                                               Width="Auto"
                                               Command="{Binding RelayCommand}"
                                               CommandParameter="新建任务"
                                               Content="添加"
                                               DockPanel.Dock="Bottom" />

                                    <Button Grid.Row="2"
                                               Grid.Column="2"
                                               Width="Auto"
                                               Content="删除"
                                               DockPanel.Dock="Bottom" />

                                    <Button Grid.Row="2"
                                               Grid.Column="3"
                                               Width="Auto"
                                               Command="{Binding RelayCommand}"
                                               CommandParameter="Button.Click.Commit"
                                               Content="生成"
                                               DockPanel.Dock="Bottom">
                                    </Button>
                                </h:Row>

                            </DockPanel>

                            <ListBox Grid.Row="1"
                                     Background="Transparent" 
                                     ItemsSource="{Binding Equipments}"
                                     SelectedItem="{Binding SelectedEquipment}"
                                     Style="{DynamicResource {x:Static h:ListBoxKeys.Default}}">
                                <!--ItemTemplate="{StaticResource C.TestViewModel.Item.Many}"-->

                                <ListBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem CommandParameter="新建任务" Header="添加" IsEnabled="True" />
                                        <MenuItem Header="删除" IsEnabled="True" />
                                    </ContextMenu>
                                </ListBox.ContextMenu>
                                <h:Interaction.Triggers>
                                    <h:EventTrigger EventName="SelectionChanged">
                                        <h:InvokeCommandAction Command="{Binding RelayCommand}" CommandParameter="SelectionChanged.ShowProperty" />
                                    </h:EventTrigger>
                                </h:Interaction.Triggers>
                            </ListBox>

                        </DockPanel>
                    </h:Drawer>

                    <!--  左侧  -->
                    <h:Drawer Padding="0"
                              h:Cattach.Icon="位"
                              h:Cattach.IconMargin="0,100,0,0"
                              Background="{DynamicResource {x:Static h:BrushKeys.AccentMouseOverBackground}}"
                              Header="位置列表"
                              IsExpanded="False"
                              Style="{DynamicResource {x:Static h:Drawer.LeftKey}}"
                              ToolTip="位置列表">
                        <h:TransitionService.VisibleActions>
                            <h:TransitionCollection>
                                <h:TranslateTransition StartPoint="-300,0" EndPoint="-200,0" />
                            </h:TransitionCollection>
                        </h:TransitionService.VisibleActions>

                        <DockPanel Width="300" Margin="-10">
                            <h:Row DockPanel.Dock="Top">
                                <TextBox Grid.ColumnSpan="22"
                                         Margin="5,0"
                                         h:Cattach.Icon="&#xe787;"
                                         h:Cattach.Watermark="请输入筛选条件"
                                         Style="{DynamicResource {x:Static h:TextBoxKeys.ClearSingle}}" />
                            </h:Row>

                            <DockPanel Grid.Row="1" DockPanel.Dock="Bottom">
                                <h:Row Height="45"
                                       Margin="10,0"
                                       DockPanel.Dock="Bottom"
                                       Style="{DynamicResource {x:Static h:Row.Column3Key}}">

                                    <Button Grid.Row="2"
                                               Grid.Column="0"
                                               Width="Auto"
                                               Command="{Binding RelayCommand}"
                                               CommandParameter="新建任务"
                                               Content="添加"
                                               DockPanel.Dock="Bottom" />

                                    <Button Grid.Row="2"
                                               Grid.Column="1"
                                               Width="Auto"
                                               Content="删除"
                                               DockPanel.Dock="Bottom" />

                                    <Button Grid.Row="2"
                                               Grid.Column="3"
                                               Width="Auto"
                                               Command="{Binding RelayCommand}"
                                               CommandParameter="Button.Click.Commit"
                                               Content="生成"
                                               DockPanel.Dock="Bottom">
                                    </Button>
                                </h:Row>

                            </DockPanel>

                            <ListBox Grid.Row="1"
                                     Background="Transparent"
                                     ItemsSource="{Binding Servers}"
                                     SelectedItem="{Binding SelectedServer}"
                                     Style="{DynamicResource {x:Static h:ListBoxKeys.Single}}">

                                <ListBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem CommandParameter="新建任务" Header="添加位置" IsEnabled="True" />
                                        <MenuItem CommandParameter="新建任务" Header="添加装备" IsEnabled="True" />
                                        <MenuItem Header="删除位置" IsEnabled="True" />
                                        <Separator Style="{DynamicResource {x:Static h:SeparatorKeys.Default}}" />
                                        <MenuItem Header="信号检测" IsEnabled="True" />
                                        <MenuItem Header="功率调整" IsEnabled="True" />
                                        <MenuItem Header="关闭输出" IsEnabled="True" />
                                        <MenuItem Header="显示/隐藏" IsEnabled="True" />
                                    </ContextMenu>
                                </ListBox.ContextMenu>

                                <ListBox.ItemTemplate>
                                    <DataTemplate DataType="{x:Type local:ServerViewModel}">
                                        <Expander Margin="0"
                                                  Padding="0"
                                                  h:Cattach.SelectBackground="Transparent"
                                                  Background="Transparent"
                                                  Style="{StaticResource S.Expander.Accent}">
                                            <Expander.Header>
                                                <Grid x:Name="grid" HorizontalAlignment="Stretch" Background="Transparent">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto" />
                                                        <ColumnDefinition />
                                                        <ColumnDefinition />
                                                        <ColumnDefinition Width="Auto" />
                                                    </Grid.ColumnDefinitions>

                                                    <TextBlock Grid.Row="1"
                                                               Grid.Column="0"
                                                               VerticalAlignment="Center"
                                                               FontSize="15"
                                                               Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}"
                                                               Style="{DynamicResource {x:Static h:TextBlockKeys.Icon}}"
                                                               Text="&#xe73b;"
                                                               ToolTip="{Binding Value1}" />

                                                    <TextBlock Grid.Row="1"
                                                               Grid.Column="1"
                                                               Margin="5,0"
                                                               VerticalAlignment="Center"
                                                               Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}"
                                                               Text="{Binding Value}"
                                                               ToolTip="{Binding Value1}" />

                                                    <h:Ping Grid.Column="2"
                                                            IP="{Binding Value1}"
                                                            RunningForegroundBrush="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}"
                                                            Style="{DynamicResource {x:Static h:Ping.SingleKey}}" />

                                                    <TextBlock Grid.Row="1"
                                                               Grid.Column="3"
                                                               Margin="10,0"
                                                               VerticalAlignment="Center"
                                                               Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}">
                                                        <Run Text="数量" />
                                                        <Run Text="{Binding Children.Count, Mode=OneWay}" />
                                                    </TextBlock>

                                                    <Button x:Name="btn_close"
                                                               Grid.Column="4"
                                                               Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}"
                                                               h:Cattach.IconSize="12"
                                                               h:Cattach.MouseOverForeground="{DynamicResource {x:Static h:BrushKeys.Red}}"
                                                               Style="{DynamicResource {x:Static h:ButtonKeys.Close}}"
                                                               Visibility="Hidden" />


                                                    <h:Interaction.Triggers>
                                                        <h:EventTrigger EventName="MouseDown">
                                                            <h:InvokeCommandAction Command="{Binding Source={StaticResource S.DataSource.Locator}, Path=ShellViewModel.RelayCommand}" CommandParameter="SelectionChanged.Server.ShowProperty" />
                                                        </h:EventTrigger>
                                                    </h:Interaction.Triggers>

                                                </Grid>
                                            </Expander.Header>

                                            <ListBox Background="Transparent" ItemsSource="{Binding Children}">

                                                <ListBox.ContextMenu>
                                                    <ContextMenu>
                                                        <MenuItem CommandParameter="新建任务" Header="添加" IsEnabled="True" />
                                                        <MenuItem Header="删除" IsEnabled="True" />
                                                    </ContextMenu>
                                                </ListBox.ContextMenu>

                                                <ItemsControl.ItemTemplate>
                                                    <DataTemplate DataType="{x:Type h:TestViewModel}">
                                                        <Grid x:Name="grid"
                                                              Margin="10,0,0,0"
                                                              HorizontalAlignment="Stretch"
                                                              TextBlock.Foreground="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Path=Foreground}">
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition />
                                                            </Grid.RowDefinitions>

                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="Auto" />
                                                                <ColumnDefinition />
                                                                <ColumnDefinition />
                                                                <ColumnDefinition />
                                                                <ColumnDefinition Width="Auto" />
                                                            </Grid.ColumnDefinitions>

                                                            <!--<TextBlock Style="{StaticResource {x:Static h:TextBlockKeys.Icon}}" Margin="10,0" Grid.RowSpan="2" Text="&#xe90c;" FontSize="15" VerticalAlignment="Center" HorizontalAlignment="Center"/>-->

                                                            <!--<CheckBox Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}"/>-->

                                                            <TextBlock Grid.Row="1"
                                                                       Grid.Column="0"
                                                                       Margin="10,0"
                                                                       VerticalAlignment="Center"
                                                                       FontSize="12"
                                                                       Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}"
                                                                       Style="{DynamicResource {x:Static h:TextBlockKeys.Icon}}"
                                                                       Text="&#xe861;"
                                                                       ToolTip="{Binding Value1}" />

                                                            <TextBlock Grid.Row="1"
                                                                       Grid.Column="1"
                                                                       VerticalAlignment="Center"
                                                                       Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}"
                                                                       Text="{Binding Value}"
                                                                       ToolTip="{Binding Value1}" />

                                                            <TextBlock Grid.Row="1"
                                                                       Grid.Column="2"
                                                                       Margin="5,0"
                                                                       VerticalAlignment="Center"
                                                                       Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}"
                                                                       Text="{Binding Value1}"
                                                                       ToolTip="{Binding Value1}" />

                                                            <Border x:Name="tb_v2"
                                                                    Grid.Column="3"
                                                                    Height="{DynamicResource {x:Static h:SystemKeys.ItemHeight}}"
                                                                    MinWidth="60"
                                                                    HorizontalAlignment="Center"
                                                                    CornerRadius="{DynamicResource {x:Static h:CornerRadiusKeys.CornerRadius}}">
                                                                <TextBlock Grid.Row="1"
                                                                           Margin="2,0"
                                                                           VerticalAlignment="Center"
                                                                           Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}"
                                                                           Text="{Binding Value2}"
                                                                           ToolTip="{Binding Value1}" />
                                                            </Border>

                                                            <Button x:Name="btn_close"
                                                                       Grid.Column="4"
                                                                       Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}"
                                                                       h:Cattach.IconSize="12"
                                                                       h:Cattach.MouseOverForeground="{DynamicResource {x:Static h:BrushKeys.Red}}"
                                                                       Style="{DynamicResource {x:Static h:ButtonKeys.Close}}"
                                                                       Visibility="Hidden" />
                                                        </Grid>

                                                    </DataTemplate>
                                                </ItemsControl.ItemTemplate>

                                                <!--<h:Interaction.Triggers>
                                                    <h:EventTrigger EventName="SelectionChanged">
                                                        <h:ChangePropertyAction TargetObject="{Binding ElementName=fd_property}" PropertyName="IsExpanded" Value="True"/>
                                                    </h:EventTrigger>
                                                </h:Interaction.Triggers>-->

                                                <h:Interaction.Triggers>
                                                    <h:EventTrigger EventName="SelectionChanged">
                                                        <!--<h:ChangePropertyAction  TargetObject="{Binding ElementName=fd_property}" PropertyName="IsExpanded" Value="True"/>-->
                                                        <h:InvokeCommandAction Command="{Binding Source={StaticResource S.DataSource.Locator}, Path=ShellViewModel.RelayCommand}" CommandParameter="SelectionChanged.ShowProperty" />
                                                    </h:EventTrigger>
                                                </h:Interaction.Triggers>
                                            </ListBox>

                                            <h:Interaction.Behaviors>
                                                <h:SelectListBoxItemElementBehavior />
                                            </h:Interaction.Behaviors>

                                        </Expander>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </DockPanel>
                    </h:Drawer>

                    <!--  右侧  -->
                    <h:Drawer Grid.ColumnSpan="22"
                              Margin="0,50,0,0"
                              Padding="0"
                              h:Cattach.Icon="属"
                              Background="{DynamicResource {x:Static h:BrushKeys.AccentMouseOverBackground}}"
                              Header="装备属性"
                              IsExpanded="{Binding IsExpanedProperty, Mode=TwoWay}"
                              Style="{DynamicResource {x:Static h:Drawer.RightKey}}"
                              ToolTip="属性">
                        <h:TransitionService.VisibleActions>
                            <h:TransitionCollection>
                                <h:TranslateTransition StartPoint="300,0" EndPoint="200,0" />
                            </h:TransitionCollection>
                        </h:TransitionService.VisibleActions>

                        <Grid Width="300" Margin="0">
                            <ContentControl Content="{Binding SelectedEquipment, Mode=TwoWay}">
                                <ContentControl.ContentTemplate>
                                    <DataTemplate DataType="{x:Type h:TestViewModel}">
                                        <StackPanel VerticalAlignment="Top" TextBlock.Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}">


                                            <h:Row Style="{DynamicResource {x:Static h:Row.Column1Key}}">
                                                <TextBox h:Cattach.Title="装备名称："
                                                         h:Cattach.TitleForeground="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}"
                                                         DockPanel.Dock="Top"
                                                         Style="{DynamicResource {x:Static h:TextBoxKeys.LabelClear}}"
                                                         Text="{Binding Value}" />
                                            </h:Row>

                                            <h:Row Style="{DynamicResource {x:Static h:Row.Column1Key}}">
                                                <TextBox h:Cattach.Title="装备类型："
                                                         h:Cattach.TitleForeground="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}"
                                                         DockPanel.Dock="Top"
                                                         Style="{DynamicResource {x:Static h:TextBoxKeys.LabelClear}}"
                                                         Text="{Binding Value1}" />
                                            </h:Row>

                                            <h:Row Style="{DynamicResource {x:Static h:Row.Column1Key}}">
                                                <TextBox h:Cattach.Title="信号类型："
                                                         h:Cattach.TitleForeground="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}"
                                                         DockPanel.Dock="Top"
                                                         Style="{DynamicResource {x:Static h:TextBoxKeys.LabelClear}}"
                                                         Text="{Binding Value2}" />
                                            </h:Row>


                                            <h:Row Style="{DynamicResource {x:Static h:Row.Column1Key}}">
                                                <TextBox h:Cattach.Title="中心频率："
                                                         h:Cattach.TitleForeground="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}"
                                                         DockPanel.Dock="Top"
                                                         Style="{DynamicResource {x:Static h:TextBoxKeys.LabelClear}}"
                                                         Text="{Binding Double1}" />
                                            </h:Row>

                                            <h:Row Style="{DynamicResource {x:Static h:Row.Column1Key}}">
                                                <TextBox h:Cattach.Title="输出频率："
                                                         h:Cattach.TitleForeground="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}"
                                                         DockPanel.Dock="Top"
                                                         Style="{DynamicResource {x:Static h:TextBoxKeys.LabelClear}}"
                                                         Text="{Binding Double2}" />
                                            </h:Row>

                                            <h:Row Style="{DynamicResource {x:Static h:Row.Column1Key}}">

                                                <TextBox h:Cattach.Title="信号码速："
                                                         h:Cattach.TitleForeground="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}"
                                                         DockPanel.Dock="Top"
                                                         Style="{DynamicResource {x:Static h:TextBoxKeys.LabelClear}}"
                                                         Text="{Binding Double3}" />
                                            </h:Row>
                                            <h:Row Style="{DynamicResource {x:Static h:Row.Column1Key}}">
                                                <TextBox h:Cattach.Title="调制频偏："
                                                         h:Cattach.TitleForeground="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}"
                                                         DockPanel.Dock="Top"
                                                         Style="{DynamicResource {x:Static h:TextBoxKeys.LabelClear}}"
                                                         Text="{Binding Double10}" />
                                            </h:Row>
                                            <h:Row Style="{DynamicResource {x:Static h:Row.Column1Key}}">
                                                <TextBox h:Cattach.Title="调制深度："
                                                         h:Cattach.TitleForeground="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}"
                                                         DockPanel.Dock="Top"
                                                         Style="{DynamicResource {x:Static h:TextBoxKeys.LabelClear}}"
                                                         Text="{Binding Double12}" />
                                            </h:Row>
                                        </StackPanel>
                                    </DataTemplate>
                                </ContentControl.ContentTemplate>
                            </ContentControl>
                        </Grid>

                    </h:Drawer>

                    <!--  右侧  -->
                    <h:Drawer Grid.ColumnSpan="22"
                              Margin="0,50,0,0"
                              Padding="0"
                              h:Cattach.Icon="属"
                              h:Cattach.IconMargin="0,100,0,0"
                              Background="{DynamicResource {x:Static h:BrushKeys.AccentMouseOverBackground}}"
                              Header="位置属性"
                              IsExpanded="{Binding IsExpandedServerProperty, Mode=TwoWay}"
                              Style="{StaticResource {x:Static h:Drawer.RightKey}}"
                              ToolTip="属性">
                        <h:TransitionService.VisibleActions>
                            <h:TransitionCollection>
                                <h:TranslateTransition StartPoint="300,0" EndPoint="200,0" />
                            </h:TransitionCollection>
                        </h:TransitionService.VisibleActions>

                        <Grid Width="300" Margin="0">
                            <ContentControl Content="{Binding SelectedServer, Mode=TwoWay}">
                                <ContentControl.ContentTemplate>
                                    <DataTemplate DataType="{x:Type local:ServerViewModel}">
                                        <StackPanel VerticalAlignment="Top" TextBlock.Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}">


                                            <h:Row Style="{DynamicResource {x:Static h:Row.Column1Key}}">
                                                <TextBox h:Cattach.Title="名称："
                                                         h:Cattach.TitleForeground="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}"
                                                         DockPanel.Dock="Top"
                                                         Style="{DynamicResource {x:Static h:TextBoxKeys.LabelClear}}"
                                                         Text="{Binding Value}" />
                                            </h:Row>

                                            <h:Row Margin="{DynamicResource {x:Static h:ThicknessKeys.Margin_10_0}}" Style="{DynamicResource {x:Static h:Row.Column1Key}}">
                                                <DockPanel>
                                                    <TextBlock Text="状态：" />

                                                    <h:Ping Margin="10,0" IP="{Binding Value1}" RunningForegroundBrush="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}" />
                                                </DockPanel>
                                            </h:Row>

                                            <h:Row Margin="{DynamicResource {x:Static h:ThicknessKeys.Margin_10_0}}" Style="{DynamicResource {x:Static h:Row.Column1Key}}">
                                                <TextBlock>
                                                    <Run Text="LatLngX：" />
                                                    <Run Text="34.2393" />
                                                </TextBlock>
                                            </h:Row>

                                            <h:Row Margin="{DynamicResource {x:Static h:ThicknessKeys.Margin_10_0}}" Style="{DynamicResource {x:Static h:Row.Column1Key}}">
                                                <TextBlock>
                                                    <Run Text="LatLngY：" />
                                                    <Run Text="108.085" />
                                                </TextBlock>
                                            </h:Row>

                                            <h:Row Margin="{DynamicResource {x:Static h:ThicknessKeys.Margin_10_0}}" Style="{DynamicResource {x:Static h:Row.Column1Key}}">
                                                <TextBlock>
                                                    <Run Text="装备数量：" />
                                                    <Run Text="{Binding Children.Count, Mode=OneWay}" />
                                                </TextBlock>
                                            </h:Row>
                                        </StackPanel>
                                    </DataTemplate>
                                </ContentControl.ContentTemplate>
                            </ContentControl>
                        </Grid>
                    </h:Drawer>


                    <h:ToggleExpander Grid.ColumnSpan="4"
                                      HorizontalAlignment="Right"
                                      VerticalAlignment="Top"
                                      Background="{DynamicResource {x:Static h:BrushKeys.AccentMouseOverBackground}}"
                                      DockPanel.Dock="Right"
                                      Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}"
                                      IsExpanded="False"
                                      Style="{DynamicResource {x:Static h:ToggleExpander.SingleKey}}">
                        <h:ToggleExpander.Resources>
                            <Style x:Key="C.Button.Default" BasedOn="{StaticResource {x:Static h:ButtonKeys.Transparent}}" TargetType="Button">
                                <Setter Property="Height" Value="Auto" />
                                <Setter Property="Icon" Value="&#xe67f;" />
                                <Setter Property="IconSize" Value="30" />
                                <Setter Property="Background" Value="Transparent" />
                                <Setter Property="HorizontalAlignment" Value="Center" />
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}" />
                            </Style>
                        </h:ToggleExpander.Resources>

                        <h:Interaction.Behaviors>
                            <h:MouseDragElementBehavior ConstrainToParentBounds="True" />
                        </h:Interaction.Behaviors>
                        <h:ToggleExpander.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal" />
                            </ItemsPanelTemplate>
                        </h:ToggleExpander.ItemsPanel>

                        <Button h:Cattach.Icon="&#xe909;" Style="{StaticResource C.Button.Default}" />
                        <Button h:Cattach.Icon="&#xe90b;" Style="{StaticResource C.Button.Default}" />
                        <Button h:Cattach.Icon="&#xe90c;" Style="{StaticResource C.Button.Default}" />
                        <Button h:Cattach.Icon="&#xe91a;" Style="{StaticResource C.Button.Default}" />
                        <Button h:Cattach.Icon="&#xe91b;" Style="{StaticResource C.Button.Default}" />
                        <Button h:Cattach.Icon="&#xe927;" Style="{StaticResource C.Button.Default}" />
                        <Button h:Cattach.Icon="&#xe929;" Style="{StaticResource C.Button.Default}" />
                        <Button h:Cattach.Icon="&#xe92a;" Style="{StaticResource C.Button.Default}" />
                        <Button h:Cattach.Icon="&#xe93a;" Style="{StaticResource C.Button.Default}" />


                    </h:ToggleExpander>

                </h:Row>
            </Grid>
        </h:GitTopContainer.CenterContent>

        <h:GitTopItem HeaderContent="{Binding CurrentScene}">
            <h:GitTopItem.HeaderTemplate>
                <DataTemplate DataType="{x:Type h:TestViewModel}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.RowSpan="2"
                                   Margin="10,0"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   Style="{DynamicResource {x:Static h:TextBlockKeys.Icon}}"
                                   Text="&#xe6ad;" />

                        <TextBlock Grid.Row="0"
                                   Grid.Column="1"
                                   VerticalAlignment="Bottom"
                                   Text="当前任务" />

                        <TextBlock Grid.Row="1"
                                   Grid.Column="1"
                                   VerticalAlignment="Center"
                                   FontWeight="Black"
                                   Text="{Binding Value}" />

                    </Grid>
                </DataTemplate>
            </h:GitTopItem.HeaderTemplate>
            <StackPanel>
                <TextBox Margin="10" h:Cattach.Icon="&#xe787;" h:Cattach.Watermark="请输入筛选条件" />
                <GroupBox Margin="0,2"
                          Padding="0"
                          h:Cattach.Icon=""
                          Header="其他任务"
                          Style="{DynamicResource {x:Static h:GroupBoxKeys.UnderLine}}">
                    <ListBox ItemTemplate="{StaticResource C.TestViewModel.Item}" ItemsSource="{Binding Scenes}" SelectedItem="{Binding SelectedScene}">
                        <h:Interaction.Triggers>
                            <h:EventTrigger EventName="MouseDoubleClick">
                                <h:InvokeCommandAction Command="{Binding RelayCommand}" CommandParameter="ListBox.MouseDoubleClick.SetSelectedScene" />
                                <h:InvokeCommandAction Command="{x:Static h:GitTopContainer.CoverHideCommand}" />
                            </h:EventTrigger>
                        </h:Interaction.Triggers>
                    </ListBox>
                </GroupBox>
            </StackPanel>
        </h:GitTopItem>

        <h:GitTopItem HeaderContent="{Binding CurrentTempalte}">
            <h:GitTopItem.HeaderTemplate>
                <DataTemplate DataType="{x:Type h:TestViewModel}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.RowSpan="2"
                                   Margin="10,0"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   Style="{DynamicResource {x:Static h:TextBlockKeys.Icon}}"
                                   Text="&#xe90b;" />

                        <TextBlock Grid.Row="0"
                                   Grid.Column="1"
                                   VerticalAlignment="Bottom"
                                   Text="当前模板" />

                        <TextBlock Grid.Row="1"
                                   Grid.Column="1"
                                   VerticalAlignment="Center"
                                   FontWeight="Black"
                                   Text="{Binding Value}" />

                    </Grid>
                </DataTemplate>
            </h:GitTopItem.HeaderTemplate>
            <StackPanel>
                <TextBox Margin="10" h:Cattach.Icon="&#xe787;" h:Cattach.Watermark="filter" />
                <GroupBox Margin="0,2"
                          Padding="0"
                          h:Cattach.Icon=""
                          Header="Others"
                          Style="{DynamicResource {x:Static h:GroupBoxKeys.UnderLine}}">
                    <ListBox ItemTemplate="{StaticResource C.TestViewModel.Item}" ItemsSource="{Binding Templates}" SelectedItem="{Binding SelectedTemplate}">
                        <h:Interaction.Triggers>
                            <h:EventTrigger EventName="MouseDoubleClick">
                                <h:InvokeCommandAction Command="{Binding RelayCommand}" CommandParameter="ListBox.MouseDoubleClick.SetSelectedTemplate" />
                                <h:InvokeCommandAction Command="{x:Static h:GitTopContainer.CoverHideCommand}" />
                            </h:EventTrigger>
                        </h:Interaction.Triggers>
                    </ListBox>
                </GroupBox>
            </StackPanel>
        </h:GitTopItem>

        <Grid Opacity="0.5">
            <ProgressBar x:Name="pg"
                         Height="60"
                         VerticalAlignment="Top"
                         Background="{DynamicResource {x:Static h:BrushKeys.WhiteOpactiy3}}"
                         Style="{DynamicResource {x:Static h:ProgressBarKeys.Handy}}"
                         Value="{Binding Percent}">
                <!--<ProgressBar.Triggers>
                    <EventTrigger RoutedEvent="Loaded">
                        <BeginStoryboard>
                            <Storyboard RepeatBehavior="Forever">
                                <DoubleAnimation From="0" To="100" Duration="00:00:10" Storyboard.TargetProperty="Value"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </ProgressBar.Triggers>-->
            </ProgressBar>
        </Grid>

        <Grid Height="60" VerticalAlignment="Top">
            <Button x:Name="btn_top_min"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Bottom"
                    h:Cattach.Icon="&#xe9c0;"
                    Background="Transparent"
                    Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}"
                    Style="{DynamicResource {x:Static h:ButtonKeys.Transparent}}">
                <h:Interaction.Triggers>
                    <h:EventTrigger EventName="Click">
                        <h:ChangePropertyAction PropertyName="HeaderHeight" TargetObject="{Binding RelativeSource={RelativeSource AncestorType=h:GitTopContainer}}" Value="0" />
                        <h:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" />
                        <h:ChangePropertyAction PropertyName="Visibility" TargetName="btn_top_max" Value="Visible" />
                        <h:ChangePropertyAction PropertyName="Visibility" TargetName="pg" Value="Collapsed" />

                    </h:EventTrigger>
                </h:Interaction.Triggers>
            </Button>

            <Button x:Name="btn_top_max"
                    Margin="0,-40,150,0"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top"
                    h:Cattach.Icon="&#xe7f1;"
                    h:Cattach.IconSize="12"
                    Background="Transparent"
                    Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}"
                    Style="{DynamicResource {x:Static h:ButtonKeys.Transparent}}"
                    Visibility="Collapsed"
                    WindowChrome.IsHitTestVisibleInChrome="True">
                <h:Interaction.Triggers>
                    <h:EventTrigger EventName="Click">
                        <h:ChangePropertyAction PropertyName="HeaderHeight" TargetObject="{Binding RelativeSource={RelativeSource AncestorType=h:GitTopContainer}}" Value="60" />
                        <h:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" />
                        <h:ChangePropertyAction PropertyName="Visibility" TargetName="btn_top_min" Value="Visible" />
                        <h:ChangePropertyAction PropertyName="Visibility" TargetName="pg" Value="Visible" />
                    </h:EventTrigger>
                </h:Interaction.Triggers>
            </Button>
        </Grid>
    </h:GitTopContainer>


</h:MenuWindowBase>
