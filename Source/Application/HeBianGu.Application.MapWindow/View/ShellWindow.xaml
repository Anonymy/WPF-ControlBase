<h:MenuWindowBase x:Class="HeBianGu.Application.MapWindow.ShellWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:HeBianGu.Application.MapWindow"
        xmlns:h="QQ:908293466" 
        xmlns:cl="clr-namespace:System.Collections;assembly=mscorlib" xmlns:system="clr-namespace:System;assembly=mscorlib"
                  DataContext="{Binding Source={StaticResource S.DataSource.Locator},Path=ShellViewModel}" 
        Style="{DynamicResource S.Window.Menu.Default}" FIcon="&#xeb02;"
        NotifyIconSource="/HeBianGu.General.WpfControlLib;component/Resources/iBook.ico"
        mc:Ignorable="d" Title="ShellWindow" Height="800" Width="1300" CaptionHeight="50">

    <h:MenuWindowBase.Resources>

        <Style x:Key="C.MenuItem.Default" TargetType="MenuItem" BasedOn="{StaticResource S.MenuItem.Single}">
            <Setter Property="Command" Value="{Binding RelayCommand}"/>
            <Setter Property="IsEnabled" Value="False"/>
            <Setter Property="Foreground" Value="{DynamicResource S.Brush.TextForeground.Default}"/>
            <Setter Property="CommandParameter" Value="{Binding RelativeSource={RelativeSource Mode=Self},Path=Header}"/>
        </Style>


        <Style x:Key="C.MenuItem.Header" TargetType="MenuItem" BasedOn="{StaticResource S.MenuItem.Accent}">
            <Setter Property="Command" Value="{Binding RelayCommand}"/>
            <Setter Property="IsEnabled" Value="True"/>
            <Setter Property="Foreground" Value="{DynamicResource S.Brush.TextForeground.White}"/>
            <Setter Property="CommandParameter" Value="{Binding RelativeSource={RelativeSource Mode=Self},Path=Header}"/>
            <Setter Property="h:Cattach.MouseOverForeground" Value="{DynamicResource S.Brush.TextForeground.White}"/>
            <Setter Property="h:Cattach.MouseOverBackground" Value="Transparent"/>
            <Setter Property="h:Cattach.MouseOverBorderBrush" Value="Transparent"/>
            <Setter Property="h:Cattach.SelectBackground" Value="{DynamicResource S.Brush.TextForeground.White}" />
            <Setter Property="h:Cattach.SelectForeground" Value="{DynamicResource S.Brush.Accent}"/>
        </Style>

        <Style TargetType="MenuItem" BasedOn="{StaticResource C.MenuItem.Default}"/>

        <Style x:Key="C.MenuItem.Menu" TargetType="MenuItem" BasedOn="{StaticResource S.MenuItem.Handy}">
            <Setter Property="Foreground" Value="{DynamicResource S.Brush.TextForeground.White}"/>
            <Setter Property="Height" Value="Auto"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
        </Style>

        <Style TargetType="ToggleButton" BasedOn="{StaticResource S.ToggleButton.Single}">
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Height" Value="60"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="BorderBrush" Value="{DynamicResource S.Brush.Accent.MouseOver}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource S.Brush.TextForeground.White}"/>
        </Style>

        <DataTemplate DataType="{x:Type h:TestViewModel}">
            <Grid x:Name="grid" HorizontalAlignment="Stretch" Background="{DynamicResource S.Brush.Accent}" TextBlock.Foreground="{DynamicResource S.Brush.TextForeground.White}">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <TextBlock Style="{StaticResource S.TextBlock.FIcon}" Margin="10,0" Grid.RowSpan="2" Text="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton},Path=Tag}" VerticalAlignment="Center" HorizontalAlignment="Center"/>

                <TextBlock Text="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton},Path=(h:Cattach.Detail)}" Grid.Column="1" Grid.Row="0" VerticalAlignment="Bottom"/>

                <TextBlock Text="{Binding Value}" Grid.Column="1" Grid.Row="1" VerticalAlignment="Center" FontWeight="Black"/>

                <!--<ToggleButton x:Name="tb" Style="{StaticResource ComboToggleButton}" h:Cattach.FIcon="&#xe63a;"  Margin="10,0" IsChecked="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton},Path=IsChecked}"
                                      Grid.Column="2" Grid.RowSpan="2" Foreground="{DynamicResource S.Brush.TextForeground.White}"
                                      VerticalAlignment="Center" HorizontalAlignment="Center"/>-->
            </Grid>
            <!--<DataTemplate.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton},Path=IsChecked}" Value="True">
                    <Setter Property="TextBlock.Foreground" Value="{DynamicResource S.Brush.TextForeground.Default}" TargetName="grid"/>
                    <Setter Property="Foreground" Value="{DynamicResource S.Brush.TextForeground.Default}" TargetName="tb"/>
                    <Setter Property="Background" Value="{DynamicResource S.Brush.TextBackground.Default}" TargetName="grid"/>
                </DataTrigger>
            </DataTemplate.Triggers>-->
        </DataTemplate>

        <DataTemplate x:Key="C.TestViewModel.Item" DataType="{x:Type h:TestViewModel}">
            <Grid x:Name="grid" HorizontalAlignment="Left" Width="{Binding RelativeSource={RelativeSource AncestorType=ListBox},Path=ActualWidth}" TextBlock.Foreground="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem},Path=Foreground}">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <TextBlock Style="{StaticResource S.TextBlock.FIcon}" Margin="10,0" Grid.RowSpan="2" Text="&#xe90c;" FontSize="15" VerticalAlignment="Center" HorizontalAlignment="Center"/>

                <TextBlock Text="{Binding Value}" Grid.Column="1" Grid.Row="1" VerticalAlignment="Center" ToolTip="{Binding Value1}"/>

                <Button Style="{DynamicResource S.Button.Transparent}" h:Cattach.FIcon="&#xe7f3;" VerticalAlignment="Center" Grid.Column="2" Margin="0,0"/>

                <Button x:Name="btn_close" Style="{DynamicResource S.Button.Close}" VerticalAlignment="Center" Grid.Column="3" Margin="15,0"/>
                <!--<h:FButton x:Name="btn_close" Grid.Column="2" Style="{DynamicResource S.FButton.Close}" Margin="10,0"
                                                   FIconSize="12" MouseOverForeground="{DynamicResource S.Brush.Red.Notice}" Visibility="Hidden"
                                                   Foreground="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem},Path=Foreground}"/>-->
            </Grid>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem},Path=IsMouseOver}" Value="True">
                    <Setter Property="Visibility" Value="Visible" TargetName="btn_close"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <DataTemplate x:Key="C.TestViewModel.Item.Checked" DataType="{x:Type h:TestViewModel}">
            <Grid x:Name="grid" HorizontalAlignment="Stretch" TextBlock.Foreground="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem},Path=Foreground}">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <!--<TextBlock Style="{StaticResource S.TextBlock.FIcon}" Margin="10,0" Grid.RowSpan="2" Text="&#xe90c;" FontSize="15" VerticalAlignment="Center" HorizontalAlignment="Center"/>-->

                <h:FCheckBox Margin="10,0" Foreground="{DynamicResource S.Brush.TextForeground.White}"/>

                <TextBlock Text="{Binding Value}" Foreground="{DynamicResource S.Brush.TextForeground.White}" Grid.Column="1" Grid.Row="1" VerticalAlignment="Center" ToolTip="{Binding Value1}"/>


                <h:FButton x:Name="btn_close" Grid.Column="2" Style="{DynamicResource S.FButton.Close}" 
                                                   FIconSize="12" MouseOverForeground="{DynamicResource S.Brush.Red.Notice}" Visibility="Hidden"
                                                   Foreground="{DynamicResource S.Brush.TextForeground.White}"/>
            </Grid>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem},Path=IsMouseOver}" Value="True">
                    <Setter Property="Visibility" Value="Visible" TargetName="btn_close"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <DataTemplate x:Key="C.TestViewModel.Item.Many" DataType="{x:Type h:TestViewModel}">
            <Grid x:Name="grid" HorizontalAlignment="Stretch" TextBlock.Foreground="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem},Path=Foreground}">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <!--<TextBlock Style="{StaticResource S.TextBlock.FIcon}" Margin="10,0" Grid.RowSpan="2" Text="&#xe90c;" FontSize="15" VerticalAlignment="Center" HorizontalAlignment="Center"/>-->

                <h:FCheckBox Margin="2,0" Foreground="{DynamicResource S.Brush.TextForeground.White}"/>

                <TextBlock Text="{Binding Value}" Foreground="{DynamicResource S.Brush.TextForeground.White}" Grid.Column="1" Grid.Row="1" VerticalAlignment="Center" ToolTip="{Binding Value1}"/>

                <TextBlock Text="{Binding Value1}" Grid.Column="2" Foreground="{DynamicResource S.Brush.TextForeground.White}" Grid.Row="1" VerticalAlignment="Center" ToolTip="{Binding Value1}"/>

                <Border x:Name="tb_v2" MinWidth="60" Height="{DynamicResource S.Window.Item.Height}"  HorizontalAlignment="Center" Grid.Column="3" CornerRadius="{DynamicResource S.Window.Item.CornerRadius}">
                    <TextBlock Text="{Binding Value2}"   Margin="2,0"  Foreground="{DynamicResource S.Brush.TextForeground.White}" Grid.Row="1" VerticalAlignment="Center" ToolTip="{Binding Value1}"/>
                </Border>

                <h:FButton x:Name="btn_close" Grid.Column="4" Style="{DynamicResource S.FButton.Close}" 
                                                   FIconSize="12" MouseOverForeground="{DynamicResource S.Brush.Red.Notice}" Visibility="Hidden"
                                                   Foreground="{DynamicResource S.Brush.TextForeground.White}"/>
            </Grid>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem},Path=IsMouseOver}" Value="True">
                    <Setter Property="Visibility" Value="Visible" TargetName="btn_close"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Value2}" Value="空闲">
                    <Setter Property="Background" Value="Gray" TargetName="tb_v2"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Value2}" Value="故障">
                    <Setter Property="Background" Value="Red" TargetName="tb_v2"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Value2}" Value="未连接">
                    <Setter Property="Background" Value="Black" TargetName="tb_v2"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Value2}" Value="生成中">
                    <Setter Property="Background" Value="Green" TargetName="tb_v2"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <DataTemplate x:Key="C.TestViewModel.Item.Server" DataType="{x:Type h:TestViewModel}">
            <Grid x:Name="grid" HorizontalAlignment="Stretch" TextBlock.Foreground="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem},Path=Foreground}">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <h:FCheckBox Margin="2,0" Foreground="{DynamicResource S.Brush.TextForeground.White}"/>

                <TextBlock Text="{Binding Value}" Foreground="{DynamicResource S.Brush.TextForeground.White}" Grid.Column="2" Grid.Row="1" VerticalAlignment="Center" ToolTip="{Binding Value1}"/>
                <h:Ping IP="{Binding Value1}" RunningForegroundBrush="{DynamicResource S.Brush.TextForeground.White}" Style="{DynamicResource S.Ping.Single}" Grid.Column="1"/>

                <h:FButton x:Name="btn_close" Grid.Column="4" Style="{DynamicResource S.FButton.Close}" 
                                                   FIconSize="12" MouseOverForeground="{DynamicResource S.Brush.Red.Notice}" Visibility="Hidden"
                                                   Foreground="{DynamicResource S.Brush.TextForeground.White}"/>
            </Grid>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem},Path=IsMouseOver}" Value="True">
                    <Setter Property="Visibility" Value="Visible" TargetName="btn_close"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
    </h:MenuWindowBase.Resources>

    <h:MenuWindowBase.MenuContent>
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="文件(F)" Style="{StaticResource C.MenuItem.Header}">
                <MenuItem Header="新建任务" IsEnabled="True"/>
                <MenuItem Header="新建模板" IsEnabled="True"/>
                <MenuItem Header="打开任务"/>
                <MenuItem Header="保存任务"/>
                <MenuItem Header="另存为"/>
                <Separator Style="{StaticResource S.Separator.Default}"/>
                <MenuItem Header="导出任务"/>
                <MenuItem Header="导入任务"/>
                <MenuItem Header="另存为模板"/>
                <Separator Style="{StaticResource S.Separator.Default}"/>
                <MenuItem Header="退出"/>
            </MenuItem>

            <MenuItem Header="编辑(E)"  Style="{StaticResource C.MenuItem.Header}">
                <MenuItem Header="撤销"/>
                <MenuItem Header="剪切"/>
                <Separator Style="{StaticResource S.Separator.Default}"/>
                <MenuItem Header="复制"/>
                <MenuItem Header="粘贴"/>
                <MenuItem Header="删除"/>
            </MenuItem>

            <MenuItem Header="设置(S)"  Style="{StaticResource C.MenuItem.Header}">
                <MenuItem Header="滤波"  IsEnabled="True"/>
                <MenuItem Header="陷波"  IsEnabled="True"/>
            </MenuItem>

            <MenuItem Header="帮助(H)" Style="{StaticResource C.MenuItem.Header}">
                <MenuItem Header="查看帮助"  IsEnabled="True"/>
                <MenuItem Header="注册产品"  IsEnabled="True"/>
                <MenuItem Header="技术支持"  IsEnabled="True"/>
                <MenuItem Header="软件升级"  IsEnabled="True"/>
                <Separator Style="{StaticResource S.Separator.Default}"/>
                <MenuItem Header="检查更新"  IsEnabled="True"/>
                <MenuItem Header="关于"  IsEnabled="True"/>
            </MenuItem>
        </Menu>
    </h:MenuWindowBase.MenuContent>

    <h:GitTopContainer HeaderHeight="60">
        <h:GitTopContainer.CenterContent>
            <Grid Background="{DynamicResource S.Brush.TextBackground.Default}">
                <h:Row Style="{StaticResource S.Row.Column.4}" Grid.Row="1" Height="Auto">

                    <h:ImageCore ImageSource="..\Resources\捕获.PNG" Grid.ColumnSpan="4" Location="0,0,300,300" OperateType="{Binding ElementName=list_selecttype,Path=SelectedItem}">
                        <!--<h:ImageCore ImageSource="..\Resources\捕获.PNG">-->
                        <h:ImageCore.Resources>
                            <Style TargetType="Ellipse">
                                <Setter Property="RenderTransform" Value="{StaticResource S.TransformGroup.Default}"/>
                                <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            </Style>
                        </h:ImageCore.Resources>

                        <h:Interaction.Behaviors>
                            <h:ImageBaseMouseWheelBehavior/>
                            <h:ImageBaseMouseEnlargeBehavior/>
                            <!--<h:ImageBaseMouseDragBehavior/>-->
                            <h:ImageBaseMouseRightDragBehavior/>
                            <h:ImageBaseMouseSignBehavior/>
                            <h:ImageBaseMouseBubbleBehavior/>
                        </h:Interaction.Behaviors>

                        <h:ImageCore.InnerContent>

                            <Grid x:Name="grid_drag">
                                <ListBox HorizontalAlignment="Stretch" Height="800" Width="1000" VerticalAlignment="Stretch" ItemsSource="{Binding Servers}" SelectedItem="{Binding SelectedServer}" 
                                         Style="{StaticResource S.ListBox.Clear}">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel>
                                                <StackPanel Orientation="Horizontal" DockPanel.Dock="Top">
                                                    <TextBlock x:Name="tb_icon" Text="&#xe6f9;" Cursor="ScrollAll" FontSize="42" FontWeight="Black" Foreground="{DynamicResource S.Brush.Accent}" Style="{DynamicResource S.TextBlock.FIcon}"/>

                                                    <TextBlock x:Name="tb_name"  Text="{Binding Value}" Cursor="Hand" Foreground="{DynamicResource S.Brush.Accent}">
                                                     <h:Interaction.Triggers>
                                                        <h:EventTrigger EventName="MouseDown">
                                                            <h:InvokeCommandAction Command="{Binding Source={StaticResource S.DataSource.Locator},Path=ShellViewModel.RelayCommand}" CommandParameter="SelectionChanged.Server.ShowProperty"/>
                                                        </h:EventTrigger>
                                                    </h:Interaction.Triggers>
                                                    
                                                    <h:Interaction.Behaviors>
                                                        <h:SelectListBoxItemElementBehavior/>
                                                    </h:Interaction.Behaviors>
                                                    </TextBlock>

                                                    <!--<ToggleButton x:Name="tb"  Foreground="Red" Style="{StaticResource S.ToggleButton.Rotate.90}"/>-->

                                                    <CheckBox x:Name="tb" Margin="5,0" VerticalAlignment="Center"  Style="{StaticResource S.CheckBox.Single}" h:Cattach.SelectedText="&#xe863;" h:Cattach.UnSelectedText="&#xe862;"/>

                                                    <StackPanel.ContextMenu>
                                                        <ContextMenu>
                                                            <MenuItem Header="添加装备" IsEnabled="True" Command="{Binding Source={StaticResource S.DataSource.Locator},Path=ShellViewModel.RelayCommand}" CommandParameter="新建任务"/>
                                                            <MenuItem Header="删除位置" IsEnabled="True"/>
                                                            <Separator Style="{StaticResource S.Separator.Default}"/>
                                                            <MenuItem Header="信号检测" IsEnabled="True"/>
                                                            <MenuItem Header="功率调整" IsEnabled="True"/>
                                                            <Separator Style="{StaticResource S.Separator.Default}"/>
                                                            <MenuItem Header="关闭输出" IsEnabled="True"/>
                                                            <MenuItem Header="显示/隐藏" IsEnabled="True"/>
                                                        </ContextMenu>
                                                    </StackPanel.ContextMenu>
                                                </StackPanel>

                                                <ListBox ItemsSource="{Binding Children}" SelectedItem="{Binding SelectedEquipment}" Background="{DynamicResource S.Brush.Accent.MouseOver}" HorizontalAlignment="Left" MaxHeight="130" Width="200" h:Cattach.IsVisible="{Binding ElementName=tb,Path=IsChecked}" Style="{DynamicResource S.ListBox.Single}">
                                                    <ListBox.ContextMenu>
                                                        <ContextMenu>
                                                            <MenuItem Header="添加装备" IsEnabled="True" Command="{Binding Source={StaticResource S.DataSource.Locator},Path=ShellViewModel.RelayCommand}" CommandParameter="新建任务"/>
                                                            <MenuItem Header="删除装备" IsEnabled="True"/>
                                                        </ContextMenu>
                                                    </ListBox.ContextMenu>

                                                    <ListBox.ItemTemplate>
                                                        <DataTemplate>
                                                            <DockPanel>
                                                                <TextBlock x:Name="tb_icon1" Text="&#xe81f;" FontSize="10" Style="{DynamicResource S.TextBlock.FIcon}"  Foreground="{DynamicResource S.Brush.TextForeground.White}"/>
                                                                <TextBlock x:Name="tb_name1" Text="{Binding Value}" Margin="10,0" Foreground="{DynamicResource S.Brush.TextForeground.White}"/>
                                                                <TextBlock Text="{Binding Value1}" Foreground="{DynamicResource S.Brush.TextForeground.White}"/>
                                                            </DockPanel>

                                                            <!--<TextBlock Text="&#xe81f;" Margin="2,0" Style="{DynamicResource S.TextBlock.FIcon}"/>-->
                                                            <!--<DataTemplate.Triggers>
                                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem},Path=IsSelected}" Value="True">
                                                                    <Setter Property="Foreground" Value="{DynamicResource S.Brush.Red.Notice}" TargetName="tb_icon1"/>
                                                                    <Setter Property="Foreground" Value="{DynamicResource S.Brush.Red.Notice}" TargetName="tb_name1"/>
                                                                </DataTrigger>
                                                            </DataTemplate.Triggers>-->
                                                        </DataTemplate>
                                                    </ListBox.ItemTemplate>

                                                    <!--<ListBox.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <WrapPanel MaxWidth="230" Background="{DynamicResource S.Brush.Accent.MouseOver.Background}" HorizontalAlignment="Left"/>
                                                    </ItemsPanelTemplate>
                                                </ListBox.ItemsPanel>-->

                                                    <h:Interaction.Triggers>
                                                        <h:EventTrigger EventName="SelectionChanged">
                                                            <!--<h:ChangePropertyAction TargetObject="{Binding ElementName=fd_property}" PropertyName="IsExpanded" Value="True"/>-->

                                                            <h:InvokeCommandAction Command="{Binding Source={StaticResource S.DataSource.Locator},Path=ShellViewModel.RelayCommand}" CommandParameter="SelectionChanged.ShowProperty"/>

                                                        </h:EventTrigger>
                                                    </h:Interaction.Triggers>
                                                </ListBox>

                                                <h:Interaction.Behaviors>
                                                    <h:MouseDragElementBehavior ParentElement="{Binding ElementName=grid_drag}"/>
                                                    <!--<h:CanvasMouseDragElementBehavior/>-->
                                                </h:Interaction.Behaviors>
                                            </StackPanel>

                                            <DataTemplate.Triggers>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem},Path=IsSelected}" Value="True">
                                                    <Setter Property="Foreground" Value="{DynamicResource S.Brush.Red.Notice}" TargetName="tb_icon"/>
                                                    <Setter Property="Foreground" Value="{DynamicResource S.Brush.Red.Notice}" TargetName="tb_name"/>
                                                </DataTrigger>
                                            </DataTemplate.Triggers>
                                        </DataTemplate> 
                                    </ListBox.ItemTemplate>

                                    <ListBox.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <!--<UniformGrid Columns="3" Margin="10"/>-->
                                            <h:CirclePanel Len="350" IsItemsHost="True"/>
                                        </ItemsPanelTemplate>
                                    </ListBox.ItemsPanel>
                                </ListBox>
                            </Grid>

                            <!--<UniformGrid HorizontalAlignment="Left" VerticalAlignment="Top" Margin="200">
                                <Grid>

                                    <DockPanel>
                                        <TextBlock Text="&#xe6f9;" Style="{DynamicResource S.TextBlock.FIcon}" FontSize="33" Foreground="Red" HorizontalAlignment="Center" VerticalAlignment="Center">
                                          <h:Interaction.Behaviors>
                                            <h:MouseDragElementBehavior/>
                                        </h:Interaction.Behaviors>
                                        </TextBlock>
                                        
                                        <list
                                    </DockPanel>
                                  

                                    -->
                            <!--<h:ElementExpander Style="{StaticResource S.ElementExpander.CheckBox}">
                                        <h:Interaction.Behaviors>
                                            <h:MouseDragElementBehavior/>
                                        </h:Interaction.Behaviors>

                                        <h:ToggleExpander.ItemsPanel>
                                            -->
                            <!--<ItemsPanelTemplate>
                                                <h:CirclePanel Len="60" Margin="-20"/>
                                                <h:CirclePanel Len="70" Background="Transparent" IsAnimation="False" Margin="-30"/>
                                            </ItemsPanelTemplate>-->
                            <!--

                                            <ItemsPanelTemplate>
                                                <UniformGrid/>
                                            </ItemsPanelTemplate>
                                        </h:ToggleExpander.ItemsPanel>

                                        <h:ElementExpander.Content>
                                            -->
                            <!--<TextBlock Text="&#xe6f9;" Style="{DynamicResource S.TextBlock.FIcon}" FontSize="33" Foreground="Red" HorizontalAlignment="Center" VerticalAlignment="Center"/>-->
                            <!--

                                            
                                            <TextBlock Text="&#xe6f9;" Style="{DynamicResource S.TextBlock.FIcon}" FontSize="33" Foreground="Red" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                -->
                            <!--<TextBlock.Triggers>
                                                    <EventTrigger RoutedEvent="Loaded">
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <ThicknessAnimation From="0,-50,0,0" To="0,0,0,0" Duration="00:00:01" Storyboard.TargetProperty="Margin" RepeatBehavior="Forever">
                                                                    <ThicknessAnimation.EasingFunction>
                                                                        <BounceEase/>
                                                                    </ThicknessAnimation.EasingFunction>
                                                                </ThicknessAnimation>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </EventTrigger>
                                                </TextBlock.Triggers>-->

                            <!--<h:Interaction.Triggers>
                                                <h:EventTrigger EventName="MouseUp">
                                                    <h:ChangePropertyAction TargetObject="{Binding ElementName=cb}" 
                                                                            PropertyName="IsChecked" 
                                                                            Value="{Binding ElementName=cb,Path=IsChecked,Converter={x:Static h:XConverter.TrueToFalseConverter}}"/>
                                                </h:EventTrigger>
                                            </h:Interaction.Triggers>-->
                            <!--
                                            </TextBlock>
                                        </h:ElementExpander.Content>

                                        <Button h:Cattach.FIcon="&#xe610;" Visibility="Collapsed" h:Cattach.FIconSize="22" ToolTip="取消运行" Style="{StaticResource S.Button.Circle.Transparent}"/>
                                        <Button h:Cattach.FIcon="&#xe841;" Visibility="Collapsed" h:Cattach.FIconSize="22" ToolTip="暂停运行" Style="{StaticResource S.Button.Circle.Transparent}"/>
                                        <Button h:Cattach.FIcon="&#xe610;" Visibility="Collapsed" h:Cattach.FIconSize="22" ToolTip="取消运行" Style="{StaticResource S.Button.Circle.Transparent}"/>
                                        <Button h:Cattach.FIcon="&#xe841;" Visibility="Collapsed" h:Cattach.FIconSize="22" ToolTip="暂停运行" Style="{StaticResource S.Button.Circle.Transparent}"/>
                                        <Button h:Cattach.FIcon="&#xe610;" Visibility="Collapsed" h:Cattach.FIconSize="22" ToolTip="取消运行" Style="{StaticResource S.Button.Circle.Transparent}"/>
                                        <Button h:Cattach.FIcon="&#xe841;" Visibility="Collapsed" h:Cattach.FIconSize="22" ToolTip="暂停运行" Style="{StaticResource S.Button.Circle.Transparent}"/>
                                        <Button h:Cattach.FIcon="&#xe7e5;" Visibility="Collapsed" h:Cattach.FIconSize="22" ToolTip="查看波形" 
                                    Command="{Binding RelayCommand}" CommandParameter="Button.Click.ShowWave"
                                    Style="{StaticResource S.Button.Circle.Transparent}"/>
                                        <Button h:Cattach.FIcon="&#xe614;" Visibility="Collapsed" h:Cattach.FIconSize="22" ToolTip="查看日志"
                                    Command="{Binding RelayCommand}" CommandParameter="Button.Click.ShowLog"
                                    Style="{StaticResource S.Button.Circle.Transparent}"/>
                                    </h:ElementExpander>-->
                            <!--


                                    <CheckBox x:Name="cb" IsChecked="False" Visibility="Hidden"/>

                                    -->
                            <!--<GroupBox x:Name="gb_detial_1" Width="300" Height="250" HorizontalAlignment="Right" Padding="10,0" Margin="0,-400,-200,0" Header="位置 - 1" Background="{DynamicResource S.Brush.Accent.MouseOver}"  h:Cattach.IsVisible="{Binding ElementName=cb,Path=IsChecked}">
                                        <h:Cattach.VisibleActions>
                                            <h:ActionCollection>
                                                <h:TranslateAction StartPoint="-220,200" EndPoint="-220,200"/>
                                                <h:ScaleAction StartX="0" StartY="0" EndX="0" EndY="0"/>
                                            </h:ActionCollection>
                                        </h:Cattach.VisibleActions>

                                        -->
                            <!--<TextBlock Text="Grid" FontSize="80" HorizontalAlignment="Center" VerticalAlignment="Center"/>-->
                            <!--

                                        <StackPanel TextBlock.Foreground="{DynamicResource S.Brush.TextForeground.White}">
                                            <h:TupleGroup>
                                                <h:TupleGroup.LeftItem1>
                                                    <TextBlock Text="地址："/>
                                                </h:TupleGroup.LeftItem1>
                                                <h:TupleGroup.LeftItem2>
                                                    <TextBlock Text="192.168.0.1"/>
                                                </h:TupleGroup.LeftItem2>
                                            </h:TupleGroup>

                                            <h:TupleGroup>
                                                <h:TupleGroup.LeftItem1>
                                                    <TextBlock Text="状态："/>
                                                </h:TupleGroup.LeftItem1>
                                                <h:TupleGroup.LeftItem2>
                                                    -->
                            <!--<TextBlock Text="待机"/>-->
                            <!--
                                                    <h:PingState IP="192.168.0.1"/>
                                                </h:TupleGroup.LeftItem2>
                                            </h:TupleGroup>

                                            <h:TupleGroup>
                                                <h:TupleGroup.LeftItem1>
                                                    <TextBlock Text="LatLngX："/>
                                                </h:TupleGroup.LeftItem1>
                                                <h:TupleGroup.LeftItem2>
                                                    <TextBlock Text="34.2393"/>
                                                </h:TupleGroup.LeftItem2>
                                            </h:TupleGroup>

                                            <h:TupleGroup>
                                                <h:TupleGroup.LeftItem1>
                                                    <TextBlock Text="LatLngY："/>
                                                </h:TupleGroup.LeftItem1>
                                                <h:TupleGroup.LeftItem2>
                                                    <TextBlock Text="108.8473"/>
                                                </h:TupleGroup.LeftItem2>
                                            </h:TupleGroup>

                                            <h:TupleGroup>
                                                <h:TupleGroup.LeftItem1>
                                                    <TextBlock Text="信号数量："/>
                                                </h:TupleGroup.LeftItem1>
                                                <h:TupleGroup.LeftItem2>
                                                    <TextBlock Text="6"/>
                                                </h:TupleGroup.LeftItem2>
                                            </h:TupleGroup>
                                        </StackPanel>
                                        <h:Cattach.AttachContent>
                                            <ControlTemplate>
                                                <Button  Width="35" Height="35" Style="{DynamicResource S.Button.Close}"
                                        h:Cattach.AllowsAnimation="True"  Command="{x:Static h:CommandService.ActionHiddenCommand}"
                                        CommandParameter="{Binding ElementName=gb_detial_1}"
                                        Foreground="{DynamicResource S.Brush.TextForeground.White}"/>
                                            </ControlTemplate>
                                        </h:Cattach.AttachContent>
                                    </GroupBox>


                                    <GroupBox x:Name="gb_detial_2" Width="300" Height="250" HorizontalAlignment="Right" Padding="10,0" Margin="0,200,-200,0" Header="信号监测" Background="{DynamicResource S.Brush.Accent.MouseOver}"  h:Cattach.IsVisible="{Binding ElementName=cb,Path=IsChecked}">
                                        <h:Cattach.VisibleActions>
                                            <h:ActionCollection>
                                                <h:TranslateAction StartPoint="-220,-100" EndPoint="-220,-100" Duration="1200"/>
                                                <h:ScaleAction StartX="0" StartY="0" EndX="0" EndY="0" Duration="1200"/>
                                            </h:ActionCollection>
                                        </h:Cattach.VisibleActions>

                                        <h:Chart yAxis="-25,0,25,75" xAxis="0,60,120,180,240,300,360" Padding="10,10">
                                            <h:Series xDatas="{Binding WaveyAxis}" yDatas="{Binding WaveData}" Foreground="{DynamicResource S.Brush.Orange.Notice}">
                                                <h:Line  TryFreeze="False" Style="{StaticResource S.Line.Single}"/>
                                                <h:MarkPosition  TryFreeze="False" Style="{StaticResource S.MarkPosition.Single}" MarkValueType="Max"/>
                                                <h:MarkPosition  TryFreeze="False" Style="{StaticResource S.MarkPosition.Single}" MarkValueType="Min" Foreground="Red"/>
                                                -->
                            <!--<h:MarkPosition  TryFreeze="False" Style="{StaticResource S.MarkPosition.Single}" MarkValueType="Default" Foreground="Green" Point="1800,25"/>-->
                            <!--
                                                <h:MarkLine  TryFreeze="False" Style="{StaticResource S.MarkLine.Single}" MarkLineType="Average"/>
                                            </h:Series>
                                        </h:Chart>

                                        <h:Cattach.AttachContent>
                                            <ControlTemplate>
                                                <Button  Width="35" Height="35" Style="{DynamicResource S.Button.Close}"
                                        h:Cattach.AllowsAnimation="True"  Command="{x:Static h:CommandService.ActionHiddenCommand}"
                                        CommandParameter="{Binding ElementName=gb_detial_2}"
                                        Foreground="{DynamicResource S.Brush.TextForeground.White}"/>
                                            </ControlTemplate>
                                        </h:Cattach.AttachContent>
                                    </GroupBox>-->
                            <!--

                                </Grid>


                            </UniformGrid>-->
                        </h:ImageCore.InnerContent> 
                    </h:ImageCore>

                    <!--左侧-->
                    <h:Drawer Header="装备列表" HorizontalAlignment="Left" h:Cattach.FIcon="装" ToolTip="装备列表"  Style="{StaticResource S.Drawer.Left.Default}" Padding="0" IsExpanded="True">
                        <h:Drawer.Background>
                            <SolidColorBrush Color="{DynamicResource AccentColor}" Opacity="0.5"/>
                        </h:Drawer.Background>
                        <h:Drawer.Effect>
                            <DropShadowEffect/>
                        </h:Drawer.Effect>
                        <h:Cattach.VisibleActions>
                            <h:ActionCollection>
                                <h:TranslateAction StartPoint="-300,0" EndPoint="-200,0"/>
                            </h:ActionCollection>
                        </h:Cattach.VisibleActions>

                        <DockPanel Margin="-10" Width="300">
                            <h:Row DockPanel.Dock="Top">
                                <TextBox Margin="5,0" Style="{DynamicResource S.TextBox.Single.Clear}"  h:Cattach.Watermark="请输入筛选条件" h:Cattach.FIcon="&#xe787;" Grid.ColumnSpan="22"/>
                            </h:Row>

                            <!--<TabControl ItemContainerStyle="{StaticResource S.TabItem.Line.Default}" BorderThickness="0" Background="Transparent" Padding="0">
                                <TabItem Header="装备列表" Width="145" TextBlock.Foreground="{DynamicResource S.Brush.TextForeground.White}" HorizontalContentAlignment="Center">
                                    <DockPanel>
                                        <ListBox ItemTemplate="{StaticResource C.TestViewModel.Item.Checked}" ItemsSource="{Binding Files}" SelectedItem="{Binding SelectedFile}"  
                                                 Background="Transparent">
                                            -->
                            <!--<h:TestViewModel Value="WPF-ControlBase-Demo.sln"/>
                                        <h:TestViewModel Value="WPF-ControlBase-Demo.sln"/>
                                        <h:TestViewModel Value="WPF-ControlBase-Demo.sln"/>-->
                            <!--
                                        </ListBox>
                                    </DockPanel>
                                </TabItem>

                                <TabItem Header="历史记录"  Width="145" HorizontalContentAlignment="Center">
                                    <ListBox ItemTemplate="{StaticResource C.TestViewModel.Item}"  ItemsSource="{Binding Historys}" SelectedItem="{Binding SelectedHistory}"  Background="{DynamicResource S.Brush.TextBackground.Default}">
                                        -->
                            <!--<h:TestViewModel Value="WPF-ControlBase-Demo.sln"/>
                                        <h:TestViewModel Value="WPF-ControlBase-Demo.sln"/>
                                        <h:TestViewModel Value="WPF-ControlBase-Demo.sln"/>-->
                            <!--
                                    </ListBox>
                                </TabItem>
                            </TabControl>-->

                            <DockPanel Grid.Row="1" DockPanel.Dock="Bottom">
                                <!--<h:Row DockPanel.Dock="Top">
                                    <h:FTextBox Text="{Binding Title}" h:Cattach.Watermark="请输入标题" Grid.ColumnSpan="12" Margin="{DynamicResource S.Thickness.Margin.10.0}"/>
                                </h:Row>-->

                                <!--<h:Row DockPanel.Dock="Bottom" Height="45" Margin="10,0">
                                    <TextBlock Text="Committed a minute ago" Style="{StaticResource S.TextBlock.Default}" Foreground="{DynamicResource S.Brush.TextForeground.White}" Grid.ColumnSpan="10" HorizontalAlignment="Left"/>
                                    <h:FButton Style="{StaticResource S.FButton.Style.Transparent}" BorderBrush="{DynamicResource S.Brush.Dark.3}" 
                                   BorderThickness="1" Width="50" Content="Undo" Grid.Column="10" Grid.ColumnSpan="2"/>
                                </h:Row>-->

                                <h:Row DockPanel.Dock="Bottom" Height="45" Style="{StaticResource S.Row.Column.4}" Margin="10,0">

                                    <CheckBox Content="全选" Foreground="{DynamicResource S.Brush.TextForeground.White}"/>

                                    <h:FButton DockPanel.Dock="Bottom" Grid.Column="1" Grid.Row="2" Content="添加" Command="{Binding RelayCommand}" CommandParameter="新建任务" Width="Auto"/>

                                    <h:FButton DockPanel.Dock="Bottom" Grid.Column="2" Grid.Row="2" Content="删除" Width="Auto"/>
                                    
                                    <h:FButton DockPanel.Dock="Bottom" Grid.Column="3"  Grid.Row="2" Content="生成" Width="Auto" Command="{Binding RelayCommand}" CommandParameter="Button.Click.Commit">
                                        <!--<h:FButton.Triggers>
                                        <EventTrigger RoutedEvent="Button.Click">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation From="0" To="100" Duration="00:00:05" Storyboard.Target="{Binding ElementName=pg}" Storyboard.TargetProperty="Value"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </h:FButton.Triggers>-->
                                    </h:FButton>
                                </h:Row>

                                <!--<h:FTextBox Height="Auto" h:Cattach.Watermark="请输入说明"  Margin="{DynamicResource S.Thickness.Margin.10.0}"/>-->
                            </DockPanel>

                            <ListBox Grid.Row="1" ItemTemplate="{StaticResource C.TestViewModel.Item.Many}"  Style="{DynamicResource S.ListBox.Default}" ItemsSource="{Binding Equipments}" SelectedItem="{Binding SelectedEquipment}"  
                                                 Background="Transparent">
                                <!--<h:TestViewModel Value="WPF-ControlBase-Demo.sln"/>
                                        <h:TestViewModel Value="WPF-ControlBase-Demo.sln"/>
                                        <h:TestViewModel Value="WPF-ControlBase-Demo.sln"/>-->
                                <ListBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="添加" IsEnabled="True" CommandParameter="新建任务"/>
                                        <MenuItem Header="删除" IsEnabled="True"/>
                                    </ContextMenu>
                                </ListBox.ContextMenu>
                                <h:Interaction.Triggers>
                                    <h:EventTrigger EventName="SelectionChanged">
                                        <!--<h:ChangePropertyAction  TargetObject="{Binding ElementName=fd_property}" PropertyName="IsExpanded" Value="True"/>-->
                                        <h:InvokeCommandAction Command="{Binding RelayCommand}" CommandParameter="SelectionChanged.ShowProperty"/>
                                    </h:EventTrigger>
                                </h:Interaction.Triggers>
                            </ListBox>

                        </DockPanel>
                    </h:Drawer>

                    <!--左侧-->
                    <h:Drawer Header="位置列表" h:Cattach.FIcon="位" ToolTip="位置列表"  Style="{StaticResource S.Drawer.Left.Default}" h:Cattach.FIconMargin="0,100,0,0"  Padding="0" IsExpanded="False"  Background="{DynamicResource S.Brush.Accent.MouseOver}">
                        <h:Cattach.VisibleActions>
                            <h:ActionCollection>
                                <h:TranslateAction StartPoint="-300,0" EndPoint="-200,0"/>
                            </h:ActionCollection>
                        </h:Cattach.VisibleActions>

                        <DockPanel Margin="-10" Width="300">
                            <h:Row DockPanel.Dock="Top">
                                <TextBox Margin="5,0" Style="{DynamicResource S.TextBox.Single.Clear}"  h:Cattach.Watermark="请输入筛选条件" h:Cattach.FIcon="&#xe787;" Grid.ColumnSpan="22"/>
                            </h:Row>

                            <DockPanel Grid.Row="1" DockPanel.Dock="Bottom">
                                <h:Row DockPanel.Dock="Bottom" Height="45" Style="{StaticResource S.Row.Column.3}" Margin="10,0">

                                    <!--<CheckBox Content="全选" Foreground="{DynamicResource S.Brush.TextForeground.White}"/>-->

                                    <h:FButton DockPanel.Dock="Bottom" Grid.Column="0" Grid.Row="2" Content="添加" Command="{Binding RelayCommand}" CommandParameter="新建任务" Width="Auto"/>

                                    <h:FButton DockPanel.Dock="Bottom" Grid.Column="1" Grid.Row="2" Content="删除" Width="Auto"/>

                                    <h:FButton DockPanel.Dock="Bottom" Grid.Column="3"  Grid.Row="2" Content="生成" Width="Auto" Command="{Binding RelayCommand}" CommandParameter="Button.Click.Commit">
                                        <!--<h:FButton.Triggers>
                                        <EventTrigger RoutedEvent="Button.Click">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation From="0" To="100" Duration="00:00:05" Storyboard.Target="{Binding ElementName=pg}" Storyboard.TargetProperty="Value"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </h:FButton.Triggers>-->
                                    </h:FButton>
                                </h:Row>

                                <!--<h:FTextBox Height="Auto" h:Cattach.Watermark="请输入说明"  Margin="{DynamicResource S.Thickness.Margin.10.0}"/>-->
                            </DockPanel>

                            <ListBox Grid.Row="1" Style="{DynamicResource S.ListBox.Single}" 
                                     ItemsSource="{Binding Servers}" SelectedItem="{Binding SelectedServer}"  
                                      Background="Transparent">

                                <ListBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="添加位置" IsEnabled="True" CommandParameter="新建任务"/>
                                        <MenuItem Header="添加装备" IsEnabled="True" CommandParameter="新建任务"/> 
                                        <MenuItem Header="删除位置" IsEnabled="True"/>
                                        <Separator Style="{StaticResource S.Separator.Default}"/>
                                        <MenuItem Header="信号检测" IsEnabled="True"/>
                                        <MenuItem Header="功率调整" IsEnabled="True"/>
                                        <MenuItem Header="关闭输出" IsEnabled="True"/>
                                        <MenuItem Header="显示/隐藏" IsEnabled="True"/>
                                    </ContextMenu>
                                </ListBox.ContextMenu>
                                
                                <ListBox.ItemTemplate>
                                    <DataTemplate DataType="{x:Type local:ServerViewModel}">
                                        <Expander Margin="0" Background="Transparent" Padding="0" Style="{StaticResource S.Expander.Accent}"
                                                  h:Cattach.SelectBackground="Transparent">
                                            <Expander.Header>
                                                <Grid x:Name="grid" HorizontalAlignment="Stretch" Background="Transparent">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition/>
                                                        <ColumnDefinition/>
                                                        <ColumnDefinition Width="Auto"/>
                                                    </Grid.ColumnDefinitions>

                                                    <TextBlock Text="&#xe73b;" FontSize="15" Style="{DynamicResource S.TextBlock.FIcon}" Foreground="{DynamicResource S.Brush.TextForeground.White}" Grid.Column="0" Grid.Row="1" VerticalAlignment="Center" ToolTip="{Binding Value1}"/>

                                                    <TextBlock Text="{Binding Value}" Margin="5,0" Foreground="{DynamicResource S.Brush.TextForeground.White}" Grid.Column="1" Grid.Row="1" VerticalAlignment="Center" ToolTip="{Binding Value1}"/>

                                                    <h:Ping IP="{Binding Value1}" RunningForegroundBrush="{DynamicResource S.Brush.TextForeground.White}"  Style="{DynamicResource S.Ping.Single}" Grid.Column="2"/>

                                                    <TextBlock Margin="10,0" Foreground="{DynamicResource S.Brush.TextForeground.White}" Grid.Column="3" Grid.Row="1" VerticalAlignment="Center">
                                                <Run Text="数量"/>
                                                <Run Text="{Binding Children.Count,Mode=OneWay}"/>
                                                    </TextBlock>

                                                    <h:FButton x:Name="btn_close" Grid.Column="4" Style="{DynamicResource S.FButton.Close}" 
                                                   FIconSize="12" MouseOverForeground="{DynamicResource S.Brush.Red.Notice}" Visibility="Hidden"
                                                   Foreground="{DynamicResource S.Brush.TextForeground.White}"/>


                                                    <h:Interaction.Triggers>
                                                        <h:EventTrigger EventName="MouseDown">
                                                            <h:InvokeCommandAction Command="{Binding Source={StaticResource S.DataSource.Locator},Path=ShellViewModel.RelayCommand}" CommandParameter="SelectionChanged.Server.ShowProperty"/>
                                                        </h:EventTrigger>
                                                    </h:Interaction.Triggers>

                                                </Grid>
                                            </Expander.Header>

                                            <ListBox ItemsSource="{Binding Children}" Background="Transparent">

                                                <ListBox.ContextMenu>
                                                    <ContextMenu>
                                                        <MenuItem Header="添加" IsEnabled="True" CommandParameter="新建任务"/>
                                                        <MenuItem Header="删除" IsEnabled="True"/>
                                                    </ContextMenu>
                                                </ListBox.ContextMenu>
                                                
                                                <ItemsControl.ItemTemplate>
                                                    <DataTemplate DataType="{x:Type h:TestViewModel}">
                                                        <Grid x:Name="grid" Margin="10,0,0,0" HorizontalAlignment="Stretch" TextBlock.Foreground="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem},Path=Foreground}">
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition/>
                                                            </Grid.RowDefinitions>

                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="Auto"/>
                                                                <ColumnDefinition/>
                                                                <ColumnDefinition/>
                                                                <ColumnDefinition/>
                                                                <ColumnDefinition Width="Auto"/>
                                                            </Grid.ColumnDefinitions>

                                                            <!--<TextBlock Style="{StaticResource S.TextBlock.FIcon}" Margin="10,0" Grid.RowSpan="2" Text="&#xe90c;" FontSize="15" VerticalAlignment="Center" HorizontalAlignment="Center"/>-->

                                                            <!--<h:FCheckBox Foreground="{DynamicResource S.Brush.TextForeground.White}"/>-->

                                                            <TextBlock Text="&#xe861;" Margin="10,0" FontSize="12" Style="{DynamicResource S.TextBlock.FIcon}" Foreground="{DynamicResource S.Brush.TextForeground.White}" Grid.Column="0" Grid.Row="1" VerticalAlignment="Center" ToolTip="{Binding Value1}"/>

                                                            <TextBlock Text="{Binding Value}" Foreground="{DynamicResource S.Brush.TextForeground.White}" Grid.Column="1" Grid.Row="1" VerticalAlignment="Center" ToolTip="{Binding Value1}"/>

                                                            <TextBlock Text="{Binding Value1}"  Margin="5,0" Grid.Column="2" Foreground="{DynamicResource S.Brush.TextForeground.White}" Grid.Row="1" VerticalAlignment="Center" ToolTip="{Binding Value1}"/>

                                                            <Border x:Name="tb_v2" MinWidth="60" Height="{DynamicResource S.Window.Item.Height}"  HorizontalAlignment="Center" Grid.Column="3" CornerRadius="{DynamicResource S.Window.Item.CornerRadius}">
                                                                <TextBlock Text="{Binding Value2}"   Margin="2,0"  Foreground="{DynamicResource S.Brush.TextForeground.White}" Grid.Row="1" VerticalAlignment="Center" ToolTip="{Binding Value1}"/>
                                                            </Border>

                                                            <h:FButton x:Name="btn_close" Grid.Column="4" Style="{DynamicResource S.FButton.Close}" 
                                                   FIconSize="12" MouseOverForeground="{DynamicResource S.Brush.Red.Notice}" Visibility="Hidden"
                                                   Foreground="{DynamicResource S.Brush.TextForeground.White}"/>
                                                        </Grid>

                                                    </DataTemplate>
                                                </ItemsControl.ItemTemplate>

                                                <!--<h:Interaction.Triggers>
                                                    <h:EventTrigger EventName="SelectionChanged">
                                                        <h:ChangePropertyAction TargetObject="{Binding ElementName=fd_property}" PropertyName="IsExpanded" Value="True"/>
                                                    </h:EventTrigger>
                                                </h:Interaction.Triggers>-->

                                                <h:Interaction.Triggers>
                                                    <h:EventTrigger EventName="SelectionChanged">
                                                        <!--<h:ChangePropertyAction  TargetObject="{Binding ElementName=fd_property}" PropertyName="IsExpanded" Value="True"/>-->
                                                        <h:InvokeCommandAction Command="{Binding Source={StaticResource S.DataSource.Locator},Path=ShellViewModel.RelayCommand}" CommandParameter="SelectionChanged.ShowProperty"/>
                                                    </h:EventTrigger>
                                                </h:Interaction.Triggers>
                                            </ListBox>

                                            <h:Interaction.Behaviors>
                                                <h:SelectListBoxItemElementBehavior/>
                                            </h:Interaction.Behaviors>

                                        </Expander>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>

                            <!--<TreeView ItemsSource="{Binding Servers}" Foreground="{DynamicResource S.Brush.TextForeground.White}" Style="{StaticResource S.TreeView.Handy.Accent}" Background="Transparent" HorizontalAlignment="Stretch">
                                <TreeView.Resources>
                                    <HierarchicalDataTemplate ItemsSource="{Binding Children}" DataType="{x:Type local:ServerViewModel}">
                                        <Grid x:Name="grid" Width="250" HorizontalAlignment="Stretch" TextBlock.Foreground="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem},Path=Foreground}">
                                            <Grid.RowDefinitions>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>

                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition/>
                                                <ColumnDefinition/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>

                                            -->
                            <!--<h:FCheckBox Margin="2,0" Foreground="{DynamicResource S.Brush.TextForeground.White}"/>-->
                            <!--

                                            <TextBlock Text="&#xe73b;" FontSize="15" Style="{DynamicResource S.TextBlock.FIcon}" Foreground="{DynamicResource S.Brush.TextForeground.White}" Grid.Column="0" Grid.Row="1" VerticalAlignment="Center" ToolTip="{Binding Value1}"/>

                                            <TextBlock Text="{Binding Value}" Margin="10,0" Foreground="{DynamicResource S.Brush.TextForeground.White}" Grid.Column="1" Grid.Row="1" VerticalAlignment="Center" ToolTip="{Binding Value1}"/>

                                            <h:PingState IP="{Binding Value1}" RunningForegroundBrush="{DynamicResource S.Brush.TextForeground.White}"  Style="{DynamicResource S.Ping.Single}" Grid.Column="2"/>

                                            <TextBlock Margin="10,0" Foreground="{DynamicResource S.Brush.TextForeground.White}" Grid.Column="3" Grid.Row="1" VerticalAlignment="Center">
                                                <Run Text="数量"/>
                                                <Run Text="{Binding Children.Count,Mode=OneWay}"/>
                                            </TextBlock>

                                            <h:FButton x:Name="btn_close" Grid.Column="4" Style="{DynamicResource S.FButton.Close}" 
                                                   FIconSize="12" MouseOverForeground="{DynamicResource S.Brush.Red.Notice}" Visibility="Hidden"
                                                   Foreground="{DynamicResource S.Brush.TextForeground.White}"/>

                                        </Grid>
                                    </HierarchicalDataTemplate>

                                    <HierarchicalDataTemplate ItemsSource="{Binding Children}" DataType="{x:Type h:TestViewModel}">
                                        <Grid x:Name="grid" Width="260" HorizontalAlignment="Stretch" TextBlock.Foreground="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem},Path=Foreground}">
                                            <Grid.RowDefinitions>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>

                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition/>
                                                <ColumnDefinition/>
                                                <ColumnDefinition/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>

                                            -->
                            <!--<TextBlock Style="{StaticResource S.TextBlock.FIcon}" Margin="10,0" Grid.RowSpan="2" Text="&#xe90c;" FontSize="15" VerticalAlignment="Center" HorizontalAlignment="Center"/>-->

                            <!--<h:FCheckBox Foreground="{DynamicResource S.Brush.TextForeground.White}"/>-->
                            <!--

                                            <TextBlock Text="&#xe861;" Margin="10,0" FontSize="12" Style="{DynamicResource S.TextBlock.FIcon}" Foreground="{DynamicResource S.Brush.TextForeground.White}" Grid.Column="0" Grid.Row="1" VerticalAlignment="Center" ToolTip="{Binding Value1}"/>

                                            <TextBlock Text="{Binding Value}" Foreground="{DynamicResource S.Brush.TextForeground.White}" Grid.Column="1" Grid.Row="1" VerticalAlignment="Center" ToolTip="{Binding Value1}"/>

                                            <TextBlock Text="{Binding Value1}"  Margin="5,0" Grid.Column="2" Foreground="{DynamicResource S.Brush.TextForeground.White}" Grid.Row="1" VerticalAlignment="Center" ToolTip="{Binding Value1}"/>

                                            <Border x:Name="tb_v2" MinWidth="60" Height="{DynamicResource S.Window.Item.Height}"  HorizontalAlignment="Center" Grid.Column="3" CornerRadius="{DynamicResource S.Window.Item.CornerRadius}">
                                                <TextBlock Text="{Binding Value2}"   Margin="2,0"  Foreground="{DynamicResource S.Brush.TextForeground.White}" Grid.Row="1" VerticalAlignment="Center" ToolTip="{Binding Value1}"/>
                                            </Border>

                                            <h:FButton x:Name="btn_close" Grid.Column="4" Style="{DynamicResource S.FButton.Close}" 
                                                   FIconSize="12" MouseOverForeground="{DynamicResource S.Brush.Red.Notice}" Visibility="Hidden"
                                                   Foreground="{DynamicResource S.Brush.TextForeground.White}"/>
                                        </Grid>

                                    </HierarchicalDataTemplate>
                                </TreeView.Resources>
                            </TreeView>-->
                        </DockPanel>
                    </h:Drawer>

                    <!--右侧-->
                    <h:Drawer Header="装备属性" Grid.ColumnSpan="22" Margin="0,50,0,0" h:Cattach.FIcon="属" ToolTip="属性"  Style="{StaticResource S.Drawer.Right.Default}"  Padding="0" IsExpanded="{Binding IsExpanedProperty,Mode=TwoWay}"  Background="{DynamicResource S.Brush.Accent.MouseOver}">
                        <h:Cattach.VisibleActions>
                            <h:ActionCollection>
                                <h:TranslateAction StartPoint="300,0" EndPoint="200,0"/>
                            </h:ActionCollection>
                        </h:Cattach.VisibleActions>

                        <Grid Margin="0" Width="300">
                            <ContentControl Content="{Binding SelectedEquipment,Mode=TwoWay}">
                                <ContentControl.ContentTemplate>
                                    <DataTemplate DataType="{x:Type h:TestViewModel}">
                                        <StackPanel VerticalAlignment="Top" TextBlock.Foreground="{DynamicResource S.Brush.TextForeground.White}">


                                            <h:Row Style="{StaticResource S.Row.Column.1}">
                                                <TextBox DockPanel.Dock="Top" h:Cattach.Label="装备名称：" Text="{Binding Value}" Style="{StaticResource S.TextBox.LabelClear}" 
                                                     h:Cattach.TitleForeground="{DynamicResource S.Brush.TextForeground.White}"/>
                                            </h:Row>

                                            <h:Row Style="{StaticResource S.Row.Column.1}">
                                                <TextBox DockPanel.Dock="Top" h:Cattach.Label="装备类型：" Text="{Binding Value1}" Style="{StaticResource S.TextBox.LabelClear}" 
                                                     h:Cattach.TitleForeground="{DynamicResource S.Brush.TextForeground.White}"/>
                                            </h:Row>

                                            <h:Row Style="{StaticResource S.Row.Column.1}">
                                                <TextBox DockPanel.Dock="Top" h:Cattach.Label="信号类型：" Text="{Binding Value2}" Style="{StaticResource S.TextBox.LabelClear}" 
                                                     h:Cattach.TitleForeground="{DynamicResource S.Brush.TextForeground.White}"/>
                                            </h:Row>
                                            

                                            <h:Row Style="{StaticResource S.Row.Column.1}">
                                                <TextBox DockPanel.Dock="Top" h:Cattach.Label="中心频率：" Text="{Binding Double1}" Style="{StaticResource S.TextBox.LabelClear}" 
                                                     h:Cattach.TitleForeground="{DynamicResource S.Brush.TextForeground.White}"/>
                                            </h:Row>

                                            <h:Row Style="{StaticResource S.Row.Column.1}">
                                                <TextBox DockPanel.Dock="Top" h:Cattach.Label="输出频率：" Text="{Binding Double2}" Style="{StaticResource S.TextBox.LabelClear}" 
                                                     h:Cattach.TitleForeground="{DynamicResource S.Brush.TextForeground.White}"/>
                                            </h:Row>

                                            <h:Row Style="{StaticResource S.Row.Column.1}">
                                                
                                                <TextBox DockPanel.Dock="Top" h:Cattach.Label="信号码速：" Text="{Binding Double3}" Style="{StaticResource S.TextBox.LabelClear}" 
                                                     h:Cattach.TitleForeground="{DynamicResource S.Brush.TextForeground.White}"/>
                                            </h:Row>
                                            <h:Row Style="{StaticResource S.Row.Column.1}">
                                                <TextBox DockPanel.Dock="Top" h:Cattach.Label="调制频偏：" Text="{Binding Double10}" Style="{StaticResource S.TextBox.LabelClear}" 
                                                     h:Cattach.TitleForeground="{DynamicResource S.Brush.TextForeground.White}"/>
                                            </h:Row>
                                            <h:Row Style="{StaticResource S.Row.Column.1}">
                                                <TextBox DockPanel.Dock="Top" h:Cattach.Label="调制深度：" Text="{Binding Double12}" Style="{StaticResource S.TextBox.LabelClear}" 
                                                     h:Cattach.TitleForeground="{DynamicResource S.Brush.TextForeground.White}"/>
                                            </h:Row>
                                        </StackPanel>
                                    </DataTemplate>
                                </ContentControl.ContentTemplate>
                            </ContentControl>
                        </Grid>

                        <!--<Grid Margin="0" Width="300">
                            <Grid.Resources>
                                <DataTemplate DataType="{x:Type local:CWViewModel}">
                                    <Grid>
                                        <TextBlock Text="{Binding DisplayName}"/>
                                    </Grid>
                                </DataTemplate>

                                <DataTemplate DataType="{x:Type local:AMViewModel}">
                                    <Grid>
                                        <TextBlock Text="{Binding DisplayName}"/>
                                    </Grid>
                                </DataTemplate>

                                <DataTemplate DataType="{x:Type local:ASKViewModel}">
                                    <Grid>
                                        <TextBlock Text="{Binding DisplayName}"/>
                                    </Grid>
                                </DataTemplate>
                            </Grid.Resources>

                            <ContentControl Content="{Binding Student}"/>
                        </Grid>-->
                    </h:Drawer>

                    <!--右侧-->
                    <h:Drawer Header="位置属性" Grid.ColumnSpan="22" Margin="0,50,0,0" h:Cattach.FIconMargin="0,100,0,0" h:Cattach.FIcon="属" ToolTip="属性"  Style="{StaticResource S.Drawer.Right.Default}"  Padding="0" IsExpanded="{Binding IsExpandedServerProperty,Mode=TwoWay}"  Background="{DynamicResource S.Brush.Accent.MouseOver}">
                        <h:Cattach.VisibleActions>
                            <h:ActionCollection>
                                <h:TranslateAction StartPoint="300,0" EndPoint="200,0"/>
                            </h:ActionCollection>
                        </h:Cattach.VisibleActions>

                        <Grid Margin="0" Width="300">
                            <ContentControl Content="{Binding SelectedServer,Mode=TwoWay}">
                                <ContentControl.ContentTemplate>
                                    <DataTemplate DataType="{x:Type local:ServerViewModel}">
                                        <StackPanel VerticalAlignment="Top" TextBlock.Foreground="{DynamicResource S.Brush.TextForeground.White}"> 
                                        

                                            <h:Row Style="{StaticResource S.Row.Column.1}">
                                                <TextBox DockPanel.Dock="Top" h:Cattach.Label="名称：" Text="{Binding Value}" Style="{StaticResource S.TextBox.LabelClear}" 
                                                     h:Cattach.TitleForeground="{DynamicResource S.Brush.TextForeground.White}"/>
                                            </h:Row>

                                            <h:Row Style="{StaticResource S.Row.Column.1}" Margin="{StaticResource S.Thickness.Margin.10.0}">
                                                <DockPanel>
                                                    <TextBlock Text="状态："/>

                                                    <h:Ping IP="{Binding Value1}" Margin="10,0" RunningForegroundBrush="{DynamicResource S.Brush.TextForeground.White}"/>
                                                </DockPanel>
                                            </h:Row>

                                            <h:Row Style="{StaticResource S.Row.Column.1}" Margin="{StaticResource S.Thickness.Margin.10.0}">
                                                <TextBlock>
                                                <Run Text="LatLngX："/>
                                                <Run Text="34.2393"/>
                                                </TextBlock>
                                            </h:Row>

                                            <h:Row Style="{StaticResource S.Row.Column.1}" Margin="{StaticResource S.Thickness.Margin.10.0}">
                                                <TextBlock>
                                                <Run Text="LatLngY："/>
                                                <Run Text="108.085"/>
                                                </TextBlock>
                                            </h:Row>

                                            <h:Row Style="{StaticResource S.Row.Column.1}" Margin="{StaticResource S.Thickness.Margin.10.0}">
                                                <TextBlock>
                                                <Run Text="装备数量："/>
                                                <Run Text="{Binding Children.Count,Mode=OneWay}"/>
                                                </TextBlock>
                                            </h:Row>
                                        </StackPanel>
                                    </DataTemplate>
                                </ContentControl.ContentTemplate>
                            </ContentControl>
                        </Grid>
                    </h:Drawer>


                    <h:ToggleExpander Style="{StaticResource S.ToggleExpander.Single}" Grid.ColumnSpan="4" IsExpanded="False" Foreground="{DynamicResource S.Brush.TextForeground.White}" Background="{DynamicResource S.Brush.Accent.MouseOver}" DockPanel.Dock="Right" HorizontalAlignment="Right" VerticalAlignment="Top">
                        <h:ToggleExpander.Resources>
                            <Style x:Key="C.FButton.Default" TargetType="h:FButton" BasedOn="{StaticResource S.FButton.Style.Transparent}">
                                <Setter Property="Height" Value="Auto"/>
                                <Setter Property="FIcon" Value="&#xe67f;"/>
                                <Setter Property="FIconSize" Value="30"/>
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="HorizontalAlignment" Value="Center"/>
                                <Setter Property="Foreground" Value="{DynamicResource S.Brush.TextForeground.White}"/>
                                <!--<Setter Property="RenderTransform" Value="{StaticResource S.TransformGroup.Default}"/>-->
                            </Style>
                        </h:ToggleExpander.Resources>

                        <h:Interaction.Behaviors>
                            <h:MouseDragElementBehavior ConstrainToParentBounds="True"/>
                        </h:Interaction.Behaviors>
                        <h:ToggleExpander.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal"/>
                            </ItemsPanelTemplate>
                        </h:ToggleExpander.ItemsPanel>
                        <!--<h:FButton FIcon="&#xe909;" Style="{StaticResource C.FButton.Default}"/>
                        <h:FButton FIcon="&#xe90b;" Style="{StaticResource C.FButton.Default}"/>
                        <h:FButton FIcon="&#xe90c;" Style="{StaticResource C.FButton.Default}"/>
                        <h:FButton FIcon="&#xe91a;" Style="{StaticResource C.FButton.Default}"/>
                        <h:FButton FIcon="&#xe91b;" Style="{StaticResource C.FButton.Default}"/>
                        <h:FButton FIcon="&#xe927;" Style="{StaticResource C.FButton.Default}"/>
                        <h:FButton FIcon="&#xe929;" Style="{StaticResource C.FButton.Default}"/>
                        <h:FButton FIcon="&#xe92a;" Style="{StaticResource C.FButton.Default}"/>
                        <h:FButton FIcon="&#xe93a;" Style="{StaticResource C.FButton.Default}"/>-->

                        <h:FButton FIcon="&#xe909;" Style="{StaticResource C.FButton.Default}"/>
                        <h:FButton FIcon="&#xe90b;" Style="{StaticResource C.FButton.Default}"/>
                        <h:FButton FIcon="&#xe90c;" Style="{StaticResource C.FButton.Default}"/>
                        <h:FButton FIcon="&#xe91a;" Style="{StaticResource C.FButton.Default}"/>
                        <h:FButton FIcon="&#xe91b;" Style="{StaticResource C.FButton.Default}"/>
                        <h:FButton FIcon="&#xe927;" Style="{StaticResource C.FButton.Default}"/>
                        <h:FButton FIcon="&#xe929;" Style="{StaticResource C.FButton.Default}"/>
                        <h:FButton FIcon="&#xe92a;" Style="{StaticResource C.FButton.Default}"/>
                        <h:FButton FIcon="&#xe93a;" Style="{StaticResource C.FButton.Default}"/>


                    </h:ToggleExpander>

                </h:Row>
            </Grid>
        </h:GitTopContainer.CenterContent>

        <h:GitTopItem HeaderContent="{Binding CurrentScene}">
            <h:GitTopItem.HeaderTemplate>
                <DataTemplate DataType="{x:Type h:TestViewModel}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <TextBlock Style="{StaticResource S.TextBlock.FIcon}" Margin="10,0" Grid.RowSpan="2" Text="&#xe6ad;" 
                                   VerticalAlignment="Center" HorizontalAlignment="Center"/>

                        <TextBlock Text="当前任务" Grid.Column="1" Grid.Row="0" VerticalAlignment="Bottom"/>

                        <TextBlock Text="{Binding Value}" Grid.Column="1" Grid.Row="1" VerticalAlignment="Center" FontWeight="Black"/>

                    </Grid>
                </DataTemplate>
            </h:GitTopItem.HeaderTemplate>
            <StackPanel >
                <h:FTextBox Margin="10" h:Cattach.Watermark="请输入筛选条件" h:Cattach.FIcon="&#xe787;"/>
                <GroupBox Style="{StaticResource S.GroupBox.UnderLine}" Header="其他任务" h:Cattach.FIcon="" Padding="0" Margin="0,2">
                    <ListBox ItemsSource="{Binding Scenes}" SelectedItem="{Binding SelectedScene}" ItemTemplate="{StaticResource C.TestViewModel.Item}">
                        <h:Interaction.Triggers>
                            <h:EventTrigger EventName="MouseDoubleClick">
                                <h:InvokeCommandAction Command="{Binding RelayCommand}" CommandParameter="ListBox.MouseDoubleClick.SetSelectedScene"/>
                                <h:InvokeCommandAction Command="{x:Static h:GitTopContainer.CoverHideCommand}"/>
                            </h:EventTrigger>
                        </h:Interaction.Triggers>
                    </ListBox>
                </GroupBox>
            </StackPanel>
        </h:GitTopItem>

        <h:GitTopItem HeaderContent="{Binding CurrentTempalte}">
            <h:GitTopItem.HeaderTemplate>
                <DataTemplate DataType="{x:Type h:TestViewModel}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <TextBlock Style="{StaticResource S.TextBlock.FIcon}" Margin="10,0" Grid.RowSpan="2" Text="&#xe90b;" 
                                   VerticalAlignment="Center" HorizontalAlignment="Center"/>

                        <TextBlock Text="当前模板" Grid.Column="1" Grid.Row="0" VerticalAlignment="Bottom"/>

                        <TextBlock Text="{Binding Value}" Grid.Column="1" Grid.Row="1" VerticalAlignment="Center" FontWeight="Black"/>

                    </Grid>
                </DataTemplate>
            </h:GitTopItem.HeaderTemplate>
            <StackPanel>
                <h:FTextBox Margin="10" h:Cattach.Watermark="filter" h:Cattach.FIcon="&#xe787;"/>
                <GroupBox Style="{StaticResource S.GroupBox.UnderLine}" Header="Others" h:Cattach.FIcon="" Padding="0" Margin="0,2">
                    <ListBox ItemsSource="{Binding Templates}" SelectedItem="{Binding SelectedTemplate}" ItemTemplate="{StaticResource C.TestViewModel.Item}">
                        <h:Interaction.Triggers>
                            <h:EventTrigger EventName="MouseDoubleClick">
                                <h:InvokeCommandAction Command="{Binding RelayCommand}" CommandParameter="ListBox.MouseDoubleClick.SetSelectedTemplate"/>
                                <h:InvokeCommandAction Command="{x:Static h:GitTopContainer.CoverHideCommand}"/>
                            </h:EventTrigger>
                        </h:Interaction.Triggers>
                    </ListBox>
                </GroupBox>
            </StackPanel>
        </h:GitTopItem>

        <Grid  Opacity="0.5">
            <ProgressBar x:Name="pg"  VerticalAlignment="Top" Height="60" Style="{StaticResource S.ProgressBar.Handy.Default}" Background="{DynamicResource S.Brush.White.Opactiy.3}"  Value="{Binding Percent}">
                <!--<ProgressBar.Triggers>
                    <EventTrigger RoutedEvent="Loaded">
                        <BeginStoryboard>
                            <Storyboard RepeatBehavior="Forever">
                                <DoubleAnimation From="0" To="100" Duration="00:00:10" Storyboard.TargetProperty="Value"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </ProgressBar.Triggers>-->
            </ProgressBar>
        </Grid>

        <Grid VerticalAlignment="Top" Height="60">
            <Button x:Name="btn_top_min"  h:Cattach.FIcon="&#xe9c0;" Style="{DynamicResource S.Button.Transparent}"
                    Foreground="{DynamicResource S.Brush.TextForeground.White}" Background="Transparent" HorizontalAlignment="Right"
                    VerticalAlignment="Bottom">
                <h:Interaction.Triggers>
                    <h:EventTrigger EventName="Click">
                        <h:ChangePropertyAction PropertyName="HeaderHeight" Value="0" TargetObject="{Binding RelativeSource={RelativeSource AncestorType=h:GitTopContainer}}"/>
                        <h:ChangePropertyAction PropertyName="Visibility" Value="Collapsed"/>
                        <h:ChangePropertyAction PropertyName="Visibility" Value="Visible" TargetName="btn_top_max"/>
                        <h:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" TargetName="pg"/>

                    </h:EventTrigger>
                </h:Interaction.Triggers>
            </Button>

            <Button x:Name="btn_top_max"  h:Cattach.FIcon="&#xe7f1;" Visibility="Collapsed" h:Cattach.FIconSize="12" Style="{DynamicResource S.Button.Transparent}" Margin="0,-40,150,0"
                    Foreground="{DynamicResource S.Brush.TextForeground.White}" Background="Transparent" HorizontalAlignment="Right" WindowChrome.IsHitTestVisibleInChrome="True"
                    VerticalAlignment="Top">
                <h:Interaction.Triggers>
                    <h:EventTrigger EventName="Click">
                        <h:ChangePropertyAction PropertyName="HeaderHeight" Value="60" TargetObject="{Binding RelativeSource={RelativeSource AncestorType=h:GitTopContainer}}"/>
                        <h:ChangePropertyAction PropertyName="Visibility" Value="Collapsed"/>
                        <h:ChangePropertyAction PropertyName="Visibility" Value="Visible" TargetName="btn_top_min"/>
                        <h:ChangePropertyAction PropertyName="Visibility" Value="Visible" TargetName="pg"/>
                    </h:EventTrigger>
                </h:Interaction.Triggers>
            </Button>
        </Grid>
    </h:GitTopContainer>


</h:MenuWindowBase>
