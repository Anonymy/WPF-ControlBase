<h:MenuWindowBase x:Class="HeBianGu.Application.VsWindow.ShellWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:HeBianGu.Application.VsWindow"
        xmlns:h="QQ:908293466" 
        xmlns:cl="clr-namespace:System.Collections;assembly=mscorlib" 
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        DataContext="{Binding Source={StaticResource S.DataSource.Locator},Path=ShellViewModel}" 
        Style="{DynamicResource S.Window.Menu.Default}" FIcon="&#xeb02;"
        NotifyIconSource="/HeBianGu.General.WpfControlLib;component/Resources/iBook.ico"
        mc:Ignorable="d" Title="ShellWindow" Height="800" Width="1300" CaptionHeight="50">

    <Grid>
        <DockPanel>
            <DockPanel DockPanel.Dock="Top" LastChildFill="False" Background="{DynamicResource S.Brush.Dark.2}" Height="{DynamicResource S.Window.Row.Height}">
                <Button Content="开始" Width="80" Margin="2,0,0,0" IsEnabled="{Binding IsRunEnbel}" Command="{Binding RelayCommand}" CommandParameter="Button.Click.Commit"/>
                <Button Content="停止" Width="80"  Margin="5,0,0,0" IsEnabled="{Binding IsStopEnbel}" Command="{Binding RelayCommand}" />
                <Button Content="保存" Width="80"  Margin="5,0,0,0"/>
                <ToggleButton x:Name="tb_signal"
                              Style="{StaticResource S.ToggleButton.Accent}" Content="信号控制" Width="80"  Margin="5,0,0,0"/>

            </DockPanel>

            <h:GitTopContainer HeaderHeight="0">

                <h:GitTopContainer.CenterContent>
                    <Grid Background="{DynamicResource S.Brush.TextBackground.Default}">
                        <h:Row Style="{StaticResource S.Row.Column.4}" Grid.Row="1" Height="Auto">

                            <h:ImageCore ImageSource="..\Resources\捕获.PNG" Grid.ColumnSpan="4" Location="0,0,300,300" OperateType="{Binding ElementName=list_selecttype,Path=SelectedItem}">
                                <!--<h:ImageCore ImageSource="..\Resources\捕获.PNG">-->
                                <h:ImageCore.Resources>
                                    <Style TargetType="Ellipse">
                                        <Setter Property="RenderTransform" Value="{StaticResource S.TransformGroup.Default}"/>
                                        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                                    </Style>
                                </h:ImageCore.Resources>

                                <h:Interaction.Behaviors>
                                    <h:ImageBaseMouseWheelBehavior/>
                                    <h:ImageBaseMouseEnlargeBehavior/>
                                    <!--<h:ImageBaseMouseDragBehavior/>-->
                                    <h:ImageBaseMouseRightDragBehavior/>
                                    <h:ImageBaseMouseSignBehavior/>
                                    <h:ImageBaseMouseBubbleBehavior/>
                                </h:Interaction.Behaviors>

                                <h:ImageCore.InnerContent>

                                    <Grid x:Name="grid_drag">
                                        <ListBox HorizontalAlignment="Center" Height="800" Width="1000" VerticalAlignment="Stretch" ItemsSource="{Binding SelectedTask.Children}" 
                                         Style="{StaticResource S.ListBox.Clear}" SelectedItem="{Binding Source={StaticResource S.DataSource.Locator},Path=ShellViewModel.SelectedNode}">
                                            <ListBox.ItemTemplate>
                                                <DataTemplate>
                                                    <Grid>
                                                        <StackPanel  x:Name="sp_circle" Visibility="Collapsed">
                                                            <Grid DockPanel.Dock="Top">

                                                                <Border Background="Transparent" Cursor="ScrollAll" CornerRadius="100" BorderThickness="2" BorderBrush="{DynamicResource S.Brush.Accent}" Height="200" Width="200"/>

                                                                <ListBox ItemsSource="{Binding Children}" SelectedItem="{Binding Source={StaticResource S.DataSource.Locator},Path=ShellViewModel.SelectedNode}" 
                                                                     Style="{DynamicResource S.ListBox.Single}">


                                                                    <ListBox.ContextMenu>
                                                                        <ContextMenu>
                                                                            <MenuItem Header="添加装备" IsEnabled="True" Command="{Binding Source={StaticResource S.DataSource.Locator},Path=ShellViewModel.RelayCommand}" CommandParameter="新建任务"/>
                                                                            <MenuItem Header="删除装备" IsEnabled="True"/>
                                                                        </ContextMenu>
                                                                    </ListBox.ContextMenu>

                                                                    <ListBox.ItemTemplate>
                                                                        <DataTemplate>
                                                                            <DockPanel>
                                                                                <TextBlock x:Name="tb_icon1" Text="&#xe81f;" FontSize="10" Style="{DynamicResource S.TextBlock.FIcon}"  Foreground="{DynamicResource S.Brush.Green.Notice}"/>
                                                                                <TextBlock x:Name="tb_name1" Text="{Binding Value}" Margin="10,0" Foreground="{DynamicResource S.Brush.Orange.Notice}"/>
                                                                                <!--<TextBlock Text="{Binding Value1}" Foreground="{DynamicResource S.Brush.TextForeground.Default}"/>-->
                                                                            </DockPanel>

                                                                            <!--<TextBlock Text="&#xe81f;" Margin="2,0" Style="{DynamicResource S.TextBlock.FIcon}"/>-->
                                                                            <!--<DataTemplate.Triggers>
                                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem},Path=IsSelected}" Value="True">
                                                                    <Setter Property="Foreground" Value="{DynamicResource S.Brush.Red.Notice}" TargetName="tb_icon1"/>
                                                                    <Setter Property="Foreground" Value="{DynamicResource S.Brush.Red.Notice}" TargetName="tb_name1"/>
                                                                </DataTrigger>
                                                            </DataTemplate.Triggers>-->
                                                                        </DataTemplate>
                                                                    </ListBox.ItemTemplate>

                                                                    <!--<ItemsPanelTemplate>
                                                                    <h:CirclePanel Len="20"/>
                                                                </ItemsPanelTemplate>-->
                                                                    <!--</ListBox.ItemsPanel>-->

                                                                    <ListBox.ItemsPanel>
                                                                        <ItemsPanelTemplate>
                                                                            <h:CirclePanel Len="80">
                                                                                <!--<h:CirclePanel.Clip>
                                                                                <EllipseGeometry RadiusX="100" RadiusY="100" Center="150,150"/>
                                                                            </h:CirclePanel.Clip>-->
                                                                            </h:CirclePanel>
                                                                        </ItemsPanelTemplate>
                                                                    </ListBox.ItemsPanel>

                                                                    <h:Interaction.Triggers>
                                                                        <h:EventTrigger EventName="SelectionChanged">
                                                                            <h:InvokeCommandAction Command="{Binding Source={StaticResource S.DataSource.Locator},Path=ShellViewModel.RelayCommand}" CommandParameter="SelectionChanged.ShowProperty"/>
                                                                        </h:EventTrigger>
                                                                    </h:Interaction.Triggers>
                                                                </ListBox>

                                                                <TextBlock x:Name="tb_icon" Text="&#xe6f9;" Cursor="ScrollAll" FontSize="42" FontWeight="Black" Foreground="{DynamicResource S.Brush.Accent}" Style="{DynamicResource S.TextBlock.FIcon}"/>

                                                                <TextBlock x:Name="tb_name" VerticalAlignment="Top"  Text="{Binding Value}" Cursor="Hand" Foreground="{DynamicResource S.Brush.Accent}">
                                                                <h:Interaction.Triggers>
                                                                    <h:EventTrigger EventName="MouseDown">
                                                                        <h:InvokeCommandAction Command="{Binding Source={StaticResource S.DataSource.Locator},Path=ShellViewModel.RelayCommand}" CommandParameter="SelectionChanged.Server.ShowProperty"/>
                                                                    </h:EventTrigger>
                                                                </h:Interaction.Triggers>
                                                                
                                                                <h:Interaction.Behaviors>
                                                                    <h:SelectListBoxItemElementBehavior/>
                                                                </h:Interaction.Behaviors>
                                                                </TextBlock>

                                                                <!--<ToggleButton x:Name="tb"  Foreground="Red" Style="{StaticResource S.ToggleButton.Rotate.90}"/>-->

                                                                <CheckBox x:Name="tb" Visibility="Collapsed" Margin="5,0" VerticalAlignment="Center" HorizontalAlignment="Right"  Style="{StaticResource S.CheckBox.Single}" h:Cattach.SelectedText="&#xe863;" h:Cattach.UnSelectedText="&#xe862;"/>

                                                                <Grid.ContextMenu>
                                                                    <ContextMenu>
                                                                        <MenuItem Header="添加装备" IsEnabled="True" Command="{Binding Source={StaticResource S.DataSource.Locator},Path=ShellViewModel.RelayCommand}" CommandParameter="新建任务"/>
                                                                        <MenuItem Header="删除" IsEnabled="True"/>
                                                                        <Separator Style="{StaticResource S.Separator.Default}"/>
                                                                        <MenuItem Header="信号检测" IsEnabled="True"/>
                                                                        <MenuItem Header="功率调整" IsEnabled="True"/>
                                                                        <Separator Style="{StaticResource S.Separator.Default}"/>
                                                                        <MenuItem Header="关闭输出" IsEnabled="True"/>
                                                                        <MenuItem Header="显示/隐藏" IsEnabled="True"/>
                                                                    </ContextMenu>
                                                                </Grid.ContextMenu>
                                                            </Grid>

                                                            <ListBox ItemsSource="{Binding Children}" SelectedItem="{Binding SelectedEquipment}" Background="{DynamicResource S.Brush.Accent.MouseOver}" HorizontalAlignment="Left" MaxHeight="130" Width="200" h:Cattach.IsVisible="{Binding ElementName=tb,Path=IsChecked}" Style="{DynamicResource S.ListBox.Single}">
                                                                <ListBox.ContextMenu>
                                                                    <ContextMenu>
                                                                        <MenuItem Header="添加装备" IsEnabled="True" Command="{Binding Source={StaticResource S.DataSource.Locator},Path=ShellViewModel.RelayCommand}" CommandParameter="新建任务"/>
                                                                        <MenuItem Header="删除装备" IsEnabled="True"/>
                                                                    </ContextMenu>
                                                                </ListBox.ContextMenu>

                                                                <ListBox.ItemTemplate>
                                                                    <DataTemplate>
                                                                        <DockPanel>
                                                                            <TextBlock x:Name="tb_icon1" Text="&#xe81f;" FontSize="10" Style="{DynamicResource S.TextBlock.FIcon}"  Foreground="{DynamicResource S.Brush.TextForeground.White}"/>
                                                                            <TextBlock x:Name="tb_name1" Text="{Binding Value}" Margin="10,0" Foreground="{DynamicResource S.Brush.TextForeground.White}"/>
                                                                            <TextBlock Text="{Binding Value1}" Foreground="{DynamicResource S.Brush.TextForeground.White}"/>
                                                                        </DockPanel>

                                                                        <!--<TextBlock Text="&#xe81f;" Margin="2,0" Style="{DynamicResource S.TextBlock.FIcon}"/>-->
                                                                        <!--<DataTemplate.Triggers>
                                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem},Path=IsSelected}" Value="True">
                                                                    <Setter Property="Foreground" Value="{DynamicResource S.Brush.Red.Notice}" TargetName="tb_icon1"/>
                                                                    <Setter Property="Foreground" Value="{DynamicResource S.Brush.Red.Notice}" TargetName="tb_name1"/>
                                                                </DataTrigger>
                                                            </DataTemplate.Triggers>-->
                                                                    </DataTemplate>
                                                                </ListBox.ItemTemplate>

                                                                <!--<ListBox.ItemsPanel>-->
                                                                <!--<ItemsPanelTemplate>
                                                        <WrapPanel MaxWidth="230" Background="{DynamicResource S.Brush.Accent.MouseOver.Background}" HorizontalAlignment="Left"/>
                                                    </ItemsPanelTemplate>
                                                </ListBox.ItemsPanel>-->

                                                                <!--<ItemsPanelTemplate>
                                                                    <h:CirclePanel Len="20"/>
                                                                </ItemsPanelTemplate>-->
                                                                <!--</ListBox.ItemsPanel>-->

                                                                <h:Interaction.Triggers>
                                                                    <h:EventTrigger EventName="SelectionChanged">
                                                                        <!--<h:ChangePropertyAction TargetObject="{Binding ElementName=fd_property}" PropertyName="IsExpanded" Value="True"/>-->

                                                                        <h:InvokeCommandAction Command="{Binding Source={StaticResource S.DataSource.Locator},Path=ShellViewModel.RelayCommand}" CommandParameter="SelectionChanged.ShowProperty"/>

                                                                    </h:EventTrigger>
                                                                </h:Interaction.Triggers>
                                                            </ListBox>

                                                            <h:Interaction.Behaviors>
                                                                <h:MouseDragElementBehavior ParentElement="{Binding ElementName=grid_drag}"/>
                                                                <!--<h:CanvasMouseDragElementBehavior/>-->
                                                            </h:Interaction.Behaviors>
                                                        </StackPanel>

                                                        <Grid x:Name="sp_sector"  Width="500" Height="500" ClipToBounds="False">

                                                            <!--<h:Sector x:Name="st" Fill="{DynamicResource S.Brush.Accent.MouseOver.Background}" Start="0" End="320" 
                                                                          OffSet="50" Cursor="ScrollAll" AllowDrop="True" Len="150"
                                                                          Tag="{Binding}">-->

                                                            <h:Sector x:Name="st" Fill="{DynamicResource S.Brush.Accent.MouseOver.Background}" Start="{Binding Double1}" End="{Binding Double2}" 
                                                                          OffSet="{Binding Double3}" HorizontalAlignment="Left" VerticalAlignment="Top" Cursor="ScrollAll" AllowDrop="True" Len="{Binding Int2}"
                                                                          Tag="{Binding}">
                                                                <h:Interaction.Triggers>
                                                                    <h:EventTrigger EventName="Drop">
                                                                        <h:InvokeCommandAction Command="{Binding Source={StaticResource S.DataSource.Locator},Path=ShellViewModel.RelayCommand}"
                                                                                                   PassEventArgsToCommand="True"/>
                                                                    </h:EventTrigger>
                                                                </h:Interaction.Triggers>

                                                            </h:Sector>

                                                            <ListBox ItemsSource="{Binding Children}" Margin="-130" HorizontalAlignment="Left" VerticalAlignment="Top" SelectedItem="{Binding Source={StaticResource S.DataSource.Locator},Path=ShellViewModel.SelectedNode}" 
                                                                     Style="{DynamicResource S.ListBox.Default}">

                                                                <h:Interaction.Behaviors>
                                                                    <!--<h:ListDragBlendBehavior/>-->
                                                                    <h:ListDropBlendBehavior DragGroup="Equipment"/>

                                                                </h:Interaction.Behaviors>

                                                                <ListBox.ContextMenu>
                                                                    <ContextMenu>
                                                                        <MenuItem Header="添加装备" IsEnabled="True" Command="{Binding Source={StaticResource S.DataSource.Locator},Path=ShellViewModel.RelayCommand}" CommandParameter="新建任务"/>
                                                                        <MenuItem Header="删除装备" IsEnabled="True"/>
                                                                    </ContextMenu>
                                                                </ListBox.ContextMenu>

                                                                <ListBox.ItemTemplate>
                                                                    <DataTemplate>
                                                                        <DockPanel>
                                                                            <!--<TextBlock x:Name="tb_icon1" Text="&#xe81f;" FontSize="10" Style="{DynamicResource S.TextBlock.FIcon}"  Foreground="{DynamicResource S.Brush.Green.Notice}"/>-->
                                                                            <TextBlock x:Name="tb_name1" Text="{Binding Value}" Margin="0,0,10,0" FontWeight="Black"/>
                                                                            <!--<TextBlock Text="{Binding Value1}" Foreground="{DynamicResource S.Brush.TextForeground.Default}"/>-->
                                                                        </DockPanel>

                                                                        <!--<TextBlock Text="&#xe81f;" Margin="2,0" Style="{DynamicResource S.TextBlock.FIcon}"/>-->
                                                                        <!--<DataTemplate.Triggers>
                                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem},Path=IsSelected}" Value="True">
                                                                    <Setter Property="Foreground" Value="{DynamicResource S.Brush.Red.Notice}" TargetName="tb_icon1"/>
                                                                    <Setter Property="Foreground" Value="{DynamicResource S.Brush.Red.Notice}" TargetName="tb_name1"/>
                                                                </DataTrigger>
                                                            </DataTemplate.Triggers>-->
                                                                    </DataTemplate>
                                                                </ListBox.ItemTemplate>

                                                                <!--<ItemsPanelTemplate>
                                                                    <h:CirclePanel Len="20"/>
                                                                </ItemsPanelTemplate>-->
                                                                <!--</ListBox.ItemsPanel>-->

                                                                <ListBox.ItemsPanel>
                                                                    <ItemsPanelTemplate>
                                                                        <h:CirclePanel Len="100" Margin="50" DisplayCount="10">
                                                                            <!--<h:CirclePanel.Clip>
                                                                                <EllipseGeometry RadiusX="100" RadiusY="100" Center="150,150"/>
                                                                            </h:CirclePanel.Clip>-->
                                                                        </h:CirclePanel>
                                                                    </ItemsPanelTemplate>
                                                                </ListBox.ItemsPanel>

                                                                <h:Interaction.Triggers>
                                                                    <h:EventTrigger EventName="SelectionChanged">
                                                                        <h:InvokeCommandAction Command="{Binding Source={StaticResource S.DataSource.Locator},Path=ShellViewModel.RelayCommand}" CommandParameter="SelectionChanged.ShowProperty"/>
                                                                    </h:EventTrigger>
                                                                </h:Interaction.Triggers>


                                                            </ListBox>

                                                            <TextBlock x:Name="tb_icon1" Text="&#xe823;" HorizontalAlignment="Left" VerticalAlignment="Top" Cursor="ScrollAll" FontSize="42" FontWeight="Black" Foreground="{DynamicResource S.Brush.Accent}" Style="{DynamicResource S.TextBlock.FIcon}"/>

                                                            <TextBlock x:Name="tb_name1" Margin="20,40" HorizontalAlignment="Left" VerticalAlignment="Top" FontWeight="Black" Text="{Binding Value}" Cursor="Hand" Foreground="Black">
                                                                <TextBlock.Effect>
                                                                    <DropShadowEffect ShadowDepth="0" BlurRadius="10"  Color="White"/>
                                                                </TextBlock.Effect>
                                                                  <h:Interaction.Triggers>
                                                                    <h:EventTrigger EventName="MouseDown">
                                                                        <h:InvokeCommandAction Command="{Binding Source={StaticResource S.DataSource.Locator},Path=ShellViewModel.RelayCommand}" CommandParameter="SelectionChanged.Server.ShowProperty"/>
                                                                    </h:EventTrigger>
                                                                </h:Interaction.Triggers>
                                                                
                                                                <h:Interaction.Behaviors>
                                                                    <h:SelectListBoxItemElementBehavior/>
                                                                </h:Interaction.Behaviors>
                                                            </TextBlock>

                                                            <Grid.ContextMenu>
                                                                <ContextMenu>
                                                                    <MenuItem Header="添加装备" IsEnabled="True" Command="{Binding Source={StaticResource S.DataSource.Locator},Path=ShellViewModel.RelayCommand}" CommandParameter="新建任务"/>
                                                                    <MenuItem Header="删除" IsEnabled="True"/>
                                                                    <Separator Style="{StaticResource S.Separator.Default}"/>
                                                                    <MenuItem Header="信号检测" IsEnabled="True"/>
                                                                    <MenuItem Header="功率调整" IsEnabled="True"/>
                                                                    <Separator Style="{StaticResource S.Separator.Default}"/>
                                                                    <MenuItem Header="关闭输出" IsEnabled="True"/>
                                                                    <MenuItem Header="显示/隐藏" IsEnabled="True"/>
                                                                </ContextMenu>
                                                            </Grid.ContextMenu>
                                                        </Grid>

                                                        <h:Interaction.Behaviors>
                                                            <h:MouseDragElementBehavior ParentElement="{Binding ElementName=grid_drag}"/>
                                                        </h:Interaction.Behaviors>
                                                    </Grid>

                                                    <DataTemplate.Triggers>
                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem},Path=IsSelected}" Value="True">
                                                            <Setter Property="Foreground" Value="{DynamicResource S.Brush.Red.Notice}" TargetName="tb_icon1"/>
                                                            <!--<Setter Property="Foreground" Value="{DynamicResource S.Brush.Red.Notice}" TargetName="tb_name1"/>-->
                                                            <Setter Property="Fill" TargetName="st">
                                                                <Setter.Value>
                                                                    <SolidColorBrush Color="Red" Opacity="0.5"/>
                                                                </Setter.Value>
                                                            </Setter>

                                                        </DataTrigger>

                                                        <DataTrigger Binding="{Binding Value9}" Value="1">
                                                            <Setter Property="Visibility" Value="Collapsed" TargetName="sp_sector"/>
                                                            <Setter Property="Visibility" Value="Visible" TargetName="sp_circle"/>
                                                        </DataTrigger>

                                                        <DataTrigger Binding="{Binding Value9}" Value="2">
                                                            <Setter Property="Visibility" Value="Collapsed" TargetName="sp_circle"/>
                                                            <Setter Property="Visibility" Value="Visible" TargetName="sp_sector"/>
                                                        </DataTrigger>
                                                    </DataTemplate.Triggers>
                                                </DataTemplate>
                                            </ListBox.ItemTemplate>

                                            <ListBox.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <!--<UniformGrid Columns="3" Margin="10"/>-->
                                                    <h:CirclePanel Len="350" IsAnimation="False" IsItemsHost="True"/>
                                                </ItemsPanelTemplate>
                                            </ListBox.ItemsPanel>

                                            <h:Interaction.Behaviors>
                                                <!--<h:ListDragBlendBehavior/>-->
                                                <h:ListDropBlendBehavior DragGroup="Server"/>
                                            </h:Interaction.Behaviors>
                                        </ListBox>
                                    </Grid>

                                </h:ImageCore.InnerContent>

                            </h:ImageCore>

                            <!--左侧-->
                            <h:Drawer Header="模板列表" Grid.ColumnSpan="22" h:Cattach.FIcon="模" HorizontalAlignment="Left" Style="{DynamicResource S.Drawer.Left.Single}"  Padding="0" IsExpanded="True"  Background="{DynamicResource S.Brush.Accent.MouseOver}">
                                <h:Cattach.VisibleActions>
                                    <h:ActionCollection>
                                        <h:TranslateAction StartPoint="-300,0" EndPoint="-200,0"/>
                                    </h:ActionCollection>
                                </h:Cattach.VisibleActions>

                                <Grid>
                                    <UniformGrid Rows="2" Width="350" >
                                        <GroupBox Header="信号生成分系统模板" Padding="0" Style="{StaticResource S.GroupBox.Default.WithClose}" Background="Transparent">

                                            <DockPanel>
                                                <h:Row DockPanel.Dock="Top">
                                                    <TextBox Margin="5,0" Style="{DynamicResource S.TextBox.Single.Clear}"  h:Cattach.Watermark="请输入筛选条件" h:Cattach.FIcon="&#xe787;" Grid.ColumnSpan="22"/>
                                                </h:Row>

                                                <ListBox Grid.Row="1" Style="{DynamicResource S.ListBox.Default}" AllowDrop="True"
                                     ItemsSource="{Binding Servers}" SelectedItem="{Binding SelectedServer}"
                                      Background="Transparent" ItemContainerStyle="{StaticResource S.ListBoxItem.AllowDrop}">
                                                    <h:Interaction.Behaviors>
                                                        <!--<h:ListDragBlendBehavior DragGroup="Server" DragDropEffects="Copy"/>-->
                                                        <!--<h:ListDropBlendBehavior/>--> 
                                                    </h:Interaction.Behaviors>

                                                    <ListBox.ContextMenu>
                                                        <ContextMenu>
                                                            <MenuItem Header="添加" IsEnabled="True" CommandParameter="新建任务"/>
                                                            <MenuItem Header="添加装备" IsEnabled="True" CommandParameter="新建任务"/>
                                                            <MenuItem Header="删除" IsEnabled="True"/>
                                                            <Separator Style="{StaticResource S.Separator.Default}"/>
                                                            <MenuItem Header="信号检测" IsEnabled="True"/>
                                                            <MenuItem Header="功率调整" IsEnabled="True"/>
                                                            <MenuItem Header="关闭输出" IsEnabled="True"/>
                                                            <MenuItem Header="显示/隐藏" IsEnabled="True"/>
                                                        </ContextMenu>
                                                    </ListBox.ContextMenu>

                                                    <ListBox.GroupStyle>
                                                        <GroupStyle ContainerStyle="{StaticResource S.GroupItem.Transparent}">
                                                            <GroupStyle.Panel>
                                                                <ItemsPanelTemplate>
                                                                    <DataGridRowsPresenter/>
                                                                </ItemsPanelTemplate>
                                                            </GroupStyle.Panel>
                                                        </GroupStyle>
                                                    </ListBox.GroupStyle>

                                                    <ListBox.ItemTemplate>
                                                        <DataTemplate  DataType="{x:Type h:TestViewModel}">
                                                            <Grid x:Name="grid" HorizontalAlignment="Left" Width="{Binding RelativeSource={RelativeSource AncestorType=ListBox},Path=ActualWidth}" TextBlock.Foreground="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem},Path=Foreground}">
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition/>
                                                                </Grid.RowDefinitions>

                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="Auto"/>
                                                                    <ColumnDefinition/>
                                                                    <ColumnDefinition/>
                                                                    <ColumnDefinition Width="Auto"/>
                                                                </Grid.ColumnDefinitions>

                                                                <!--<TextBlock Style="{StaticResource S.TextBlock.FIcon}" Foreground="{DynamicResource S.Brush.TextForeground.White}" Margin="10,0" Grid.RowSpan="2" Text="&#xe90c;" FontSize="15" VerticalAlignment="Center" HorizontalAlignment="Center"/>-->

                                                                <TextBlock Text="{Binding Value}" Grid.Column="1" Foreground="{DynamicResource S.Brush.TextForeground.White}" Grid.Row="1" VerticalAlignment="Center" ToolTip="{Binding Value1}"/>

                                                                <TextBlock Text="{Binding Value1}" Margin="15,0,0,0" Grid.Column="2" Foreground="{DynamicResource S.Brush.TextForeground.White}" Grid.Row="1" VerticalAlignment="Center" ToolTip="{Binding Value1}"/>

                                                                <!--<Button Style="{DynamicResource S.Button.Transparent}" h:Cattach.FIcon="&#xe7f3;" VerticalAlignment="Center" Grid.Column="2" Margin="0,0"/>-->

                                                                <Button x:Name="btn_close" Style="{DynamicResource S.Button.Close}" Foreground="{DynamicResource S.Brush.TextForeground.White}" VerticalAlignment="Center" Grid.Column="3" Margin="15,0"/>

                                                            </Grid>
                                                            <DataTemplate.Triggers>
                                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem},Path=IsMouseOver}" Value="True">
                                                                    <Setter Property="Visibility" Value="Visible" TargetName="btn_close"/>
                                                                </DataTrigger>
                                                            </DataTemplate.Triggers>
                                                        </DataTemplate>
                                                    </ListBox.ItemTemplate>
                                                </ListBox>
                                            </DockPanel>

                                        </GroupBox>

                                        <GroupBox Header="装备模板" Padding="0" Background="Transparent">
                                            <DockPanel>
                                                <h:Row DockPanel.Dock="Top">
                                                    <TextBox Margin="5,0" Style="{DynamicResource S.TextBox.Single.Clear}"  h:Cattach.Watermark="请输入筛选条件" h:Cattach.FIcon="&#xe787;" Grid.ColumnSpan="22"/>
                                                </h:Row>
                                                <DockPanel Grid.Row="1" DockPanel.Dock="Bottom">

                                                </DockPanel>

                                                <ListBox Grid.Row="1" ItemTemplate="{StaticResource C.TestViewModel.Item.Many}" AllowDrop="True"  Style="{DynamicResource S.ListBox.Default}" ItemsSource="{Binding EquipmentTemplates}" SelectedItem="{Binding SelectedEquipment}"  
                                                 Background="Transparent"  ItemContainerStyle="{StaticResource S.ListBoxItem.AllowDrop}">
                                                    <ListBox.ContextMenu>
                                                        <ContextMenu>
                                                            <MenuItem Header="添加" IsEnabled="True" CommandParameter="新建任务"/>
                                                            <MenuItem Header="删除" IsEnabled="True"/>
                                                        </ContextMenu>
                                                    </ListBox.ContextMenu>

                                                    <ListBox.GroupStyle>
                                                        <GroupStyle ContainerStyle="{StaticResource S.GroupItem.Transparent}">
                                                            <GroupStyle.Panel>
                                                                <ItemsPanelTemplate>
                                                                    <DataGridRowsPresenter/>
                                                                </ItemsPanelTemplate>
                                                            </GroupStyle.Panel>
                                                        </GroupStyle>
                                                    </ListBox.GroupStyle>

                                                    <h:Interaction.Triggers>
                                                        <h:EventTrigger EventName="SelectionChanged">
                                                            <h:InvokeCommandAction Command="{Binding RelayCommand}" CommandParameter="SelectionChanged.ShowProperty"/>
                                                        </h:EventTrigger>
                                                    </h:Interaction.Triggers>

                                                    <!--<h:Interaction.Behaviors>
                                                        <h:ListDragBlendBehavior DragGroup="Equipment"  DragDropEffects="Copy"/>
                                                        --><!--<h:ListDropBlendBehavior/>--><!--
                                                    </h:Interaction.Behaviors>-->
                                                </ListBox>

                                            </DockPanel>
                                        </GroupBox>
                                    </UniformGrid>
                                </Grid>
                            </h:Drawer>

                            <!--右侧-->
                            <h:Drawer Header="列表" Grid.ColumnSpan="22" h:Cattach.FIcon="任" Style="{DynamicResource S.Drawer.Right.Single}" VerticalContentAlignment="Stretch" Padding="0" IsExpanded="True"  Background="{DynamicResource S.Brush.Accent.MouseOver}">
                                <h:Cattach.VisibleActions>
                                    <h:ActionCollection>
                                        <h:TranslateAction StartPoint="300,0" EndPoint="200,0"/>
                                    </h:ActionCollection>
                                </h:Cattach.VisibleActions>

                                <Grid>
                                    <UniformGrid Rows="2" Width="350">
                                        <GroupBox Header="{Binding SelectedTask.Value}" Padding="0" Style="{StaticResource S.GroupBox.Default.WithClose}" Background="Transparent">

                                            <DockPanel>
                                                <h:Row DockPanel.Dock="Top">
                                                    <TextBox Margin="5,0" Style="{DynamicResource S.TextBox.Single.Clear}"  h:Cattach.Watermark="请输入筛选条件" h:Cattach.FIcon="&#xe787;" Grid.ColumnSpan="22"/>
                                                </h:Row>

                                                <TreeView x:Name="tv" ItemsSource="{Binding SelectedTask.Children}" BorderThickness="0" Foreground="{DynamicResource S.Brush.TextForeground.White}" 
                                              Style="{StaticResource S.TreeView.Accent}"
                                              Background="Transparent" HorizontalAlignment="Stretch">
                                                    <TreeView.Resources>
                                                        <HierarchicalDataTemplate ItemsSource="{Binding Children}" DataType="{x:Type local:ServerViewModel}">
                                                            <Grid x:Name="grid" Background="Transparent" VerticalAlignment="Stretch"  HorizontalAlignment="Stretch" TextBlock.Foreground="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem},Path=Foreground}">
                                                                <Grid.ContextMenu>
                                                                    <ContextMenu>
                                                                        <MenuItem Header="添加位置" IsEnabled="True" CommandParameter="新建任务"/>
                                                                        <MenuItem Header="添加装备" IsEnabled="True" CommandParameter="新建任务"/>
                                                                        <MenuItem Header="清空装备"/>
                                                                        <MenuItem Header="删除位置" IsEnabled="True"/>
                                                                        <Separator Style="{StaticResource S.Separator.Default}"/>
                                                                        <MenuItem Header="信号检测" IsEnabled="True"/>
                                                                        <MenuItem Header="功率调整" IsEnabled="True"/>
                                                                        <MenuItem Header="关闭输出" IsEnabled="True"/>
                                                                        <MenuItem Header="显示/隐藏" IsEnabled="True"/>
                                                                        <Separator Style="{StaticResource S.Separator.Default}"/>
                                                                        <MenuItem Header="保存模板" IsEnabled="True"/>
                                                                    </ContextMenu>
                                                                </Grid.ContextMenu>

                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="Auto"/>
                                                                    <ColumnDefinition/>
                                                                    <ColumnDefinition/>
                                                                    <ColumnDefinition Width="Auto"/>
                                                                    <ColumnDefinition Width="Auto"/>
                                                                </Grid.ColumnDefinitions>

                                                                <TextBlock Text="&#xe73b;" FontSize="15" Style="{DynamicResource S.TextBlock.FIcon}" Foreground="{DynamicResource S.Brush.TextForeground.White}" Grid.Column="0" Grid.Row="1" VerticalAlignment="Center" ToolTip="{Binding Value1}"/>

                                                                <TextBlock Text="{Binding Value}" Margin="10,0" Foreground="{DynamicResource S.Brush.TextForeground.White}" Grid.Column="1" Grid.Row="1" VerticalAlignment="Center" ToolTip="{Binding Value1}"/>

                                                                <Button  h:Cattach.FIconSize="18" h:Cattach.FIcon="+" Style="{StaticResource S.Button.Transparent}"  Foreground="{DynamicResource S.Brush.TextForeground.White}" Grid.Column="3"/>

                                                                <h:FButton x:Name="btn_close" Grid.Column="4" Style="{DynamicResource S.FButton.Close}" 
                                                   FIconSize="12" MouseOverForeground="{DynamicResource S.Brush.Red.Notice}"
                                                   Foreground="{DynamicResource S.Brush.TextForeground.White}"/>

                                                            </Grid>
                                                        </HierarchicalDataTemplate>

                                                        <HierarchicalDataTemplate ItemsSource="{Binding Children}" DataType="{x:Type h:TestViewModel}">
                                                            <Grid x:Name="grid" Background="Transparent" HorizontalAlignment="Stretch" TextBlock.Foreground="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem},Path=Foreground}">
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition/>
                                                                </Grid.RowDefinitions>

                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="Auto"/>
                                                                    <ColumnDefinition/>
                                                                    <ColumnDefinition/>
                                                                    <ColumnDefinition/>
                                                                    <ColumnDefinition Width="Auto"/>
                                                                </Grid.ColumnDefinitions>

                                                                <TextBlock Text="&#xe861;" Margin="10,0" FontSize="12" Style="{DynamicResource S.TextBlock.FIcon}" Foreground="{DynamicResource S.Brush.TextForeground.White}" Grid.Column="0" Grid.Row="1" VerticalAlignment="Center" ToolTip="{Binding Value1}"/>

                                                                <TextBlock Text="{Binding Value}" Foreground="{DynamicResource S.Brush.TextForeground.White}" Grid.Column="1" Grid.Row="1" VerticalAlignment="Center" ToolTip="{Binding Value1}"/>

                                                                <h:FButton x:Name="btn_close" Grid.Column="4" Style="{DynamicResource S.FButton.Close}" 
                                                   FIconSize="12" MouseOverForeground="{DynamicResource S.Brush.Red.Notice}"
                                                   Foreground="{DynamicResource S.Brush.TextForeground.White}"/>
                                                            </Grid>

                                                        </HierarchicalDataTemplate>

                                                        <HierarchicalDataTemplate ItemsSource="{Binding Children}" DataType="{x:Type local:EquipmentViewModel}">
                                                            <Grid x:Name="grid" Background="Transparent" HorizontalAlignment="Stretch" TextBlock.Foreground="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem},Path=Foreground}">
                                                                <Grid.ContextMenu>
                                                                    <ContextMenu>
                                                                        <MenuItem Header="添加" IsEnabled="True" CommandParameter="新建任务"/>
                                                                        <MenuItem Header="删除" IsEnabled="True"/>
                                                                        <MenuItem Header="复制" IsEnabled="True"/>
                                                                        <MenuItem Header="粘贴" IsEnabled="True"/>
                                                                        <Separator Style="{StaticResource S.Separator.Default}"/>
                                                                        <MenuItem Header="保存模板" IsEnabled="True"/>
                                                                    </ContextMenu>
                                                                </Grid.ContextMenu>

                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="Auto"/>
                                                                    <ColumnDefinition/>
                                                                    <ColumnDefinition/>
                                                                    <ColumnDefinition/>
                                                                    <ColumnDefinition Width="Auto"/>
                                                                </Grid.ColumnDefinitions>

                                                                <TextBlock Text="&#xe861;" Margin="0,0,10,0" FontSize="12" Style="{DynamicResource S.TextBlock.FIcon}" Foreground="{DynamicResource S.Brush.TextForeground.White}" Grid.Column="0" Grid.Row="1" VerticalAlignment="Center" ToolTip="{Binding Value1}"/>

                                                                <TextBlock Text="{Binding Value}" Foreground="{DynamicResource S.Brush.TextForeground.White}" Grid.Column="1" Grid.Row="1" VerticalAlignment="Center" ToolTip="{Binding Value1}"/>

                                                                <h:FButton x:Name="btn_close" Grid.Column="4" Style="{DynamicResource S.FButton.Close}" 
                                                   FIconSize="12" MouseOverForeground="{DynamicResource S.Brush.Red.Notice}"
                                                   Foreground="{DynamicResource S.Brush.TextForeground.White}"/>
                                                            </Grid>
                                                        </HierarchicalDataTemplate>

                                                        <HierarchicalDataTemplate ItemsSource="{Binding Children}" DataType="{x:Type local:TaskViewModel}">
                                                            <Grid x:Name="grid" Background="Transparent" HorizontalAlignment="Stretch" TextBlock.Foreground="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem},Path=Foreground}">
                                                                <Grid.ContextMenu>
                                                                    <ContextMenu>
                                                                        <MenuItem Header="生成" IsEnabled="True"/>
                                                                        <MenuItem Header="添加" IsEnabled="True" CommandParameter="新建任务"/>
                                                                        <MenuItem Header="打开" IsEnabled="True"/>
                                                                        <MenuItem Header="复制" IsEnabled="True"/>
                                                                        <MenuItem Header="粘贴" IsEnabled="True"/>
                                                                        <MenuItem Header="删除" IsEnabled="True"/>
                                                                        <Separator Style="{StaticResource S.Separator.Default}"/>
                                                                        <MenuItem Header="导入" IsEnabled="True"/>
                                                                        <MenuItem Header="导出" IsEnabled="True"/>
                                                                        <Separator Style="{StaticResource S.Separator.Default}"/>
                                                                        <MenuItem Header="添加装备" IsEnabled="True" CommandParameter="新建任务"/>
                                                                        <MenuItem Header="清空装备"/>
                                                                        <Separator Style="{StaticResource S.Separator.Default}"/>
                                                                        <MenuItem Header="添加信号生成分系统" IsEnabled="True" CommandParameter="新建任务"/>
                                                                        <MenuItem Header="清空信号生成分系统"/>
                                                                        <Separator Style="{StaticResource S.Separator.Default}"/>
                                                                        <MenuItem Header="保存模板" IsEnabled="True"/>
                                                                    </ContextMenu>
                                                                </Grid.ContextMenu>

                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="Auto"/>
                                                                    <ColumnDefinition/>
                                                                    <ColumnDefinition/>
                                                                    <ColumnDefinition Width="Auto"/>
                                                                    <ColumnDefinition Width="Auto"/>
                                                                </Grid.ColumnDefinitions>

                                                                <TextBlock Text="&#xe861;" Margin="10,0" FontSize="12" Style="{DynamicResource S.TextBlock.FIcon}" Foreground="{DynamicResource S.Brush.TextForeground.White}" Grid.Column="0" Grid.Row="1" VerticalAlignment="Center" ToolTip="{Binding Value1}"/>

                                                                <TextBlock Text="{Binding Value}" Foreground="{DynamicResource S.Brush.TextForeground.White}" Grid.Column="1" Grid.Row="1" VerticalAlignment="Center" ToolTip="{Binding Value1}"/>

                                                                <Button  h:Cattach.FIconSize="18" h:Cattach.FIcon="+" Style="{StaticResource S.Button.Transparent}"  Foreground="{DynamicResource S.Brush.TextForeground.White}" Grid.Column="3"/>

                                                                <h:FButton x:Name="btn_close" Grid.Column="4" Style="{DynamicResource S.FButton.Close}" 
                                                   FIconSize="12" MouseOverForeground="{DynamicResource S.Brush.Red.Notice}"
                                                   Foreground="{DynamicResource S.Brush.TextForeground.White}"/>
                                                            </Grid>
                                                        </HierarchicalDataTemplate>

                                                        <HierarchicalDataTemplate ItemsSource="{Binding Children}" DataType="{x:Type local:ServerGroupViewModel}">
                                                            <Grid x:Name="grid" Background="Transparent" HorizontalAlignment="Stretch" TextBlock.Foreground="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem},Path=Foreground}">
                                                                <Grid.ContextMenu>
                                                                    <ContextMenu>
                                                                        <MenuItem Header="添加" IsEnabled="True" CommandParameter="新建任务"/>
                                                                        <MenuItem Header="清空" IsEnabled="True"/>
                                                                    </ContextMenu>
                                                                </Grid.ContextMenu>

                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="Auto"/>
                                                                    <ColumnDefinition/>
                                                                    <ColumnDefinition/>
                                                                    <ColumnDefinition Width="Auto"/>
                                                                    <ColumnDefinition Width="Auto"/>
                                                                </Grid.ColumnDefinitions>

                                                                <TextBlock Text="&#xe861;" Margin="10,0" FontSize="12" Style="{DynamicResource S.TextBlock.FIcon}" Foreground="{DynamicResource S.Brush.TextForeground.White}" Grid.Column="0" Grid.Row="1" VerticalAlignment="Center" ToolTip="{Binding Value1}"/>

                                                                <TextBlock Text="{Binding Value}" Foreground="{DynamicResource S.Brush.TextForeground.White}" Grid.Column="1" Grid.Row="1" VerticalAlignment="Center" ToolTip="{Binding Value1}"/>

                                                                <!--<h:FButton x:Name="btn_add" Grid.Column="3" Style="{DynamicResource S.FButton.Close}" 
                                                   FIconSize="12" MouseOverForeground="{DynamicResource S.Brush.Red.Notice}"
                                                   Foreground="{DynamicResource S.Brush.TextForeground.White}"/>-->

                                                                <Button  h:Cattach.FIconSize="18" h:Cattach.FIcon="+" Style="{StaticResource S.Button.Transparent}"  Foreground="{DynamicResource S.Brush.TextForeground.White}" Grid.Column="3"/>

                                                                <h:FButton x:Name="btn_close" Grid.Column="4" Style="{DynamicResource S.FButton.Close}" 
                                                   FIconSize="12" MouseOverForeground="{DynamicResource S.Brush.Red.Notice}"
                                                   Foreground="{DynamicResource S.Brush.TextForeground.White}"/>
                                                            </Grid>
                                                        </HierarchicalDataTemplate>

                                                        <HierarchicalDataTemplate ItemsSource="{Binding Children}" DataType="{x:Type local:EquipmentGroupViewModel}">
                                                            <Grid x:Name="grid" Background="Transparent" HorizontalAlignment="Stretch" TextBlock.Foreground="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem},Path=Foreground}">
                                                                <Grid.ContextMenu>
                                                                    <ContextMenu>
                                                                        <MenuItem Header="添加" IsEnabled="True" CommandParameter="新建任务"/>
                                                                        <MenuItem Header="清空" IsEnabled="True"/>
                                                                    </ContextMenu>
                                                                </Grid.ContextMenu>

                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="Auto"/>
                                                                    <ColumnDefinition/>
                                                                    <ColumnDefinition/>
                                                                    <ColumnDefinition Width="Auto"/>
                                                                    <ColumnDefinition Width="Auto"/>
                                                                </Grid.ColumnDefinitions>

                                                                <TextBlock Text="&#xe861;" Margin="10,0" FontSize="12" Style="{DynamicResource S.TextBlock.FIcon}" Foreground="{DynamicResource S.Brush.TextForeground.White}" Grid.Column="0" Grid.Row="1" VerticalAlignment="Center" ToolTip="{Binding Value1}"/>

                                                                <TextBlock Text="{Binding Value}" Foreground="{DynamicResource S.Brush.TextForeground.White}" Grid.Column="1" Grid.Row="1" VerticalAlignment="Center" ToolTip="{Binding Value1}"/>

                                                                <Button  h:Cattach.FIconSize="18" h:Cattach.FIcon="+" Style="{StaticResource S.Button.Transparent}"  Foreground="{DynamicResource S.Brush.TextForeground.White}" Grid.Column="3"/>


                                                                <h:FButton x:Name="btn_close" Grid.Column="4" Style="{DynamicResource S.FButton.Close}" 
                                                   FIconSize="12" MouseOverForeground="{DynamicResource S.Brush.Red.Notice}"
                                                   Foreground="{DynamicResource S.Brush.TextForeground.White}"/>
                                                            </Grid>
                                                        </HierarchicalDataTemplate>
                                                    </TreeView.Resources>

                                                    <h:Interaction.Triggers>
                                                        <h:EventTrigger EventName="SelectedItemChanged">
                                                            <h:InvokeCommandAction Command="{Binding RelayCommand}" PassEventArgsToCommand="True"/>
                                                        </h:EventTrigger>
                                                    </h:Interaction.Triggers>
                                                </TreeView>

                                            </DockPanel>

                                        </GroupBox>

                                        <GroupBox Header="属性" Padding="0" Background="Transparent">
                                            <Grid Margin="0">
                                                <Grid.Resources>

                                                    <DataTemplate DataType="{x:Type local:ServerViewModel}">
                                                        <ScrollViewer>
                                                            <StackPanel VerticalAlignment="Top" Margin="5,0" TextBlock.Foreground="{DynamicResource S.Brush.TextForeground.White}">
                                                                <h:Row Style="{StaticResource S.Row.Column.1}">
                                                                    <TextBox DockPanel.Dock="Top" h:Cattach.Label="名称：" Text="{Binding Value,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource S.TextBox.LabelClear}" 
                                                     h:Cattach.TitleForeground="{DynamicResource S.Brush.TextForeground.White}"/>
                                                                </h:Row>

                                                                <h:Row Style="{StaticResource S.Row.Column.1}">
                                                                    <ComboBox x:Name="cb_selecteserver" h:Cattach.Watermark="   请选择映射实际主机" Margin="0" h:Cattach.TitleForeground="{DynamicResource S.Brush.TextForeground.White}" 
                                                                      h:Cattach.Label="映射：" Style="{StaticResource S.ComboBox.Single.Label}">
                                                                        <ComboBox.ItemTemplate>
                                                                            <DataTemplate>
                                                                                <DockPanel>
                                                                                    <TextBlock Text="{Binding Value}"/>
                                                                                    <TextBlock Margin="10,0" Text="{Binding Value2}"/>
                                                                                </DockPanel>
                                                                            </DataTemplate>
                                                                        </ComboBox.ItemTemplate>

                                                                        <h:TestViewModel Value="  主机一" Value1="192.168.0.1" Value2="(34,145)"/>
                                                                        <h:TestViewModel Value="  主机二" Value1="192.168.0.2" Value2="(334,45)"/>
                                                                        <h:TestViewModel Value="  主机三" Value1="192.168.0.3" Value2="(234,435)"/>
                                                                        <h:TestViewModel Value="  主机四" Value1="192.168.0.4" Value2="(11,435)"/>

                                                                    </ComboBox>
                                                                </h:Row>

                                                                <h:Row Style="{StaticResource S.Row.Column.1}" Margin="{StaticResource S.Thickness.Margin.10.0}">
                                                                    <DockPanel>
                                                                        <TextBlock Text="状态："/>

                                                                        <h:Ping IP="{Binding ElementName=cb_selecteserver,Path=SelectedItem.Value1}" Margin="10,0" RunningForegroundBrush="{DynamicResource S.Brush.TextForeground.White}"/>
                                                                    </DockPanel>
                                                                </h:Row>

                                                                <h:Row Style="{StaticResource S.Row.Column.1}" Margin="{StaticResource S.Thickness.Margin.10.0}">
                                                                    <TextBlock>
                                                <Run Text="LatLngX："/>
                                                <Run Text="34.2393"/>
                                                                    </TextBlock>
                                                                </h:Row>

                                                                <h:Row Style="{StaticResource S.Row.Column.1}" Margin="{StaticResource S.Thickness.Margin.10.0}">
                                                                    <TextBlock>
                                                <Run Text="LatLngY："/>
                                                <Run Text="108.085"/>
                                                                    </TextBlock>
                                                                </h:Row>

                                                                <h:Row Style="{StaticResource S.Row.Column.1}" Margin="{StaticResource S.Thickness.Margin.10.0}">
                                                                    <TextBlock>
                                                <Run Text="装备数量："/>
                                                <Run Text="{Binding Children.Count,Mode=OneWay}"/>
                                                                    </TextBlock>
                                                                </h:Row>

                                                                <h:Row Style="{StaticResource S.Row.Column.4}" Margin="{StaticResource S.Thickness.Margin.10.0}">
                                                                    <TextBlock Text="偏移:"/>
                                                                    <Slider Grid.Column="1" Grid.ColumnSpan="22" Value="{Binding Double3,Mode=TwoWay}" Minimum="0" Maximum="360"/>
                                                                </h:Row>

                                                                <h:Row Style="{StaticResource S.Row.Column.4}" Margin="{StaticResource S.Thickness.Margin.10.0}">
                                                                    <TextBlock Text="半径:"/>
                                                                    <Slider Grid.Column="1" Grid.ColumnSpan="22" Value="{Binding Int2,Mode=TwoWay}" Minimum="0" Maximum="1500"/>
                                                                </h:Row>

                                                                <h:Row Style="{StaticResource S.Row.Column.4}" Margin="{StaticResource S.Thickness.Margin.10.0}">
                                                                    <TextBlock Text="结束角度:"/>
                                                                    <Slider Grid.Column="1" Grid.ColumnSpan="22" Value="{Binding Double2,Mode=TwoWay}" Minimum="0" Maximum="360"/>
                                                                </h:Row>
                                                                <h:Row Style="{StaticResource S.Row.Column.4}" Margin="{StaticResource S.Thickness.Margin.10.0}">
                                                                    <TextBlock Text="起始角度:"/>
                                                                    <Slider Grid.Column="1" Grid.ColumnSpan="22" Value="{Binding Double1,Mode=TwoWay}" Minimum="0" Maximum="360"/>
                                                                </h:Row>

                                                            </StackPanel>
                                                        </ScrollViewer>
                                                    </DataTemplate>

                                                    <DataTemplate DataType="{x:Type local:EquipmentViewModel}">
                                                        <DockPanel>
                                                            <Button Content="应用" DockPanel.Dock="Bottom"/>
                                                            <StackPanel VerticalAlignment="Top" TextBlock.Foreground="{DynamicResource S.Brush.TextForeground.White}">
                                                                <h:Row Style="{StaticResource S.Row.Column.1}">
                                                                    <TextBox DockPanel.Dock="Top" h:Cattach.Label="装备名称：" Text="{Binding Value,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource S.TextBox.LabelClear}" 
                                                     h:Cattach.TitleForeground="{DynamicResource S.Brush.TextForeground.White}"/>
                                                                </h:Row>

                                                                <h:Row Style="{StaticResource S.Row.Column.1}">
                                                                    <TextBox DockPanel.Dock="Top" h:Cattach.Label="装备类型：" Text="{Binding Value1}" Style="{StaticResource S.TextBox.LabelClear}" 
                                                     h:Cattach.TitleForeground="{DynamicResource S.Brush.TextForeground.White}"/>
                                                                </h:Row>

                                                                <h:Row Style="{StaticResource S.Row.Column.1}">
                                                                    <TextBox DockPanel.Dock="Top" h:Cattach.Label="信号类型：" Text="{Binding Value2}" Style="{StaticResource S.TextBox.LabelClear}" 
                                                     h:Cattach.TitleForeground="{DynamicResource S.Brush.TextForeground.White}"/>
                                                                </h:Row>


                                                                <h:Row Style="{StaticResource S.Row.Column.1}">
                                                                    <TextBox DockPanel.Dock="Top" h:Cattach.Label="中心频率：" Text="{Binding Double1}" Style="{StaticResource S.TextBox.LabelClear}" 
                                                     h:Cattach.TitleForeground="{DynamicResource S.Brush.TextForeground.White}"/>
                                                                </h:Row>

                                                                <h:Row Style="{StaticResource S.Row.Column.1}">
                                                                    <TextBox DockPanel.Dock="Top" h:Cattach.Label="输出频率：" Text="{Binding Double2}" Style="{StaticResource S.TextBox.LabelClear}" 
                                                     h:Cattach.TitleForeground="{DynamicResource S.Brush.TextForeground.White}"/>
                                                                </h:Row>

                                                                <h:Row Style="{StaticResource S.Row.Column.1}">

                                                                    <TextBox DockPanel.Dock="Top" h:Cattach.Label="信号码速：" Text="{Binding Double3}" Style="{StaticResource S.TextBox.LabelClear}" 
                                                     h:Cattach.TitleForeground="{DynamicResource S.Brush.TextForeground.White}"/>
                                                                </h:Row>
                                                                <h:Row Style="{StaticResource S.Row.Column.1}">
                                                                    <TextBox DockPanel.Dock="Top" h:Cattach.Label="调制频偏：" Text="{Binding Double10}" Style="{StaticResource S.TextBox.LabelClear}" 
                                                     h:Cattach.TitleForeground="{DynamicResource S.Brush.TextForeground.White}"/>
                                                                </h:Row>
                                                                <h:Row Style="{StaticResource S.Row.Column.1}">
                                                                    <TextBox DockPanel.Dock="Top" h:Cattach.Label="调制深度：" Text="{Binding Double12}" Style="{StaticResource S.TextBox.LabelClear}" 
                                                     h:Cattach.TitleForeground="{DynamicResource S.Brush.TextForeground.White}"/>
                                                                </h:Row>
                                                            </StackPanel>

                                                        </DockPanel>
                                                    </DataTemplate>

                                                    <DataTemplate DataType="{x:Type local:TaskViewModel}">
                                                        <StackPanel VerticalAlignment="Top" TextBlock.Foreground="{DynamicResource S.Brush.TextForeground.White}">

                                                            <h:Row Style="{StaticResource S.Row.Column.1}">
                                                                <TextBox DockPanel.Dock="Top" h:Cattach.Label="任务名称：" Text="{Binding Value,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource S.TextBox.LabelClear}" 
                                                     h:Cattach.TitleForeground="{DynamicResource S.Brush.TextForeground.White}"/>
                                                            </h:Row>

                                                            <h:Row Style="{StaticResource S.Row.Column.1}">
                                                                <TextBox DockPanel.Dock="Top" h:Cattach.Label="数量：" IsReadOnly="True" Text="{Binding Children[0].Children.Count,Mode=OneWay}" Style="{StaticResource S.TextBox.LabelClear}" 
                                                     h:Cattach.TitleForeground="{DynamicResource S.Brush.TextForeground.White}"/>
                                                            </h:Row>

                                                            <h:Row Style="{StaticResource S.Row.Column.1}">
                                                                <TextBox DockPanel.Dock="Top" h:Cattach.Label="装备数量：" Text="{Binding Children[1].Children.Count,Mode=OneWay}" Style="{StaticResource S.TextBox.LabelClear}" 
                                                     h:Cattach.TitleForeground="{DynamicResource S.Brush.TextForeground.White}"/>
                                                            </h:Row>
                                                        </StackPanel>
                                                    </DataTemplate>

                                                    <DataTemplate DataType="{x:Type local:ServerGroupViewModel}">
                                                        <StackPanel VerticalAlignment="Top" TextBlock.Foreground="{DynamicResource S.Brush.TextForeground.White}">
                                                            <h:Row Style="{StaticResource S.Row.Column.1}">
                                                                <TextBox DockPanel.Dock="Top" h:Cattach.Label="数量：" IsReadOnly="True" Text="{Binding Children[0].Children.Count,Mode=OneWay}" Style="{StaticResource S.TextBox.LabelClear}" 
                                                     h:Cattach.TitleForeground="{DynamicResource S.Brush.TextForeground.White}"/>
                                                            </h:Row>
                                                        </StackPanel>
                                                    </DataTemplate>

                                                    <DataTemplate DataType="{x:Type local:EquipmentGroupViewModel}">
                                                        <StackPanel VerticalAlignment="Top" TextBlock.Foreground="{DynamicResource S.Brush.TextForeground.White}">
                                                            <h:Row Style="{StaticResource S.Row.Column.1}">
                                                                <TextBox DockPanel.Dock="Top" h:Cattach.Label="装备数量：" IsReadOnly="True" Text="{Binding Children[0].Children.Count,Mode=OneWay}" Style="{StaticResource S.TextBox.LabelClear}" 
                                                     h:Cattach.TitleForeground="{DynamicResource S.Brush.TextForeground.White}"/>
                                                            </h:Row>
                                                        </StackPanel>
                                                    </DataTemplate>

                                                    <DataTemplate DataType="{x:Type h:TestViewModel}">
                                                        <StackPanel VerticalAlignment="Top" TextBlock.Foreground="{DynamicResource S.Brush.TextForeground.White}">

                                                            <h:Row Style="{StaticResource S.Row.Column.1}">
                                                                <TextBox DockPanel.Dock="Top" h:Cattach.Label="名称：" Text="{Binding Value,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource S.TextBox.LabelClear}" 
                                                     h:Cattach.TitleForeground="{DynamicResource S.Brush.TextForeground.White}"/>
                                                            </h:Row>

                                                            <h:Row Style="{StaticResource S.Row.Column.1}">
                                                                <TextBox DockPanel.Dock="Top" h:Cattach.Label="类型：" Text="{Binding Value1}" Style="{StaticResource S.TextBox.LabelClear}" 
                                                     h:Cattach.TitleForeground="{DynamicResource S.Brush.TextForeground.White}"/>
                                                            </h:Row>

                                                            <h:Row Style="{StaticResource S.Row.Column.1}">
                                                                <TextBox DockPanel.Dock="Top" h:Cattach.Label="信号类型：" Text="{Binding Value2}" Style="{StaticResource S.TextBox.LabelClear}" 
                                                     h:Cattach.TitleForeground="{DynamicResource S.Brush.TextForeground.White}"/>
                                                            </h:Row>

                                                        </StackPanel>
                                                    </DataTemplate>
                                                </Grid.Resources>

                                                <ContentControl Content="{Binding SelectedNode}"/>

                                            </Grid>
                                        </GroupBox>
                                    </UniformGrid>

                                    <!--<Button Style="{StaticResource S.Button.Close}" Margin="10,0" Foreground="{DynamicResource S.Brush.TextForeground.White}"  
                                    Command="{x:Static h:CommandService.Close}" CommandTarget="{Binding RelativeSource={RelativeSource AncestorType=h:Drawer}}"/>-->

                                </Grid>
                            </h:Drawer>
                        </h:Row>
                    </Grid>
                </h:GitTopContainer.CenterContent>

                <h:GitTopItem HeaderContent="{Binding CurrentScene}">
                    <h:GitTopItem.HeaderTemplate>
                        <DataTemplate DataType="{x:Type h:TestViewModel}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <TextBlock Style="{StaticResource S.TextBlock.FIcon}" Margin="10,0" Grid.RowSpan="2" Text="&#xe6ad;" 
                                   VerticalAlignment="Center" HorizontalAlignment="Center"/>

                                <TextBlock Text="当前任务" Grid.Column="1" Grid.Row="0" VerticalAlignment="Bottom"/>

                                <TextBlock Text="{Binding Value}" Grid.Column="1" Grid.Row="1" VerticalAlignment="Center" FontWeight="Black"/>

                            </Grid>
                        </DataTemplate>
                    </h:GitTopItem.HeaderTemplate>
                    <StackPanel >
                        <h:FTextBox Margin="10" h:Cattach.Watermark="请输入筛选条件" h:Cattach.FIcon="&#xe787;"/>
                        <GroupBox Style="{StaticResource S.GroupBox.UnderLine}" Header="其他任务" h:Cattach.FIcon="" Padding="0" Margin="0,2">
                            <ListBox ItemsSource="{Binding Scenes}" SelectedItem="{Binding SelectedScene}" ItemTemplate="{StaticResource C.TestViewModel.Item}">
                                <h:Interaction.Triggers>
                                    <h:EventTrigger EventName="MouseDoubleClick">
                                        <h:InvokeCommandAction Command="{Binding RelayCommand}" CommandParameter="ListBox.MouseDoubleClick.SetSelectedScene"/>
                                        <h:InvokeCommandAction Command="{x:Static h:GitTopContainer.CoverHideCommand}"/>
                                    </h:EventTrigger>
                                </h:Interaction.Triggers>
                            </ListBox>
                        </GroupBox>
                    </StackPanel>
                </h:GitTopItem>

                <h:GitTopItem HeaderContent="{Binding CurrentTempalte}">
                    <h:GitTopItem.HeaderTemplate>
                        <DataTemplate DataType="{x:Type h:TestViewModel}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <TextBlock Style="{StaticResource S.TextBlock.FIcon}" Margin="10,0" Grid.RowSpan="2" Text="&#xe90b;" 
                                   VerticalAlignment="Center" HorizontalAlignment="Center"/>

                                <TextBlock Text="当前模板" Grid.Column="1" Grid.Row="0" VerticalAlignment="Bottom"/>

                                <TextBlock Text="{Binding Value}" Grid.Column="1" Grid.Row="1" VerticalAlignment="Center" FontWeight="Black"/>

                            </Grid>
                        </DataTemplate>
                    </h:GitTopItem.HeaderTemplate>
                    <StackPanel>
                        <h:FTextBox Margin="10" h:Cattach.Watermark="filter" h:Cattach.FIcon="&#xe787;"/>
                        <GroupBox Style="{StaticResource S.GroupBox.UnderLine}" Header="Others" h:Cattach.FIcon="" Padding="0" Margin="0,2">
                            <ListBox ItemsSource="{Binding Templates}" SelectedItem="{Binding SelectedTemplate}" ItemTemplate="{StaticResource C.TestViewModel.Item}">
                                <h:Interaction.Triggers>
                                    <h:EventTrigger EventName="MouseDoubleClick">
                                        <h:InvokeCommandAction Command="{Binding RelayCommand}" CommandParameter="ListBox.MouseDoubleClick.SetSelectedTemplate"/>
                                        <h:InvokeCommandAction Command="{x:Static h:GitTopContainer.CoverHideCommand}"/>
                                    </h:EventTrigger>
                                </h:Interaction.Triggers>
                            </ListBox>
                        </GroupBox>
                    </StackPanel>
                </h:GitTopItem>

                <Grid Opacity="0.5" Visibility="Collapsed">
                    <ProgressBar x:Name="pg"  VerticalAlignment="Top" Height="60" Style="{StaticResource S.ProgressBar.Handy.Default}" Background="{DynamicResource S.Brush.White.Opactiy.3}"  Value="{Binding Percent}">
                        <!--<ProgressBar.Triggers>
                    <EventTrigger RoutedEvent="Loaded">
                        <BeginStoryboard>
                            <Storyboard RepeatBehavior="Forever">
                                <DoubleAnimation From="0" To="100" Duration="00:00:10" Storyboard.TargetProperty="Value"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </ProgressBar.Triggers>-->
                    </ProgressBar>
                </Grid>

                <Grid VerticalAlignment="Top" Height="60">
                    <Button x:Name="btn_top_min"  h:Cattach.FIcon="&#xe9c0;" Style="{DynamicResource S.Button.Transparent}"
                    Foreground="{DynamicResource S.Brush.TextForeground.White}" Background="Transparent" HorizontalAlignment="Right"
                    VerticalAlignment="Bottom">
                        <h:Interaction.Triggers>
                            <h:EventTrigger EventName="Click">
                                <h:ChangePropertyAction PropertyName="HeaderHeight" Value="0" TargetObject="{Binding RelativeSource={RelativeSource AncestorType=h:GitTopContainer}}"/>
                                <h:ChangePropertyAction PropertyName="Visibility" Value="Collapsed"/>
                                <h:ChangePropertyAction PropertyName="Visibility" Value="Visible" TargetName="btn_top_max"/>
                                <h:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" TargetName="pg"/>
                            </h:EventTrigger>
                        </h:Interaction.Triggers>
                    </Button>

                    <Button x:Name="btn_top_max"  h:Cattach.FIcon="&#xe7f1;" Visibility="Collapsed" h:Cattach.FIconSize="12" Style="{DynamicResource S.Button.Transparent}" Margin="0,-40,150,0"
                    Foreground="{DynamicResource S.Brush.TextForeground.White}" Background="Transparent" HorizontalAlignment="Right" WindowChrome.IsHitTestVisibleInChrome="True"
                    VerticalAlignment="Top">
                        <h:Interaction.Triggers>
                            <h:EventTrigger EventName="Click">
                                <h:ChangePropertyAction PropertyName="HeaderHeight" Value="60" TargetObject="{Binding RelativeSource={RelativeSource AncestorType=h:GitTopContainer}}"/>
                                <h:ChangePropertyAction PropertyName="Visibility" Value="Collapsed"/>
                                <h:ChangePropertyAction PropertyName="Visibility" Value="Visible" TargetName="btn_top_min"/>
                                <h:ChangePropertyAction PropertyName="Visibility" Value="Visible" TargetName="pg"/>
                            </h:EventTrigger>
                        </h:Interaction.Triggers>
                    </Button>
                </Grid>
            </h:GitTopContainer>

        </DockPanel>

        <Border Background="Transparent" Margin="300,0" Height="{DynamicResource S.Window.Row.Height}" VerticalAlignment="Bottom">
            <h:Interaction.Triggers>
                <h:EventTrigger EventName="MouseEnter">
                    <h:ChangePropertyAction PropertyName="StateVisble" Value="True" TargetObject="{Binding}"/>
                </h:EventTrigger>
            </h:Interaction.Triggers>
        </Border>

        <DockPanel x:Name="dp_state" VerticalAlignment="Bottom"  h:Cattach.IsVisible="{Binding StateVisble}" LastChildFill="False"  Background="{DynamicResource S.Brush.Dark.2}"  Height="{DynamicResource S.Window.Row.Height}">
            <h:Cattach.VisibleActions>
                <h:ActionCollection>
                    <h:TranslateAction HiddenOrCollapsed="Hidden"/>
                </h:ActionCollection>
            </h:Cattach.VisibleActions>
            <TextBlock Text="{Binding Message}" Margin="10,0" Foreground="{DynamicResource S.Brush.Red.Notice}"/>
            <ProgressBar DockPanel.Dock="Right" Margin="2,0" Width="200" Value="{Binding Percent}" Style="{StaticResource S.ProgressBar.Handy.Default}" Background="{DynamicResource S.Brush.White.Opactiy.3}"/>

            <h:Interaction.Triggers>
                <h:EventTrigger EventName="MouseLeave">
                    <h:ChangePropertyAction PropertyName="StateVisble" Value="False" TargetObject="{Binding}"/>
                </h:EventTrigger>
            </h:Interaction.Triggers>
        </DockPanel>

        <UniformGrid Rows="2" Width="500" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="250,30,0,0" Height="400" h:Cattach.IsVisible="{Binding ElementName=tb_signal,Path=IsChecked}">
            <h:Cattach.VisibleActions>
                <h:ActionCollection>
                    <h:TranslateAction StartPoint="0,-30" EndPoint="0,-30"/>
                </h:ActionCollection>
            </h:Cattach.VisibleActions>
            <GroupBox Header="信号控制">
                <ItemsControl>
                    <h:Row>
                        <DockPanel Grid.ColumnSpan="22">
                            <TextBlock Text="信号一" Margin="10,0"/>
                            <Slider Value="56" Style="{StaticResource S.Slider.WithValue}"/>
                        </DockPanel>
                    </h:Row>

                    <h:Row>
                        <DockPanel Grid.ColumnSpan="22">
                            <TextBlock Text="信号二" Margin="10,0"/>
                            <Slider Value="85" Style="{StaticResource S.Slider.WithValue}"/>
                        </DockPanel>
                    </h:Row>
                    <h:Row>
                        <DockPanel Grid.ColumnSpan="22">
                            <TextBlock Text="信号三" Margin="10,0"/>
                            <Slider Value="12" Style="{StaticResource S.Slider.WithValue}"/>
                        </DockPanel>
                    </h:Row>
                </ItemsControl>
            </GroupBox>
            <GroupBox Header="功率开关">
                <ItemsControl>
                    <h:Row>
                        <DockPanel Grid.ColumnSpan="22">
                            <TextBlock Text="功率一" Margin="10,0"/>
                            <h:SwitchToggleButton IsChecked="True" HorizontalAlignment="Left"/>
                        </DockPanel>
                    </h:Row>

                    <h:Row>
                        <DockPanel Grid.ColumnSpan="22">
                            <TextBlock Text="功率二" Margin="10,0"/>
                            <h:SwitchToggleButton HorizontalAlignment="Left"/>
                        </DockPanel>
                    </h:Row>
                    <h:Row>
                        <DockPanel Grid.ColumnSpan="22">
                            <TextBlock Text="功率三" Margin="10,0"/>
                            <h:SwitchToggleButton  IsChecked="True"  HorizontalAlignment="Left"/>
                        </DockPanel>
                    </h:Row>
                </ItemsControl>
            </GroupBox>
        </UniformGrid>
    </Grid>

    <h:MenuWindowBase.MenuContent>
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="文件(F)" Style="{StaticResource C.MenuItem.Header}">
                <MenuItem Header="新建任务" IsEnabled="True"/>
                <MenuItem Header="新建模板" IsEnabled="True"/>
                <MenuItem Header="打开任务"/>
                <MenuItem Header="保存任务"/>
                <MenuItem Header="另存为"/>
                <Separator Style="{StaticResource S.Separator.Default}"/>
                <MenuItem Header="导出任务"/>
                <MenuItem Header="导入任务"/>
                <MenuItem Header="另存为模板"/>
                <Separator Style="{StaticResource S.Separator.Default}"/>
                <MenuItem Header="退出"/>
            </MenuItem>

            <MenuItem Header="编辑(E)"  Style="{StaticResource C.MenuItem.Header}">
                <MenuItem Header="撤销"/>
                <MenuItem Header="剪切"/>
                <Separator Style="{StaticResource S.Separator.Default}"/>
                <MenuItem Header="复制"/>
                <MenuItem Header="粘贴"/>
                <MenuItem Header="删除"/>
            </MenuItem>

            <MenuItem Header="设置(S)"  Style="{StaticResource C.MenuItem.Header}">
                <MenuItem Header="滤波"  IsEnabled="True"/>
                <MenuItem Header="陷波"  IsEnabled="True"/>
            </MenuItem>

            <MenuItem Header="管理(S)"  Style="{StaticResource C.MenuItem.Header}">
                <MenuItem Header="用户管理"  IsEnabled="True"/>
                <MenuItem Header="地图管理"  IsEnabled="True"/>
                <Separator Style="{StaticResource S.Separator.Default}"/>
                <MenuItem Header="主机管理"  IsEnabled="True"/>
                <MenuItem Header="装备模板管理"  IsEnabled="True"/>
            </MenuItem>

            <MenuItem Header="帮助(H)" Style="{StaticResource C.MenuItem.Header}">
                <MenuItem Header="查看帮助"  IsEnabled="True"/>
                <MenuItem Header="注册产品"  IsEnabled="True"/>
                <MenuItem Header="技术支持"  IsEnabled="True"/>
                <MenuItem Header="软件升级"  IsEnabled="True"/>
                <Separator Style="{StaticResource S.Separator.Default}"/>
                <MenuItem Header="检查更新"  IsEnabled="True"/>
                <MenuItem Header="关于"  IsEnabled="True"/>
            </MenuItem>
        </Menu>
    </h:MenuWindowBase.MenuContent>
</h:MenuWindowBase>
