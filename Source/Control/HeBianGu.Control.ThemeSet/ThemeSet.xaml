<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:h="https://github.com/HeBianGu"
                    xmlns:local="clr-namespace:HeBianGu.Control.ThemeSet"
                    xmlns:sys="clr-namespace:System">
    <Style x:Key="{ComponentResourceKey ResourceId=S.ThemeSet.Default, TypeInTargetAssembly={x:Type local:ThemeSet}}" TargetType="{x:Type local:ThemeSet}">
        <Setter Property="DataContext" Value="{x:Static local:ThemeViewModel.Current}" />
        <Setter Property="Width" Value="400" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ThemeSet}">
                    <ScrollViewer HorizontalScrollBarVisibility="Disabled" TextBlock.Foreground="{TemplateBinding Foreground}" VerticalScrollBarVisibility="Auto">
                        <StackPanel x:Name="Panel" MinWidth="140">
                            <TextBlock Margin="0,0,0,8" Text="应用场景" />
                            
                            <ListBox Margin="0,0,0,16"
                                     ItemsSource="{Binding SelectColorSource.Colors}"
                                     SelectedIndex="0"
                                     SelectedItem="{Binding AccentColor}">
                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel MaxWidth="{Binding ActualWidth, ElementName=Panel}" />
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>

                                <ListBox.ItemContainerStyle>
                                    <Style BasedOn="{StaticResource {x:Type ListBoxItem}}" TargetType="ListBoxItem">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="ListBoxItem">
                                                    <Grid>
                                                        <ContentPresenter />
                                                    </Grid>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ListBox.ItemContainerStyle>
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Rectangle Width="40" Height="40" Margin="2">
                                                <Rectangle.Fill>
                                                    <SolidColorBrush x:Name="Brush" Color="{Binding}" />
                                                </Rectangle.Fill>
                                            </Rectangle>

                                            <TextBlock x:Name="flag"
                                                       Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}"
                                                       Style="{DynamicResource {x:Static h:TextBlockKeys.Icon}}"
                                                       Text="&#xe858;"
                                                       Visibility="Collapsed" />
                                        </Grid>
                                        <DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Path=IsSelected}" Value="true">
                                                <Setter TargetName="flag" Property="Visibility" Value="Visible" />
                                            </DataTrigger>

                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Path=IsMouseOver}" Value="true">
                                                <Setter TargetName="flag" Property="Visibility" Value="Visible" />
                                                <Setter TargetName="flag" Property="Opacity" Value="0.8" />
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>

                            <StackPanel>
                                <StackPanel.Resources>
                                    <DataTemplate x:Key="D.ColorLink.Default" DataType="{x:Type local:ColorLink}">
                                        <Grid>
                                            <Border x:Name="border" Background="{Binding Color}">
                                                <TextBlock x:Name="text"
                                                           HorizontalAlignment="Left"
                                                           Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}"
                                                           Text="{Binding DisplayName}"
                                                           ToolTip="{Binding Source.LocalPath}" />
                                            </Border>
                                        </Grid>
                                        <DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding DisplayName}" Value="浅色调">
                                                <Setter TargetName="border" Property="Background" Value="White" />
                                                <Setter TargetName="text" Property="Foreground" Value="#727272" />
                                            </DataTrigger>

                                            <DataTrigger Binding="{Binding DisplayName}" Value="深色调">
                                                <Setter TargetName="border" Property="Background" Value="#2c2c2c" />
                                                <Setter TargetName="text" Property="Foreground" Value="#e6e6e6" />
                                            </DataTrigger>

                                            <DataTrigger Binding="{Binding DisplayName}" Value="灰色调">
                                                <Setter TargetName="border" Property="Background" Value="#cdcdcd" />
                                                <Setter TargetName="text" Property="Foreground" Value="#2c2c2c" />
                                            </DataTrigger>

                                            <DataTrigger Binding="{Binding DisplayName}" Value="主色调">
                                                <Setter TargetName="border" Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.AccentOpacity1}}" />
                                                <Setter TargetName="text" Property="Foreground" Value="#e6e6e6" />
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </StackPanel.Resources>

                                <h:Row Style="{DynamicResource {x:Static h:Row.Column4Key}}" Visibility="{Binding Source={x:Static sys:ThemeSetting.Instance}, Path=UseSceneType, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}">
                                    <TextBlock Margin="0,0,16,4"
                                               HorizontalAlignment="Right"
                                               VerticalAlignment="Center"
                                               Text="应用场景" />
                                    <ComboBox Grid.Column="1"
                                              Grid.ColumnSpan="3"
                                              VerticalAlignment="Center"
                                              ItemsSource="{Binding ColorSource}"
                                              SelectedIndex="0"
                                              SelectedItem="{Binding SelectColorSource}">
                                        <ComboBox.Resources>
                                            <DataTemplate DataType="{x:Type local:AccentColorSource}">
                                                <Grid>
                                                    <TextBlock VerticalAlignment="Center" Text="{Binding DispalyName}" />
                                                </Grid>
                                            </DataTemplate>
                                        </ComboBox.Resources>

                                        <h:Interaction.Triggers>
                                            <h:EventTrigger EventName="SelectionChanged">
                                                <h:InvokeCommandAction Command="{Binding RelayCommand}" CommandParameter="Combobox.SelectChanged.Refresh" />
                                            </h:EventTrigger>
                                        </h:Interaction.Triggers>
                                    </ComboBox>
                                </h:Row>

                                <!--  主题  -->
                                <h:Row Style="{DynamicResource {x:Static h:Row.Column4Key}}" Visibility="{Binding Source={x:Static sys:ThemeSetting.Instance}, Path=UseThemeType, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}">

                                    <TextBlock Grid.Row="1"
                                               Margin="0,0,16,4"
                                               HorizontalAlignment="Right"
                                               VerticalAlignment="Center"
                                               Text="应用主题" />
                                    <ComboBox Grid.Row="1"
                                              Grid.Column="1"
                                              Grid.ColumnSpan="3"
                                              VerticalAlignment="Center"
                                              ItemTemplate="{StaticResource D.ColorLink.Default}"
                                              ItemsSource="{Binding ColorLinks}"
                                              SelectedValue="{Binding ThemeType}"
                                              SelectedValuePath="ThemeType" />
                                </h:Row>

                                <!--  字体大小  -->
                                <h:Row Style="{DynamicResource {x:Static h:Row.Column4Key}}" Visibility="{Binding Source={x:Static sys:ThemeSetting.Instance}, Path=UseFontSize, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}">
                                    <TextBlock Grid.Row="2"
                                               Margin="0,0,16,4"
                                               HorizontalAlignment="Right"
                                               VerticalAlignment="Center"
                                               Text="字体大小" />

                                    <ComboBox Grid.Row="2"
                                              Grid.Column="1"
                                              Grid.ColumnSpan="3"
                                              VerticalAlignment="Center"
                                              HorizontalContentAlignment="Center"
                                              ItemsSource="{Binding Source={h:EnumSource EnumType={x:Type local:FontSize}}}"
                                              SelectedItem="{Binding FontSize}" />
                                </h:Row>

                                <!--  颜色类型  -->
                                <h:Row Style="{DynamicResource {x:Static h:Row.Column4Key}}" Visibility="{Binding Source={x:Static sys:ThemeSetting.Instance}, Path=UseBrushType, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}">
                                    <TextBlock Grid.Row="2"
                                               Margin="0,0,16,4"
                                               HorizontalAlignment="Right"
                                               VerticalAlignment="Center"
                                               Text="颜色类型" />

                                    <ComboBox Grid.Row="2"
                                              Grid.Column="1"
                                              Grid.ColumnSpan="3"
                                              VerticalAlignment="Center"
                                              HorizontalContentAlignment="Center"
                                              ItemsSource="{Binding Source={h:EnumSource EnumType={x:Type local:AccentBrushType}}}"
                                              SelectedItem="{Binding AccentBrushType}" />

                                </h:Row>

                                <!--  跟随系统  -->
                                <h:Row Style="{DynamicResource {x:Static h:Row.Column4Key}}" Visibility="{Binding Source={x:Static sys:ThemeSetting.Instance}, Path=UseFollowSystem, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}">

                                    <TextBlock Grid.Row="3"
                                               Margin="0,0,16,4"
                                               HorizontalAlignment="Right"
                                               VerticalAlignment="Center"
                                               Text="跟随系统" />

                                    <CheckBox Grid.Row="3"
                                              Grid.Column="1"
                                              Grid.ColumnSpan="3"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              h:Cattach.IconSize="22"
                                              Foreground="White"
                                              IsChecked="{Binding IsFollowSystemSystem}" />
                                </h:Row>

                                <!--  动态颜色  -->
                                <h:Row Style="{DynamicResource {x:Static h:Row.Column4Key}}" Visibility="{Binding Source={x:Static sys:ThemeSetting.Instance}, Path=UseDynamic, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}">

                                    <TextBlock Grid.Row="3"
                                               Margin="0,0,16,4"
                                               HorizontalAlignment="Right"
                                               VerticalAlignment="Center"
                                               Text="动态主题" />

                                    <CheckBox x:Name="cb_isUseAnimal"
                                              Grid.Row="3"
                                              Grid.Column="1"
                                              Grid.ColumnSpan="3"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              h:Cattach.IconSize="22"
                                              Foreground="White"
                                              IsChecked="{Binding IsUseAnimal}" />
                                </h:Row>

                                <!--  动态间隔  -->
                                <h:Row Style="{DynamicResource {x:Static h:Row.Column4Key}}" Visibility="{Binding ElementName=cb_isUseAnimal, Path=IsChecked, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}">

                                    <TextBlock Grid.Row="3"
                                               Margin="0,0,16,4"
                                               HorizontalAlignment="Right"
                                               VerticalAlignment="Center"
                                               Text="动态间隔" />

                                    <Slider Grid.Column="1"
                                            Grid.ColumnSpan="3"
                                            h:Cattach.TitleForeground="{Binding RelativeSource={RelativeSource AncestorType=local:ThemeSet}, Path=Foreground}"
                                            Background="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}"
                                            IsSnapToTickEnabled="True"
                                            Maximum="60000"
                                            Minimum="1"
                                            Style="{DynamicResource {x:Static h:SliderKeys.Value}}"
                                            Value="{Binding AnimalSpeed}" />

                                </h:Row>

                                <!--  行高度  -->
                                <h:Row Style="{DynamicResource {x:Static h:Row.Column4Key}}" Visibility="{Binding Source={x:Static sys:ThemeSetting.Instance}, Path=UseRowHeight, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}">

                                    <TextBlock Grid.Row="3"
                                               Margin="0,0,16,4"
                                               HorizontalAlignment="Right"
                                               VerticalAlignment="Center"
                                               Text="行高度" />

                                    <Slider Grid.Column="1"
                                            Grid.ColumnSpan="3"
                                            h:Cattach.TitleForeground="{Binding RelativeSource={RelativeSource AncestorType=local:ThemeSet}, Path=Foreground}"
                                            Background="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}"
                                            IsSnapToTickEnabled="True"
                                            Maximum="80"
                                            Minimum="20"
                                            Style="{DynamicResource {x:Static h:SliderKeys.Value}}"
                                            Value="{Binding RowHeight}" />

                                </h:Row>

                                <!--  项高度  -->
                                <h:Row Style="{DynamicResource {x:Static h:Row.Column4Key}}" Visibility="{Binding Source={x:Static sys:ThemeSetting.Instance}, Path=UseItemHeight, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}">

                                    <TextBlock Grid.Row="3"
                                               Margin="0,0,16,4"
                                               HorizontalAlignment="Right"
                                               VerticalAlignment="Center"
                                               Text="项高度" />

                                    <Slider Grid.Column="1"
                                            Grid.ColumnSpan="3"
                                            h:Cattach.TitleForeground="{Binding RelativeSource={RelativeSource AncestorType=local:ThemeSet}, Path=Foreground}"
                                            Background="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}"
                                            IsSnapToTickEnabled="True"
                                            Maximum="80"
                                            Minimum="20"
                                            Style="{DynamicResource {x:Static h:SliderKeys.Value}}"
                                            Value="{Binding ItemHeight}" />

                                </h:Row>

                                <!--  项圆角  -->
                                <h:Row Style="{DynamicResource {x:Static h:Row.Column4Key}}" Visibility="{Binding Source={x:Static sys:ThemeSetting.Instance}, Path=UseCorner, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}">

                                    <TextBlock Grid.Row="3"
                                               Margin="0,0,16,4"
                                               HorizontalAlignment="Right"
                                               VerticalAlignment="Center"
                                               Text="项圆角" />

                                    <Slider Grid.Column="1"
                                            Grid.ColumnSpan="3"
                                            h:Cattach.TitleForeground="{Binding RelativeSource={RelativeSource AncestorType=local:ThemeSet}, Path=Foreground}"
                                            Background="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}"
                                            IsSnapToTickEnabled="True"
                                            Maximum="80"
                                            Minimum="0"
                                            Style="{DynamicResource {x:Static h:SliderKeys.Value}}"
                                            Value="{Binding ItemCornerRadius}" />
                                </h:Row>

                                <!--  自定义色  -->
                                <h:Row Style="{DynamicResource {x:Static h:Row.Column4Key}}" Visibility="{Binding Source={x:Static sys:ThemeSetting.Instance}, Path=UseCustomBrush, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}">
                                    <TextBlock Grid.Row="4"
                                               Margin="0,0,16,4"
                                               HorizontalAlignment="Right"
                                               VerticalAlignment="Center"
                                               Text="自定义色" />
                                    <h:MetroColorPicker Grid.Row="4"
                                                        Grid.Column="1"
                                                        Grid.ColumnSpan="3"
                                                        Width="30"
                                                        Height="30"
                                                        Background="{Binding AccentColor, Converter={x:Static h:XConverter.ColorToBrushConverter}, Mode=TwoWay}" />
                                </h:Row>
                            </StackPanel>
                        </StackPanel>
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource {x:Static local:ThemeSet.DefaultKey}}" TargetType="{x:Type local:ThemeSet}" />
</ResourceDictionary>