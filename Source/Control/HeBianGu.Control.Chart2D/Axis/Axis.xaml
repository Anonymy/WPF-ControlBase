<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:HeBianGu.Control.Chart2D" 
                    xmlns:system="clr-namespace:System;assembly=mscorlib">
    
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Provider/Layer.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="S.Axis.Default" TargetType="{x:Type local:Axis}" BasedOn="{StaticResource S.XyLayer.Default}">
        <Setter Property="xDisplay" Value="{Binding RelativeSource={RelativeSource AncestorType=local:Chart},Path=xDisplay}"/>
        <Setter Property="yDisplay" Value="{Binding RelativeSource={RelativeSource AncestorType=local:Chart},Path=yDisplay}"/>
        <Setter Property="AlignLenght" Value="10"/>
        <Setter Property="Foreground" Value="{DynamicResource S.Brush.TextForeground.Default}"/>
        <Setter Property="DockAlignment" Value="Left"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="LineStyle">
            <Setter.Value>
                <Style TargetType="Line">
                    <Setter Property="StrokeThickness" Value="1"/>
                    <Setter Property="Stroke" Value="{Binding RelativeSource={RelativeSource AncestorType=local:Axis},Path=Foreground}"/>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="LabelStyle">
            <Setter.Value>
                <Style TargetType="Label">
                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType=local:Axis},Path=Foreground}"/>
                    <Setter Property="FontSize" Value="15"/>
                    <!--<Setter Property="Width" Value="Auto"/>
                    <Setter Property="Height" Value="Auto"/>-->
                    <!--<Setter Property="Background" Value="Red"/>-->
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="S.xAxis.Default" TargetType="{x:Type local:xAxis}" BasedOn="{StaticResource S.Axis.Default}">
        <Setter Property="AlignAlignmentCenter" Value="{Binding RelativeSource={RelativeSource AncestorType=local:Chart},Path=AlignAlignmentCenter}"/>
        <Setter Property="TextAlignmentCenter" Value="{Binding RelativeSource={RelativeSource AncestorType=local:Chart},Path=AlignmentCenter}"/>
        <Setter Property="DockAlignment" Value="Bottom"/>
        <Setter Property="xConvert" Value="{Binding RelativeSource={RelativeSource AncestorType=local:Chart},Path=xConvert}"/>
    </Style>

    <Style TargetType="{x:Type local:xAxis}" BasedOn="{StaticResource S.xAxis.Default}"/>

    <Style x:Key="S.yAxis.Default" TargetType="{x:Type local:yAxis}" BasedOn="{StaticResource S.Axis.Default}">
        <Setter Property="DockAlignment" Value="Left"/>
        <Setter Property="yConvert" Value="{Binding RelativeSource={RelativeSource AncestorType=local:Chart},Path=yConvert}"/>
    </Style>

    <Style TargetType="{x:Type local:yAxis}" BasedOn="{StaticResource S.yAxis.Default}"/>

    <Style x:Key="S.RadiusAxis.Default" TargetType="{x:Type local:RadiusAxis}" BasedOn="{StaticResource S.Axis.Default}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="AlignAlignmentCenter" Value="{Binding RelativeSource={RelativeSource AncestorType=local:Chart},Path=AlignAlignmentCenter}"/>
        <Setter Property="TextAlignmentCenter" Value="{Binding RelativeSource={RelativeSource AncestorType=local:Chart},Path=AlignmentCenter}"/>
        <Setter Property="Len" Value="{Binding RelativeSource={RelativeSource AncestorType=local:PolarChart},Path=Len}"/>    </Style>

    <Style TargetType="{x:Type local:RadiusAxis}" BasedOn="{StaticResource S.RadiusAxis.Default}"/>


    <Style x:Key="S.AngleAxis.Default" TargetType="{x:Type local:AngleAxis}" BasedOn="{StaticResource S.Axis.Default}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Len" Value="{Binding RelativeSource={RelativeSource AncestorType=local:PolarChart},Path=Len}"/>        
        <Setter Property="yAxis" Value="0,30,60,90,120,150,180,210,240,270,300,330"/>
        <Setter Property="LineStyle">
            <Setter.Value>
                <Style TargetType="Path">
                    <Setter Property="StrokeThickness" Value="1"/>
                    <Setter Property="Stroke" Value="{DynamicResource S.Brush.TextForeground.Default}"/>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:AngleAxis}" BasedOn="{StaticResource S.AngleAxis.Default}"/>

    <Style x:Key="S.RadarAxis.Default" TargetType="{x:Type local:RadarAxis}" BasedOn="{StaticResource S.AngleAxis.Default}">
        <Setter Property="yAxis" Value="{Binding RelativeSource={RelativeSource AncestorType=local:PolarChart},Path=yAxis}"/>
    </Style>

    <Style TargetType="{x:Type local:RadarAxis}" BasedOn="{StaticResource S.RadarAxis.Default}"/>
</ResourceDictionary>

