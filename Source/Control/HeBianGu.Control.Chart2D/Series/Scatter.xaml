<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:HeBianGu.Control.Chart2D" 
                    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Provider/Layer.xaml"/>
        <ResourceDictionary Source="../Marker/Marker.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Storyboard x:Key="sss">
        <DoubleAnimation Duration="00:00:03" From="0" To="1" Storyboard.TargetProperty="Opacity"/>
    </Storyboard>
    
    <Style x:Key="S.ScatterBase.Default" TargetType="{x:Type local:ScatterBase}" BasedOn="{StaticResource S.Layer.Default}">
        <Setter Property="AlignmentCenter" Value="False"/>
        <Setter Property="SplitMilliSecond" Value="-1900"/>
        <Setter Property="Timelines">
            <Setter.Value>
                <local:Timelines>
                    <DoubleAnimation Duration="00:00:02" From="0" To="1"  Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                        <DoubleAnimation.EasingFunction>
                            <ElasticEase Springiness="10" Oscillations="6"/>
                        </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                    <DoubleAnimation Duration="00:00:02" From="0" To="1"  Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                        <DoubleAnimation.EasingFunction>
                            <ElasticEase Springiness="10" Oscillations="6"/>
                        </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                </local:Timelines>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="S.Scatter.Default" TargetType="{x:Type local:Scatter}" BasedOn="{StaticResource S.ScatterBase.Default}">
        <Setter Property="MarkStyle" Value="{StaticResource S.EllipseMarker.Animation}"/>
    </Style>
    
    <Style x:Key="S.Scatter.AlignmentCenter" TargetType="{x:Type local:Scatter}" BasedOn="{StaticResource S.ScatterBase.Default}">
        <Setter Property="AlignmentCenter" Value="True"/>
    </Style>
    <Style TargetType="{x:Type local:Scatter}" BasedOn="{StaticResource S.Scatter.Default}"/>


    <Style x:Key="S.AreaScatter.Default" TargetType="{x:Type local:AreaScatter}" BasedOn="{StaticResource S.ScatterBase.Default}">
        <Setter Property="MarkStyle">
            <Setter.Value>
                <Style TargetType="local:EllipseMarker" BasedOn="{StaticResource S.EllipseMarker.Default}">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Mode=Self},Path=Rect.Height}"/>
                    <Setter Property="Fill" Value="{Binding RelativeSource={RelativeSource AncestorType=local:Layer},Path=Foreground}"/>
                    <Setter Property="Stroke" Value="{Binding RelativeSource={RelativeSource AncestorType=local:Layer},Path=Foreground}"/>
                    <Setter Property="RenderTransform" Value="{StaticResource S.TransformGroup.Default}"/>
                    <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                    <Setter Property="Rect">
                        <Setter.Value>
                            <Rect Width="15" Height="15"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Opacity" Value="0.6"/>

                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource S.Storyboard.Scale.Enlarge.1.2}"/>
                            </Trigger.EnterActions>

                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource S.Storyboard.Scale.Enlarge.1.2.Recovery}"/>
                            </Trigger.ExitActions>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="SplitMilliSecond" Value="-1990"/>
    </Style>

    <Style TargetType="{x:Type local:AreaScatter}" BasedOn="{StaticResource S.AreaScatter.Default}"/>

    
    <Style x:Key="S.Bubble.Default" TargetType="{x:Type local:Bubble}" BasedOn="{StaticResource S.ScatterBase.Default}">
        <Setter Property="MarkStyle">
            <Setter.Value>
                <Style TargetType="local:EllipseMarker" BasedOn="{StaticResource S.EllipseMarker.Default}">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Mode=Self},Path=Rect.Height}"/>
                    <Setter Property="Fill" Value="{Binding RelativeSource={RelativeSource AncestorType=local:Layer},Path=Foreground}"/>
                    <Setter Property="Stroke" Value="{Binding RelativeSource={RelativeSource AncestorType=local:Layer},Path=Foreground}"/>
                    <Setter Property="RenderTransform" Value="{StaticResource S.TransformGroup.Default}"/>
                    <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                    <Setter Property="Rect">
                        <Setter.Value>
                            <Rect Width="15" Height="15"/>
                        </Setter.Value>
                    </Setter>

                    <Setter Property="OpacityMask">
                        <Setter.Value>
                            <RadialGradientBrush GradientOrigin="0.3,0.3">
                                <GradientStop Color="Transparent" Offset="0"/>
                                <GradientStop Color="White" Offset="1"/>
                            </RadialGradientBrush>
                        </Setter.Value>
                    </Setter>
                    
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource S.Storyboard.Scale.Enlarge.1.2}"/>
                            </Trigger.EnterActions>

                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource S.Storyboard.Scale.Enlarge.1.2.Recovery}"/>
                            </Trigger.ExitActions>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:Bubble}" BasedOn="{StaticResource S.Bubble.Default}"/>

    <Style x:Key="S.PolarScatter.Default" TargetType="{x:Type local:PolarScatter}" BasedOn="{StaticResource S.ScatterBase.Default}">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="MarkStyle" Value="{StaticResource S.EllipseMarker.Default}"/>
        <Setter Property="Len" Value="{Binding RelativeSource={RelativeSource AncestorType=local:PolarChart},Path=Len}"/>
        <Setter Property="PathStyle">
            <Setter.Value>
                <Style TargetType="Path">
                    <Setter Property="StrokeThickness" Value="4"/>
                    <Setter Property="Stroke" Value="{Binding RelativeSource={RelativeSource AncestorType=local:Layer},Path=Foreground}"/> 
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type local:PolarScatter}" BasedOn="{StaticResource S.PolarScatter.Default}"/>


    <Style x:Key="S.PolarBubble.Default" TargetType="{x:Type local:PolarBubble}" BasedOn="{StaticResource S.ScatterBase.Default}">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Len" Value="{Binding RelativeSource={RelativeSource AncestorType=local:PolarChart},Path=Len}"/>
        <Setter Property="MarkStyle">
            <Setter.Value>
                <Style TargetType="local:EllipseMarker" BasedOn="{StaticResource S.EllipseMarker.Default}">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Mode=Self},Path=Rect.Height}"/>
                    <Setter Property="Fill" Value="{Binding RelativeSource={RelativeSource AncestorType=local:Layer},Path=Foreground}"/>
                    <Setter Property="Stroke" Value="{Binding RelativeSource={RelativeSource AncestorType=local:Layer},Path=Foreground}"/>
                    <Setter Property="RenderTransform" Value="{StaticResource S.TransformGroup.Default}"/>
                    <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>

                    <Setter Property="OpacityMask">
                        <Setter.Value>
                            <RadialGradientBrush GradientOrigin="0.3,0.3">
                                <GradientStop Color="Transparent" Offset="0"/>
                                <GradientStop Color="White" Offset="1"/>
                            </RadialGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Rect">
                        <Setter.Value>
                            <Rect Width="15" Height="15"/>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource S.Storyboard.Scale.Enlarge.1.2}"/>
                            </Trigger.EnterActions>

                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource S.Storyboard.Scale.Enlarge.1.2.Recovery}"/>
                            </Trigger.ExitActions>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>

    </Style>

    <Style TargetType="{x:Type local:PolarBubble}" BasedOn="{StaticResource S.PolarBubble.Default}"/>

</ResourceDictionary>

