<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:HeBianGu.Control.Chart2D" 
                    xmlns:h="QQ:908293466" 
                    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Provider/Layer.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="S.LineBase.Default" TargetType="{x:Type local:LineBase}" BasedOn="{StaticResource S.Layer.Default}">
        <Setter Property="AlignmentCenter" Value="False"/>
        <!--<Setter Property="xAxis" Value="{Binding RelativeSource={RelativeSource AncestorType=local:Series},Path=xAxis}"/>
        <Setter Property="Data" Value="{Binding RelativeSource={RelativeSource AncestorType=local:Series},Path=Data}"/>-->
        <Setter Property="PathStyle">
            <Setter.Value>
                <Style TargetType="Path">
                    <Setter Property="StrokeThickness" Value="4"/>
                    <Setter Property="Stroke" Value="{Binding RelativeSource={RelativeSource AncestorType=local:Layer},Path=Foreground}"/>
                    <Setter Property="OpacityMask">
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="1,0.5" EndPoint="0,0.5">
                                <GradientStop Color="#00000000" Offset="0"/>
                                <GradientStop Color="#00000000" Offset="1"/>
                                <GradientStop Color="#00000000" Offset="1"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <EventTrigger RoutedEvent="Loaded">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation From="1" To="0" Duration="0:0:1" Storyboard.TargetProperty="OpacityMask.(GradientBrush.GradientStops)[1].Offset"/>
                                    <DoubleAnimation From="1" To="0" Duration="0:0:0.75" BeginTime="0:0:0.5" Storyboard.TargetProperty="OpacityMask.(GradientBrush.GradientStops)[2].Offset"/>
                                    <ColorAnimation To="#FF000000" Duration="0" Storyboard.TargetProperty="OpacityMask.(GradientBrush.GradientStops)[2].Color"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="S.Line.Default" TargetType="{x:Type local:Line}" BasedOn="{StaticResource S.LineBase.Default}"/>

    <Style x:Key="S.Line.AlignmentCenter" TargetType="{x:Type local:Line}" BasedOn="{StaticResource S.Line.Default}">
        <Setter Property="AlignmentCenter" Value="True"/>
    </Style>

    <Style x:Key="S.Line.Single" TargetType="{x:Type local:Line}" BasedOn="{StaticResource S.Line.Default}">
        <Setter Property="IsUseAnimation" Value="False"/>
        <Setter Property="PathStyle">
            <Setter.Value>
                <Style TargetType="Path">
                    <Setter Property="StrokeThickness" Value="2"/>
                    <Setter Property="Stroke" Value="{Binding RelativeSource={RelativeSource AncestorType=local:Layer},Path=Foreground}"/>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:Line}" BasedOn="{StaticResource S.Line.Default}"/>


    <Style x:Key="S.Area.Default" TargetType="{x:Type local:Area}" BasedOn="{StaticResource S.LineBase.Default}">
        <Setter Property="PathStyle">
            <Setter.Value>
                <Style TargetType="Path">
                    <Setter Property="Fill" Value="{Binding RelativeSource={RelativeSource AncestorType=local:Layer},Path=Foreground}"/>
                    <Setter Property="StrokeThickness" Value="1"/>
                    <Setter Property="Stroke" Value="{Binding RelativeSource={RelativeSource AncestorType=local:Layer},Path=Foreground}"/>
                    <Setter Property="RenderTransform" Value="{StaticResource S.TransformGroup.Default}"/>
                    <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                    <Style.Triggers>
                        <EventTrigger RoutedEvent="Loaded">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation From="0" To="1" Duration="0:0:0.5" Storyboard.TargetProperty="Opacity">
                                        <!--<DoubleAnimation.EasingFunction>
                                            <QuinticEase/>
                                        </DoubleAnimation.EasingFunction>-->
                                    </DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="S.Area.Single" TargetType="{x:Type local:Area}" BasedOn="{StaticResource S.Area.Default}">
        <Setter Property="PathStyle">
            <Setter.Value>
                <Style TargetType="Path">
                    <Setter Property="Fill" Value="{Binding RelativeSource={RelativeSource AncestorType=local:Layer},Path=Foreground}"/>
                    <Setter Property="StrokeThickness" Value="1"/>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:Area}" BasedOn="{StaticResource S.Area.Default}"/>


    <Style x:Key="S.PolarLine.Default" TargetType="{x:Type local:PolarLine}" BasedOn="{StaticResource S.Line.Default}">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Len" Value="{Binding RelativeSource={RelativeSource AncestorType=local:PolarChart},Path=Len}"/>        
        <Setter Property="PathStyle">
            <Setter.Value>
                <Style TargetType="Path">
                    <Setter Property="StrokeThickness" Value="4"/>
                    <Setter Property="Stroke" Value="{Binding RelativeSource={RelativeSource AncestorType=local:Layer},Path=Foreground}"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="StrokeThickness" Value="6"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="S.PolarLine.Single" TargetType="{x:Type local:PolarLine}" BasedOn="{StaticResource S.PolarLine.Default}">
        <Setter Property="IsUseAnimation" Value="False"/>
        <Setter Property="PathStyle">
            <Setter.Value>
                <Style TargetType="Path">
                    <Setter Property="StrokeThickness" Value="2"/>
                    <Setter Property="Stroke" Value="{Binding RelativeSource={RelativeSource AncestorType=local:Layer},Path=Foreground}"/>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type local:PolarLine}" BasedOn="{StaticResource S.PolarLine.Default}"/>

    <Style x:Key="S.RadarLine.Default" TargetType="{x:Type local:RadarLine}" BasedOn="{StaticResource S.PolarLine.Default}">
        <Setter Property="PathStyle">
            <Setter.Value>
                <Style TargetType="Path">
                    <Setter Property="StrokeThickness" Value="2"/>
                    <Setter Property="Stroke" Value="{Binding RelativeSource={RelativeSource AncestorType=local:Layer},Path=Foreground}"/>
                    <Setter Property="RenderTransform" Value="{StaticResource S.TransformGroup.Default}"/>
                    <Setter Property="Fill" Value="{Binding RelativeSource={RelativeSource AncestorType=local:Layer},Path=Foreground}"/>
                    <Setter Property="Opacity" Value="0.5"/>
                    <Setter Property="OpacityMask">
                        <Setter.Value>
                            <RadialGradientBrush GradientOrigin="-0.5,-0.5">
                                <GradientStop Color="Transparent" Offset="0"/>
                                <GradientStop Color="Red" Offset="1"/>
                            </RadialGradientBrush>
                        </Setter.Value>
                    </Setter>
                    
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="StrokeThickness" Value="4"/>
                            <Setter Property="Opacity" Value="0.7"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>

        <Setter Property="SplitMilliSecond" Value="-1900"/>
        <Setter Property="Timelines">
            <Setter.Value>
                <local:Timelines>
                    <DoubleAnimation Duration="00:00:02" From="0" To="1"  Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                        <DoubleAnimation.EasingFunction>
                            <ElasticEase Springiness="9" Oscillations="5"/>
                        </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>

                    <DoubleAnimation Duration="00:00:02" From="0" To="1"  Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                        <DoubleAnimation.EasingFunction>
                            <ElasticEase Springiness="9" Oscillations="5"/>
                        </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                </local:Timelines>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type local:RadarLine}" BasedOn="{StaticResource S.RadarLine.Default}"/>

    <Style x:Key="S.SmoothLine.Default" TargetType="{x:Type local:SmoothLine}" BasedOn="{StaticResource S.LineBase.Default}"/>



    <Style TargetType="{x:Type local:SmoothLine}" BasedOn="{StaticResource S.SmoothLine.Default}"/>

    <Style x:Key="S.SmoothLine.AlignmentCenter" TargetType="{x:Type local:SmoothLine}" BasedOn="{StaticResource S.SmoothLine.Default}">
        <Setter Property="AlignmentCenter" Value="True"/>
    </Style>

    <Style TargetType="{x:Type local:StepLine}" BasedOn="{StaticResource S.LineBase.Default}"/>

    <Style TargetType="{x:Type local:Candlestick}" BasedOn="{StaticResource S.LineBase.Default}">
        <Setter Property="Foreground" Value="Red"/>
        <Setter Property="ForegroundContrarty" Value="Green"/>
        <Setter Property="AlignmentCenter" Value="True"/>
        <Setter Property="PathStyle">
            <Setter.Value>
                <Style TargetType="Path">
                    <Setter Property="StrokeThickness" Value="1"/>
                    <Setter Property="Opacity" Value="0.85"/>
                    <Setter Property="Stroke" Value="{Binding RelativeSource={RelativeSource AncestorType=local:Layer},Path=Foreground}"/>
                    <Setter Property="RenderTransform" Value="{StaticResource S.TransformGroup.Default}"/>
                    <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="1"/>
                            <Setter Property="StrokeThickness" Value="2"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="SplitMilliSecond" Value="-1950"/>
        <Setter Property="Timelines">
            <Setter.Value>
                <local:Timelines>
                    <DoubleAnimation Duration="00:00:02" From="0" To="1"  Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                        <DoubleAnimation.EasingFunction>
                            <ElasticEase Springiness="10" Oscillations="6"/>
                        </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                </local:Timelines>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>

