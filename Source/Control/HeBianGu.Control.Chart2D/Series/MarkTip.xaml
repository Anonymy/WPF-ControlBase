<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:HeBianGu.Control.Chart2D" 
                    xmlns:h="QQ:908293466"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Provider/Layer.xaml"/>
        <ResourceDictionary Source="../Marker/Marker.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="S.MarkTip.Default" TargetType="{x:Type local:MarkTip}" BasedOn="{StaticResource S.Layer.Default}">
        <Setter Property="Data" Value="{Binding RelativeSource={RelativeSource AncestorType=local:Series},Path=yDatas}"/>
        <Setter Property="xAxis" Value="{Binding RelativeSource={RelativeSource AncestorType=local:Series},Path=xDatas}"/>
        <Setter Property="MarkStyle">
            <Setter.Value>
                <Style TargetType="local:EllipseMarker" BasedOn="{StaticResource S.EllipseMarker.Default}">
                    <Setter Property="StrokeThickness" Value="1"/>
                    <Setter Property="Stroke" Value="{DynamicResource S.Brush.Orange.Notice}"/>
                    <Setter Property="Fill" Value="{DynamicResource S.Brush.Orange.Notice}"/>
                    <Setter Property="Rect">
                        <Setter.Value>
                            <Rect Width="15" Height="15"/>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="MarkValueType" Value="Max"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource S.Brush.Green.Notice}"/>
        <Setter Property="PathStyle">
            <Setter.Value>
                <Style TargetType="Path">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Setter Property="StrokeThickness" Value="1"/>
                    <Setter Property="StrokeDashArray" Value="5 5"/>
                    <Setter Property="IsHitTestVisible" Value="False"/>
                    <Setter Property="Stroke" Value="{Binding RelativeSource={RelativeSource AncestorType=local:FlagTip},Path=Foreground}"/>
                </Style>
            </Setter.Value>
        </Setter>

        <Setter Property="LabelStyle">
            <Setter.Value>
                <Style TargetType="Label">
                    <Setter Property="Width" Value="35"/>
                    <Setter Property="Opacity" Value="0.9"/>
                    <Setter Property="Height" Value="50"/>
                    <Setter Property="Foreground" Value="{DynamicResource S.Brush.TextForeground.Default}"/>
                    <Setter Property="h:Cattach.Behaviors">
                        <Setter.Value>
                            <h:Behaviors>
                                <h:ElementDragStateBehavior/>
                            </h:Behaviors>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Margin" Value="-17.5,-45,0,0"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Label">
                                <Grid> 
                                    <Polygon Points="5,0 10,10 5,20 0,10" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{Binding RelativeSource={RelativeSource AncestorType=local:MarkTip},Path=Foreground}"/>

                                    <TextBlock  Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Content}" Foreground="{TemplateBinding Foreground}" Margin="-50,-40,-50,0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <!--<Style.Triggers>
                        <DataTrigger Binding="{Binding Path=(h:ElementDragStateBehavior.IsDragging)}" Value="True">
                            <Setter Property="Opacity" Value="0.5"/>
                        </DataTrigger>
                    </Style.Triggers>-->
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:MarkTip}" BasedOn="{StaticResource S.MarkTip.Default}"/>


</ResourceDictionary>

