<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:HeBianGu.General.WpfControlLib"
    xmlns:h="QQ:908293466">

    <Style x:Key="S.GitTopContainer.Default" TargetType="{x:Type local:GitTopContainer}">
        <Setter Property="CoverVisibility" Value="Collapsed"/>
        <Setter Property="HeaderHeight" Value="{DynamicResource S.Window.Row.Height}"/>
        <Setter Property="Background" Value="{DynamicResource S.Brush.Accent}"/>
        <Setter Property="DockPanel.Dock" Value="Top"/>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListBoxItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <ContentPresenter/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:GitTopContainer}">
                    <Grid Background="{TemplateBinding Background}">
                        <DockPanel>
                            <Border Height="{TemplateBinding HeaderHeight}" Background="{TemplateBinding Background}" DockPanel.Dock="{TemplateBinding DockPanel.Dock}"/>
                            <ContentPresenter ContentSource="CenterContent"/>
                        </DockPanel>

                        <Border x:Name="PART_COVER" Visibility="{TemplateBinding CoverVisibility}" Grid.RowSpan="2" Background="{DynamicResource S.Brush.Dialog.Cover}"/>

                        <ItemsPresenter/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <UniformGrid Columns="4"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="S.GitTopContainer.Toggle" TargetType="{x:Type local:GitTopContainer}" BasedOn="{StaticResource S.GitTopContainer.Default}">
        <Setter Property="h:Cattach.FIconSize" Value="50"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:GitTopContainer}">
                    <Grid Background="{TemplateBinding Background}">
                        <DockPanel>
                            <Border Height="{TemplateBinding HeaderHeight}" Background="{TemplateBinding Background}" DockPanel.Dock="Top"/>
                            <ContentPresenter ContentSource="CenterContent"/>
                        </DockPanel>

                        <ToggleButton x:Name="tg" HorizontalAlignment="Right" VerticalAlignment="Top" 
                                      Content="&#xe639;" h:Cattach.FIcon="&#xe635;"
                                      h:Cattach.FIconSize="{TemplateBinding h:Cattach.FIconSize}"  
                                      Style="{DynamicResource S.ToggleButton.DoubleFIconChecked}">
                            <h:Interaction.Triggers>
                                <h:EventTrigger EventName="MouseEnter">
                                    <h:ChangePropertyAction PropertyName="IsChecked" Value="true"/>
                                </h:EventTrigger>
                            </h:Interaction.Triggers>
                        </ToggleButton>

                        <Border x:Name="PART_COVER" Visibility="{TemplateBinding CoverVisibility}" Grid.RowSpan="2" Background="{DynamicResource S.Brush.Dialog.Cover}"/>

                        <ItemsPresenter Visibility="{Binding ElementName=tg,Path=IsChecked,Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:GitTopContainer}" BasedOn="{StaticResource S.GitTopContainer.Default}"/>

    <Style x:Key="S.ToggleButton.GitTopItem" TargetType="ToggleButton">
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Height" Value="60"/>
        <Setter Property="IsChecked" Value="False"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BorderBrush" Value="{DynamicResource S.Brush.Accent.MouseOver}"/>
        <Setter Property="Background" Value="{DynamicResource S.Brush.Accent}"/>
        <Setter Property="Foreground" Value="{DynamicResource S.Brush.TextForeground.White}"/>
        <Setter Property="h:Cattach.FIconSize" Value="{DynamicResource S.FIcon.Size.Small}"/>
        <Setter Property="h:Cattach.FIconMargin" Value="10,0"/>
        <Setter Property="h:Cattach.FIcon" Value="&#xe63a;"/>
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="h:Cattach.CheckedForegroundBrush" Value="{DynamicResource S.Brush.Accent}"/>
        <Setter Property="h:Cattach.CheckedBackgroundBrush" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Border x:Name="border" Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                                Grid.ColumnSpan="2" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ContentPresenter/>
                        </Border>
                        
                        <TextBlock Grid.Column="1" x:Name="FIcon" HorizontalAlignment="Right"
                                   FontSize="{Binding Path=(h:Cattach.FIconSize),RelativeSource={RelativeSource TemplatedParent}}"
                                   Text="{TemplateBinding h:Cattach.FIcon}" 
                                   h:Cattach.AllowsAnimation="{TemplateBinding IsChecked}"
                                   Foreground="{TemplateBinding Foreground}"
                                   Style="{DynamicResource S.TextBlock.FIcon}"
                                   Margin="{TemplateBinding h:Cattach.FIconMargin}"/>
                    </Grid>
                    <!--z触发器-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="0.8"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity" Value="0.7"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{Binding Path=(h:Cattach.CheckedBackgroundBrush),RelativeSource={RelativeSource TemplatedParent}}" TargetName="border"/>
                            <Setter Property="Foreground" Value="{DynamicResource S.Brush.TextForeground.Default}"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="{StaticResource S.Opacity.Disable}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="S.GitTopItem.Default" TargetType="{x:Type local:GitTopItem}">
        <Setter Property="h:Cattach.CheckedBackgroundBrush" Value="Transparent"/>
        <Setter Property="Background" Value="{DynamicResource S.Brush.Accent}"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="DockPanel.Dock" Value="{Binding RelativeSource={RelativeSource AncestorType=local:GitTopContainer},Path=(DockPanel.Dock)}"/>
        <Setter Property="HeaderHeight" Value="{Binding RelativeSource={RelativeSource AncestorType=local:GitTopContainer},Path=HeaderHeight}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:GitTopItem}">
                    <Grid>
                        <DockPanel x:Name="sp_scene" Background="{DynamicResource S.Brush.TextBackground.Default}" Visibility="Collapsed">
                            <Border Height="{TemplateBinding HeaderHeight}" DockPanel.Dock="{TemplateBinding DockPanel.Dock}"/>
                            <ContentPresenter/>
                        </DockPanel>

                        <ToggleButton x:Name="tb_scene" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Style="{StaticResource S.ToggleButton.GitTopItem}" Height="{TemplateBinding HeaderHeight}"
                                      Background="{TemplateBinding Background}" h:Cattach.CheckedBackgroundBrush="{TemplateBinding h:Cattach.CheckedBackgroundBrush}"
                                      IsChecked="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem},Path=IsSelected}" Content="{TemplateBinding HeaderContent}" ContentTemplate="{TemplateBinding HeaderTemplate}">
                            <ToggleButton.Triggers>
                                <EventTrigger  RoutedEvent="ToggleButton.Checked">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.Target="{Binding RelativeSource={RelativeSource AncestorType=local:GitTopContainer}}" Storyboard.TargetProperty="CoverVisibility">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>

                                            <!--<DoubleAnimation From="0.5" To="1" Duration="00:00:00.5" Storyboard.Target="{Binding ElementName=bd_cover}" Storyboard.TargetProperty="Opacity">
                                                <DoubleAnimation.EasingFunction>
                                                    <QuinticEase/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>-->

                                            <ObjectAnimationUsingKeyFrames Storyboard.Target="{Binding ElementName=sp_scene}" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>

                                            <DoubleAnimation From="0.5" To="1" Duration="00:00:00.5" Storyboard.Target="{Binding ElementName=sp_scene}" Storyboard.TargetProperty="Opacity">
                                                <DoubleAnimation.EasingFunction>
                                                    <QuinticEase/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>

                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger  RoutedEvent="ToggleButton.Unchecked">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.Target="{Binding RelativeSource={RelativeSource AncestorType=local:GitTopContainer}}" Storyboard.TargetProperty="CoverVisibility">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>

                                            <!--<DoubleAnimation From="1" To="0"  Duration="00:00:00.5"  Storyboard.Target="{Binding ElementName=bd_cover}" Storyboard.TargetProperty="Opacity">
                                                <DoubleAnimation.EasingFunction>
                                                    <QuinticEase/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>-->

                                            <ObjectAnimationUsingKeyFrames Storyboard.Target="{Binding ElementName=sp_scene}" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00.5">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>

                                            <DoubleAnimation From="1" To="0"  Duration="00:00:00.5"  Storyboard.Target="{Binding ElementName=sp_scene}" Storyboard.TargetProperty="Opacity">
                                                <DoubleAnimation.EasingFunction>
                                                    <QuinticEase/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>

                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </ToggleButton.Triggers>
                        </ToggleButton>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:GitTopItem}" BasedOn="{StaticResource S.GitTopItem.Default}"/>

    <Style x:Key="S.GitTopItem.Circle" TargetType="{x:Type local:GitTopItem}">
        <Setter Property="h:Cattach.CheckedBackgroundBrush" Value="Transparent"/>
        <Setter Property="Background" Value="{DynamicResource S.Brush.Accent}"/>
        <Setter Property="HeaderHeight" Value="{Binding RelativeSource={RelativeSource AncestorType=local:GitTopContainer},Path=HeaderHeight}"/>
        <Setter Property="h:Cattach.VisibleActions">
            <Setter.Value>
                <h:ActionCollection>
                    <h:ScaleAction/>
                </h:ActionCollection>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:GitTopItem}">
                    <Grid>
                        <Grid x:Name="sp_scene" Visibility="Collapsed" h:Cattach.IsVisible="{Binding ElementName=tb_scene,Path=IsChecked}" h:Cattach.VisibleActions="{TemplateBinding h:Cattach.VisibleActions}">
                            <ContentPresenter/>
                        </Grid>
                        
                        <ToggleButton x:Name="tb_scene" Style="{DynamicResource S.ToggleButton.Accent}"
                                      h:Cattach.FIconSize="100"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      IsChecked="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem},Path=IsSelected}" 
                                      Content="{TemplateBinding HeaderContent}" ContentTemplate="{TemplateBinding HeaderTemplate}">
                            <ToggleButton.Triggers>
                                <EventTrigger  RoutedEvent="ToggleButton.Checked">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.Target="{Binding RelativeSource={RelativeSource AncestorType=local:GitTopContainer}}" Storyboard.TargetProperty="CoverVisibility">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>

                                            <ObjectAnimationUsingKeyFrames Storyboard.Target="{Binding ElementName=sp_scene}" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger  RoutedEvent="ToggleButton.Unchecked">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.Target="{Binding RelativeSource={RelativeSource AncestorType=local:GitTopContainer}}" Storyboard.TargetProperty="CoverVisibility">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>

                                            <ObjectAnimationUsingKeyFrames Storyboard.Target="{Binding ElementName=sp_scene}" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:01">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </ToggleButton.Triggers>
                        </ToggleButton>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
