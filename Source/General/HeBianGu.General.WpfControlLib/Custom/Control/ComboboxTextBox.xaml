<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:HeBianGu.General.WpfControlLib"
    xmlns:h="QQ:908293466">

    <!--抬头在外部样式-->
    <ControlTemplate x:Key="S.ComboboxTextBox.Tempalte.Single" TargetType="{x:Type local:ComboboxTextBox}">
        <Grid x:Name="PART_Root">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="25" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="25" />
                </Grid.ColumnDefinitions>

                <Border x:Name="Bg" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                CornerRadius="{TemplateBinding h:Cattach.CornerRadius}"
                                BorderBrush="{TemplateBinding BorderBrush}" Grid.Column="0" Grid.ColumnSpan="4"
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" />

                <!--主内容区域-->
                <Grid Grid.Column="0" x:Name="ContentSite" Margin="10 0" >
                    <ContentPresenter x:Name="PART_SelectedItem" 
                                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                  Content="{TemplateBinding SelectionBoxItem}" 
                                                  ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                                  HorizontalAlignment="Stretch" Margin="2,0,2,0" 
                                                  IsHitTestVisible="False" 
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                </Grid>



                <!--下拉按钮-->
                <ToggleButton x:Name="PART_DropDownToggle" IsTabStop="False" Style="{DynamicResource ComboToggleButton}" h:Cattach.FIconSize="15"
                                         IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                         h:Cattach.FIconMargin="{TemplateBinding h:Cattach.FIconMargin}"
                                         Grid.Column="0"  IsEnabled="{Binding Path=IsReadOnly,RelativeSource={RelativeSource TemplatedParent},
                                         Converter={x:Static h:XConverter.TrueToFalseConverter},Mode=OneWay}"
                                        Foreground="{TemplateBinding Foreground}" Grid.ColumnSpan="2"
                                         Background="{TemplateBinding h:Cattach.FocusBackground}"/>
                <!--水印-->
                <Border Grid.Column="2">
                    <TextBlock x:Name="Message"  Padding="0" Visibility="Collapsed" 
                                       Text="{TemplateBinding h:Cattach.Watermark}" 
                                       Foreground="{TemplateBinding Foreground}" IsHitTestVisible="False" 
                                       Opacity="{DynamicResource S.Opacity.Watermark}" HorizontalAlignment="Left" 
                                       TextAlignment="Center" 
                                       VerticalAlignment="Center" Margin="5,2,5,2" />
                </Border>

                <!--文本编辑-->
                <TextBox  x:Name="PART_EditableTextBox" Grid.Column="2"
                                          Style="{DynamicResource EditableTextBoxStyle}" 
                                          HorizontalAlignment="Stretch" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          IsHitTestVisible="True"
                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          IsReadOnly="{TemplateBinding IsReadOnly}" 
                                          FontFamily="{TemplateBinding FontFamily}" 
                                          Foreground="{TemplateBinding Foreground}"
                                          Background="Transparent"
                                          Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=InputText,Mode=TwoWay}" 
                                          FontSize="{TemplateBinding FontSize}" />


                <!--附加内容区域-->

                <Border  Panel.ZIndex="2" Grid.Column="3" 
                                    VerticalAlignment="Center" HorizontalAlignment="Center" >
                    <ContentControl VerticalAlignment="Center" x:Name="PART_AttachContent" Foreground="{DynamicResource S.Brush.TextForeground.Assist}"
                                                VerticalContentAlignment="Center" 
                                                Template="{TemplateBinding h:Cattach.AttachContent}" />
                </Border>
            </Grid>

            <!--弹出下拉控件-->
            <Popup x:Name="PART_Popup"
                               AllowsTransparency="True" 
                               Focusable="False" VerticalOffset="2"
                               IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                               Placement="Bottom">

                <Grid Width="{Binding  ActualWidth,RelativeSource={RelativeSource TemplatedParent}}"
                                  MaxHeight="{Binding MaxDropDownHeight, RelativeSource={RelativeSource TemplatedParent}}">



                    <Grid x:Name="grid_auto" Height="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Top" Margin="0,5,0,0">
                        <!--<Path Data="{TemplateBinding h:Cattach.Path}" Stroke="{DynamicResource S.Brush.Accent}" 
                          Fill="{DynamicResource S.Brush.TextBackground.Default}" StrokeThickness="1" Height="{Binding ElementName=grid_auto,Path=ActualHeight}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Stretch="Fill"/>-->

                        <Border Background="{DynamicResource S.Brush.TextBackground.Default}" BorderBrush="{DynamicResource S.Brush.TextBorderBrush.Default}" BorderThickness="1" CornerRadius="{DynamicResource S.Window.Item.CornerRadius}">
                        </Border>
                        <Polygon  HorizontalAlignment="Right" Fill="{DynamicResource S.Brush.Accent}" Stroke="{DynamicResource S.Brush.TextBorderBrush.Default}" Points="0,5 5,0 10,5 0,5" Margin="0,-5,8,0" FillRule="Nonzero"/>

                        <ScrollViewer x:Name="DropDownScrollViewer" BorderThickness="0" VerticalScrollBarVisibility="Auto">
                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained"  Margin="2,2,2,0" />
                        </ScrollViewer>
                    </Grid>


                </Grid>
            </Popup>
        </Grid>
        <!--触发器-->
        <ControlTemplate.Triggers>

            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="PART_Root" Property="Opacity" Value="{DynamicResource S.Opacity.Disable}"></Setter>
            </Trigger>

            <!--1.显示水印-->
            <DataTrigger Binding="{Binding ElementName=PART_EditableTextBox, Path=Text}" Value="">
                <Setter TargetName="Message" Property="Visibility" Value="Visible" />
            </DataTrigger>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{Binding Path=(h:Cattach.MouseOverBorderBrush),RelativeSource={RelativeSource Self}}"/>
                <Setter  Property="Foreground" TargetName="PART_AttachContent" Value="{Binding Path=(h:Cattach.MouseOverBorderBrush),RelativeSource={RelativeSource Self}}"/>
                <Setter  Property="Foreground" TargetName="PART_DropDownToggle" Value="{Binding Path=(h:Cattach.MouseOverBorderBrush),RelativeSource={RelativeSource Self}}"/>
                <Setter  Property="Foreground" TargetName="Message" Value="{Binding Path=(h:Cattach.MouseOverBorderBrush),RelativeSource={RelativeSource Self}}"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter  Property="BorderBrush"  Value="{Binding Path=(h:Cattach.FocusBorderBrush),RelativeSource={RelativeSource Self}}"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter  Property="BorderBrush" Value="{Binding Path=(h:Cattach.FocusBorderBrush),RelativeSource={RelativeSource Self}}"/>
                <Setter  Property="Foreground" TargetName="PART_AttachContent" Value="{DynamicResource S.Brush.Accent}"/>
                <Setter  Property="Foreground" TargetName="Message" Value="{DynamicResource S.Brush.Accent}"/>
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="S.ComboboxTextBox.Default" TargetType="{x:Type local:ComboboxTextBox}">
        <Setter Property="Height" Value="{DynamicResource S.Window.Item.Height}" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Margin" Value="2,0" />
        <Setter Property="h:Cattach.FIconMargin" Value="0,0,7,0" />
        <Setter Property="Foreground" Value="{DynamicResource S.Brush.TextForeground.Default}" />
        <Setter Property="Background" Value="{DynamicResource S.Brush.TextBackground.Default}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource S.Brush.TextBorderBrush.Default}" />
        <Setter Property="h:Cattach.FocusBackground" Value="{DynamicResource S.Brush.Dark.4}" />
        <Setter Property="h:Cattach.FocusBorderBrush" Value="{DynamicResource S.Brush.Accent}" />
        <Setter Property="h:Cattach.MouseOverBorderBrush" Value="{DynamicResource S.Brush.Accent.MouseOver}" />
        <Setter Property="h:Cattach.CornerRadius" Value="{DynamicResource S.Window.Item.CornerRadius}" />
        <Setter Property="FontFamily" Value="{DynamicResource  S.FontFamily.Default}" />
        <Setter Property="FontSize" Value="{DynamicResource S.FontSize.Default}" />
        <Setter Property="ItemContainerStyle" Value="{DynamicResource S.ComboBoxItem.Default}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="MaxDropDownHeight" Value="400" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
        <Setter Property="RenderTransform" Value="{StaticResource S.TransformGroup.Default}"/>
        <!--<Setter Property="h:Cattach.Path" Value="{StaticResource S.Geometry.Rectangle.Rounded.TopRight}"/>-->
        <Setter Property="Template" Value="{StaticResource S.ComboboxTextBox.Tempalte.Single}"/>
    </Style>

    <!--Command="h:Cattach.ClearTextCommand" 
                                   CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type local:ComboboxTextBox}}}"-->
    <!--TextBox包含清除Text按钮的样式-->
    <Style TargetType="{x:Type local:ComboboxTextBox}" x:Key="S.ComboboxTextBox.Clear" BasedOn="{StaticResource S.ComboboxTextBox.Default}">
        <Setter Property="h:Cattach.AttachContent">
            <Setter.Value>
                <ControlTemplate>
                    <local:FButton FIcon="&#xe6f4;" 
                                   Style="{DynamicResource S.FButton.Style.Transparent}" 
                                   IsTabStop="False" FIconMargin="0"
                                   h:Cattach.IsClearTextButtonBehaviorEnabled="True" 
                                
                                   Margin="1,3,1,4" FIconSize="13" 
                                   Foreground="{TemplateBinding Foreground}" 
                                   Cursor="Arrow">

                        <h:Interaction.Triggers>
                            <h:EventTrigger EventName="Click">
                                <h:ChangePropertyAction PropertyName="InputText" Value="" TargetObject="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type local:ComboboxTextBox}}}"/>
                            </h:EventTrigger>
                        </h:Interaction.Triggers>
                    </local:FButton>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:ComboboxTextBox}" BasedOn="{StaticResource S.ComboboxTextBox.Default}"/>
</ResourceDictionary>
