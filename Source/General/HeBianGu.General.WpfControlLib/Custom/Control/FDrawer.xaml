<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:HeBianGu.General.WpfControlLib"
    xmlns:h="QQ:908293466">

    <Style x:Key="S.FDrawer.Default" TargetType="{x:Type local:FDrawer}">
        <Setter Property="ClipToBounds" Value="False"/>
        <Setter Property="Background" Value="{DynamicResource S.Brush.TextBackground.Default}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="h:Cattach.FIconMargin" Value="0"/>
        <Setter Property="h:Cattach.FIcon" Value="&#xe71b;"/> 
        <Setter Property="h:Cattach.VisibleActions">
            <Setter.Value>
                <h:ActionCollection>
                    <h:OpacityAction/>
                </h:ActionCollection>
            </Setter.Value>
        </Setter>
        <Setter Property="HorizontalContentAlignment" Value="Right"/>
        <Setter Property="VerticalContentAlignment" Value="Bottom"/>
        <Setter Property="HorizontalOpenContentAlignment" Value="{Binding RelativeSource={RelativeSource Mode=Self},Path=HorizontalContentAlignment}"/>
        <Setter Property="VerticalOpenContentAlignment"  Value="{Binding RelativeSource={RelativeSource Mode=Self},Path=VerticalContentAlignment}"/>
        <Setter Property="OpenContent">
            <Setter.Value>
                <ControlTemplate>
                    <local:FButton Style="{DynamicResource S.FButton.Style.Transparent}"  FIcon="&#xe71b;"
                               HorizontalAlignment="{Binding RelativeSource={RelativeSource AncestorType=local:FDrawer},Path=HorizontalOpenContentAlignment}"
                               VerticalAlignment="{Binding RelativeSource={RelativeSource AncestorType=local:FDrawer},Path=VerticalOpenContentAlignment}"
                               Command="{x:Static h:CommandService.Open}" Margin="5"/>
                </ControlTemplate>

                <!--<local:FButton Style="{DynamicResource S.FButton.Style.Transparent}" HorizontalAlignment="Right" FIcon="&#xe69f;"
                            >
                    <h:Interaction.Triggers>
                        <h:EventTrigger EventName="MouseEnter">
                            <h:InvokeCommandAction Command="{x:Static h:CommandService.ActionVisibleCommand}"
                               CommandParameter="{Binding ElementName=grid_center}"/>
                        </h:EventTrigger>
                    </h:Interaction.Triggers>
                </local:FButton>-->
            </Setter.Value>
        </Setter>

        <Setter Property="CloseContent">
            <Setter.Value>
                <ControlTemplate>
                    <local:FButton Style="{DynamicResource S.FButton.Close}"
                               HorizontalAlignment="{Binding RelativeSource={RelativeSource AncestorType=local:FDrawer},Path=HorizontalContentAlignment}"
                               VerticalAlignment="{Binding RelativeSource={RelativeSource AncestorType=local:FDrawer},Path=VerticalContentAlignment}"
                               Command="{x:Static h:CommandService.Close}" Margin="5"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:FDrawer}">
                    <Grid>
                        <!--显示部分-->
                        <Grid x:Name="PART_Show" h:Cattach.VisibleActions="{TemplateBinding h:Cattach.VisibleActions}" h:Cattach.IsVisible="False">
                            <ContentControl Template="{TemplateBinding OpenContent}"/>
                        </Grid>

                        <Grid x:Name="PART_Center" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" h:Cattach.VisibleActions="{TemplateBinding h:Cattach.VisibleActions}">
                            <Border Background="Transparent" BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"/>

                            <GroupBox Header="{TemplateBinding Header}" Background="{TemplateBinding Background}" Style="{DynamicResource S.GroupBox.Default.WithClose}" local:ShadowAssist.ShadowDepth="{StaticResource S.EffectShadow.2}">
                                <!--内容区域-->
                                <ContentPresenter/>
                            </GroupBox>

                            <!--隐藏部分-->
                            <!--<ContentPresenter ContentSource="CloseContent"/>-->
                            <!--<ContentControl Template="{TemplateBinding CloseContent}"/>-->

                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="S.FDrawer.Single" TargetType="{x:Type local:FDrawer}">
        <Setter Property="ClipToBounds" Value="True"/>
        <!--<Setter Property="Background" Value="Transparent"/>-->
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="h:Cattach.VisibleActions">
            <Setter.Value>
                <h:ActionCollection>
                    <h:OpacityAction/>
                </h:ActionCollection>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:FDrawer}">
                    <Grid>
                        <!--显示部分-->
                        <Grid x:Name="PART_Show" h:Cattach.VisibleActions="{TemplateBinding h:Cattach.VisibleActions}" h:Cattach.IsVisible="False">
                            <ContentControl Template="{TemplateBinding OpenContent}"/>
                        </Grid>

                        <Grid x:Name="PART_Center" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" h:Cattach.VisibleActions="{TemplateBinding h:Cattach.VisibleActions}">
                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"/>

                            <!--内容区域-->
                            <ContentPresenter/>

                            <!--隐藏部分-->
                            <!--<ContentPresenter ContentSource="CloseContent"/>-->
                            <ContentControl Template="{TemplateBinding CloseContent}"/>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="HorizontalContentAlignment" Value="Right"/>
        <Setter Property="VerticalContentAlignment" Value="Bottom"/>
        <Setter Property="OpenContent">
            <Setter.Value>
                <ControlTemplate>
                    <local:FButton Style="{DynamicResource S.FButton.Style.Transparent}"  FIcon="&#xe71b;"
                               HorizontalAlignment="{Binding RelativeSource={RelativeSource AncestorType=local:FDrawer},Path=HorizontalOpenContentAlignment}"
                               VerticalAlignment="{Binding RelativeSource={RelativeSource AncestorType=local:FDrawer},Path=VerticalOpenContentAlignment}"
                               Command="{x:Static h:CommandService.Open}" Margin="5"/>
                </ControlTemplate>

                <!--<local:FButton Style="{DynamicResource S.FButton.Style.Transparent}" HorizontalAlignment="Right" FIcon="&#xe69f;"
                            >
                    <h:Interaction.Triggers>
                        <h:EventTrigger EventName="MouseEnter">
                            <h:InvokeCommandAction Command="{x:Static h:CommandService.ActionVisibleCommand}"
                               CommandParameter="{Binding ElementName=grid_center}"/>
                        </h:EventTrigger>
                    </h:Interaction.Triggers>
                </local:FButton>-->
            </Setter.Value>
        </Setter>

        <Setter Property="CloseContent">
            <Setter.Value>
                <ControlTemplate>
                    <local:FButton Style="{DynamicResource S.FButton.Close}"
                               HorizontalAlignment="{Binding RelativeSource={RelativeSource AncestorType=local:FDrawer},Path=HorizontalContentAlignment}"
                               VerticalAlignment="{Binding RelativeSource={RelativeSource AncestorType=local:FDrawer},Path=VerticalContentAlignment}"
                               Command="{x:Static h:CommandService.Close}" Margin="5"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="S.FDrawer.Geomotry.Default" TargetType="{x:Type local:FDrawer}" BasedOn="{StaticResource S.FDrawer.Default}">
        <Setter Property="h:Cattach.VisibleActions">
            <Setter.Value>
                <h:ActionCollection>
                    <h:ScaleGeomotryAction PointOriginType="MousePosition"/>
                </h:ActionCollection>
            </Setter.Value>
        </Setter>
        <Setter Property="UseShowAction" Value="False"/>
    </Style>

    <Style x:Key="S.FDrawer.Center.Default" TargetType="{x:Type local:FDrawer}" BasedOn="{StaticResource S.FDrawer.Default}">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalOpenContentAlignment" Value="Center"/>
        <Setter Property="VerticalOpenContentAlignment" Value="Center"/>
        <Setter Property="ClipToBounds" Value="False"/>
    </Style>

    
    <Style x:Key="S.FDrawer.Right.Default" TargetType="{x:Type local:FDrawer}" BasedOn="{StaticResource S.FDrawer.Default}">
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="HorizontalOpenContentAlignment" Value="Right"/>
        <Setter Property="VerticalOpenContentAlignment" Value="Center"/> 
        <Setter Property="OpenContent">
            <Setter.Value>
                <ControlTemplate>
                    <local:FButton Style="{DynamicResource S.FButton.Style.MouseOverOpacity}"  
                                   FIcon="{Binding RelativeSource={RelativeSource AncestorType=local:FDrawer},Path=(h:Cattach.FIcon)}"
                               Margin="{Binding RelativeSource={RelativeSource AncestorType=local:FDrawer},Path=(h:Cattach.FIconMargin)}"
                               HorizontalAlignment="{Binding RelativeSource={RelativeSource AncestorType=local:FDrawer},Path=HorizontalOpenContentAlignment}"
                               VerticalAlignment="{Binding RelativeSource={RelativeSource AncestorType=local:FDrawer},Path=VerticalOpenContentAlignment}"
                               Command="{x:Static h:CommandService.Open}"/>
                </ControlTemplate>
  
                <!--<local:FButton Style="{DynamicResource S.FButton.Style.Transparent}" HorizontalAlignment="Right" FIcon="&#xe69f;"
                            >
                    <h:Interaction.Triggers>
                        <h:EventTrigger EventName="MouseEnter">
                            <h:InvokeCommandAction Command="{x:Static h:CommandService.ActionVisibleCommand}"
                               CommandParameter="{Binding ElementName=grid_center}"/>
                        </h:EventTrigger>
                    </h:Interaction.Triggers>
                </local:FButton>-->
            </Setter.Value>
        </Setter>
        <Setter Property="CloseContent">
            <Setter.Value>
                <ControlTemplate>
                    <local:FButton Style="{DynamicResource S.FButton.Close}" HorizontalAlignment="Left" VerticalAlignment="Center"
                               Command="{x:Static h:CommandService.Close}" Margin="0,0,0,0"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="S.FDrawer.Right.Single" TargetType="{x:Type local:FDrawer}" BasedOn="{StaticResource  S.FDrawer.Single}">
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="HorizontalOpenContentAlignment" Value="Right"/>
        <Setter Property="VerticalOpenContentAlignment" Value="Center"/>
        <Setter Property="OpenContent">
            <Setter.Value>
                <ControlTemplate>
                    <local:FButton Style="{DynamicResource S.FButton.Style.MouseOverOpacity}"  
                                   FIcon="{Binding RelativeSource={RelativeSource AncestorType=local:FDrawer},Path=(h:Cattach.FIcon)}"
                               Margin="{Binding RelativeSource={RelativeSource AncestorType=local:FDrawer},Path=(h:Cattach.FIconMargin)}"
                               HorizontalAlignment="{Binding RelativeSource={RelativeSource AncestorType=local:FDrawer},Path=HorizontalOpenContentAlignment}"
                               VerticalAlignment="{Binding RelativeSource={RelativeSource AncestorType=local:FDrawer},Path=VerticalOpenContentAlignment}"
                               Command="{x:Static h:CommandService.Open}"/>
                </ControlTemplate>

                <!--<local:FButton Style="{DynamicResource S.FButton.Style.Transparent}" HorizontalAlignment="Right" FIcon="&#xe69f;"
                            >
                    <h:Interaction.Triggers>
                        <h:EventTrigger EventName="MouseEnter">
                            <h:InvokeCommandAction Command="{x:Static h:CommandService.ActionVisibleCommand}"
                               CommandParameter="{Binding ElementName=grid_center}"/>
                        </h:EventTrigger>
                    </h:Interaction.Triggers>
                </local:FButton>-->
            </Setter.Value>
        </Setter>
        <Setter Property="CloseContent">
            <Setter.Value>
                <ControlTemplate>
                    <local:FButton Style="{DynamicResource S.FButton.Close}"  HorizontalAlignment="Left" VerticalAlignment="Center"
                               Command="{x:Static h:CommandService.Close}" Margin="0,0,0,0"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

   

    <Style x:Key="S.FDrawer.Left.Default" TargetType="{x:Type local:FDrawer}" BasedOn="{StaticResource S.FDrawer.Default}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="HorizontalOpenContentAlignment" Value="Left"/>
        <Setter Property="VerticalOpenContentAlignment" Value="Center"/>
        <Setter Property="OpenContent">
            <Setter.Value>
                <ControlTemplate>
                    <local:FButton Style="{DynamicResource S.FButton.Style.MouseOverOpacity}"
                                   FIcon="{Binding RelativeSource={RelativeSource AncestorType=local:FDrawer},Path=(h:Cattach.FIcon)}"
                               Margin="{Binding RelativeSource={RelativeSource AncestorType=local:FDrawer},Path=(h:Cattach.FIconMargin)}"
                               HorizontalAlignment="{Binding RelativeSource={RelativeSource AncestorType=local:FDrawer},Path=HorizontalOpenContentAlignment}"
                               VerticalAlignment="{Binding RelativeSource={RelativeSource AncestorType=local:FDrawer},Path=VerticalOpenContentAlignment}"
                               Command="{x:Static h:CommandService.Open}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="CloseContent">
            <Setter.Value>
                <ControlTemplate>
                    <local:FButton Style="{DynamicResource S.FButton.Close}"
                               HorizontalAlignment="{Binding RelativeSource={RelativeSource AncestorType=local:FDrawer},Path=HorizontalOpenContentAlignment}"
                               VerticalAlignment="{Binding RelativeSource={RelativeSource AncestorType=local:FDrawer},Path=VerticalOpenContentAlignment}"
                               Command="{x:Static h:CommandService.Close}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="S.FDrawer.Left.Single" TargetType="{x:Type local:FDrawer}" BasedOn="{StaticResource S.FDrawer.Single}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="HorizontalOpenContentAlignment" Value="Left"/>
        <Setter Property="VerticalOpenContentAlignment" Value="Center"/>
        <Setter Property="OpenContent">
            <Setter.Value>
                <ControlTemplate>
                    <local:FButton Style="{DynamicResource S.FButton.Style.MouseOverOpacity}"  
                                   FIcon="{Binding RelativeSource={RelativeSource AncestorType=local:FDrawer},Path=(h:Cattach.FIcon)}"
                               Margin="{Binding RelativeSource={RelativeSource AncestorType=local:FDrawer},Path=(h:Cattach.FIconMargin)}"
                               HorizontalAlignment="{Binding RelativeSource={RelativeSource AncestorType=local:FDrawer},Path=HorizontalOpenContentAlignment}"
                               VerticalAlignment="{Binding RelativeSource={RelativeSource AncestorType=local:FDrawer},Path=VerticalOpenContentAlignment}"
                               Command="{x:Static h:CommandService.Open}"/>
                </ControlTemplate>

                <!--<local:FButton Style="{DynamicResource S.FButton.Style.Transparent}" HorizontalAlignment="Right" FIcon="&#xe69f;"
                            >
                    <h:Interaction.Triggers>
                        <h:EventTrigger EventName="MouseEnter">
                            <h:InvokeCommandAction Command="{x:Static h:CommandService.ActionVisibleCommand}"
                               CommandParameter="{Binding ElementName=grid_center}"/>
                        </h:EventTrigger>
                    </h:Interaction.Triggers>
                </local:FButton>-->
            </Setter.Value>
        </Setter>
        <Setter Property="CloseContent">
            <Setter.Value>
                <ControlTemplate>
                    <local:FButton Style="{DynamicResource S.FButton.Close}"  HorizontalAlignment="Left" VerticalAlignment="Center"
                               Command="{x:Static h:CommandService.Close}" Margin="0,0,0,0"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="S.FDrawer.Bottom.Default" TargetType="{x:Type local:FDrawer}" BasedOn="{StaticResource S.FDrawer.Default}">
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="HorizontalOpenContentAlignment" Value="Center"/>
        <Setter Property="VerticalOpenContentAlignment" Value="Bottom"/>
        <Setter Property="OpenContent">
            <Setter.Value>
                <ControlTemplate>
                    <local:FButton Style="{DynamicResource S.FButton.Style.MouseOverOpacity}"
                                   FIcon="{Binding RelativeSource={RelativeSource AncestorType=local:FDrawer},Path=(h:Cattach.FIcon)}"
                               Margin="{Binding RelativeSource={RelativeSource AncestorType=local:FDrawer},Path=(h:Cattach.FIconMargin)}"
                               HorizontalAlignment="{Binding RelativeSource={RelativeSource AncestorType=local:FDrawer},Path=HorizontalOpenContentAlignment}"
                               VerticalAlignment="{Binding RelativeSource={RelativeSource AncestorType=local:FDrawer},Path=VerticalOpenContentAlignment}"
                               Command="{x:Static h:CommandService.Open}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="CloseContent">
            <Setter.Value>
                <ControlTemplate>
                    <local:FButton Style="{DynamicResource S.FButton.Close}" HorizontalAlignment="Center" VerticalAlignment="Top"
                               Command="{x:Static h:CommandService.Close}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="S.FDrawer.Top.Default" TargetType="{x:Type local:FDrawer}" BasedOn="{StaticResource S.FDrawer.Default}">
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="HorizontalOpenContentAlignment" Value="Center"/>
        <Setter Property="VerticalOpenContentAlignment" Value="Top"/>
        <Setter Property="OpenContent">
            <Setter.Value>
                <ControlTemplate>
                    <local:FButton Style="{DynamicResource S.FButton.Style.MouseOverOpacity}" 
                                   FIcon="{Binding RelativeSource={RelativeSource AncestorType=local:FDrawer},Path=(h:Cattach.FIcon)}"
                               Margin="{Binding RelativeSource={RelativeSource AncestorType=local:FDrawer},Path=(h:Cattach.FIconMargin)}"
                               HorizontalAlignment="{Binding RelativeSource={RelativeSource AncestorType=local:FDrawer},Path=HorizontalOpenContentAlignment}"
                               VerticalAlignment="{Binding RelativeSource={RelativeSource AncestorType=local:FDrawer},Path=VerticalOpenContentAlignment}"
                               Command="{x:Static h:CommandService.Open}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="CloseContent">
            <Setter.Value>
                <ControlTemplate>
                    <local:FButton Style="{DynamicResource S.FButton.Close}" HorizontalAlignment="Center" VerticalAlignment="Bottom"
                               Command="{x:Static h:CommandService.Close}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:FDrawer}" BasedOn="{StaticResource S.FDrawer.Default}"/>
</ResourceDictionary>
