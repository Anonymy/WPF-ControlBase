<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:HeBianGu.General.WpfControlLib"
    xmlns:h="QQ:908293466" xmlns:cl="clr-namespace:System.Collections;assembly=mscorlib">


    <Style x:Key="S.TimeAnimation.Default" TargetType="{x:Type local:TimeAnimation}">
        <Setter Property="SplitMilliSecond" Value="-700"/>
        <Setter Property="RepeatBehavior" Value="Forever"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <Grid>
                        <h:Interaction.Triggers>
                            <h:EventTrigger EventName="Loaded">
                                <h:InvokeRandomSplitAnimationAction SplitMilliSecond="{Binding RelativeSource={RelativeSource AncestorType=local:TimeAnimation},Path=SplitMilliSecond}" 
                                                                    RepeatBehavior="{Binding RelativeSource={RelativeSource AncestorType=local:TimeAnimation},Path=RepeatBehavior}">                                    <h:InvokeRandomSplitAnimationAction.Timelines>
                                        <cl:ArrayList>
                                            <h:RandomDoubleAnimation Duration="00:00:01" From="1" To="0"  Storyboard.TargetProperty="Opacity"/>
                                        </cl:ArrayList>
                                    </h:InvokeRandomSplitAnimationAction.Timelines>
                                </h:InvokeRandomSplitAnimationAction>
                            </h:EventTrigger>
                        </h:Interaction.Triggers>
                    </Grid>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="S.TimeAnimation.Random.OST" TargetType="{x:Type local:TimeAnimation}" BasedOn="{StaticResource S.TimeAnimation.Default}">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <Grid>
                        <h:Interaction.Triggers>
                            <h:EventTrigger EventName="Loaded">
                                <h:InvokeRandomSplitAnimationAction SplitMilliSecond="{Binding RelativeSource={RelativeSource AncestorType=local:TimeAnimation},Path=SplitMilliSecond}" 
                                                                    RepeatBehavior="{Binding RelativeSource={RelativeSource AncestorType=local:TimeAnimation},Path=RepeatBehavior}">
                                    <h:InvokeRandomSplitAnimationAction.Timelines>
                                        <cl:ArrayList>
                                            <h:RandomDoubleAnimation Duration="00:00:01" UseFrom="False" UseTo="True" Max="3" Min="1" From="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"/>
                                            <h:RandomDoubleAnimation Duration="00:00:01" UseFrom="False" UseTo="True"  Max="3" Min="1" From="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"/>

                                            <h:RandomDoubleAnimation Duration="00:00:01" UseFrom="False" UseTo="True" Max="100" Min="-100" From="0"   Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)"/>
                                            <h:RandomDoubleAnimation Duration="00:00:01" UseFrom="False" UseTo="True" Max="100" Min="-100" From="0"   Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)"/>
                                            <h:RandomDoubleAnimation Duration="00:00:01" From="1" To="0"  Storyboard.TargetProperty="Opacity"/>
                                        </cl:ArrayList>
                                    </h:InvokeRandomSplitAnimationAction.Timelines>
                                </h:InvokeRandomSplitAnimationAction>
                            </h:EventTrigger>
                        </h:Interaction.Triggers>
                    </Grid>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:TimeAnimation}" BasedOn="{StaticResource S.TimeAnimation.Default}"/>
</ResourceDictionary>
