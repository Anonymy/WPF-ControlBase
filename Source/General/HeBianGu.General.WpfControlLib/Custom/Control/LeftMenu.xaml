<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:HeBianGu.General.WpfControlLib"
    xmlns:h="QQ:908293466" 
   xmlns:net="clr-namespace:System.Net.NetworkInformation;assembly=System">

    <DataTemplate x:Key="S.LinkAction.LeftMenu" DataType="{x:Type h:ILinkActionBase}">
        <RadioButton Foreground="{Binding RelativeSource={RelativeSource AncestorType=local:LeftMenu},Path=Foreground}" RenderTransform="{StaticResource S.TransformGroup.Default}"
                     FontSize="{DynamicResource S.FontSize.Fixed}" IsChecked="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem},Path=IsSelected,Mode=TwoWay}" 
                     GroupName="sss">
            <RadioButton.Template>
                <ControlTemplate TargetType="RadioButton">
                    <Grid>
                        <Grid x:Name="expend" Background="Transparent" Visibility="Collapsed">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="25,0" >
                                <TextBlock Text="{Binding Logo}" Style="{DynamicResource S.TextBlock.FIcon}" FontSize="{Binding RelativeSource={RelativeSource AncestorType=local:LeftMenu},Path=FIconSize}"/>
                                <TextBlock Text="{Binding DisplayName}" Style="{DynamicResource S.TextBlock.Default}" Foreground="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem},Path=Foreground}"/>
                            </StackPanel>
                        </Grid>

                        <Grid x:Name="unexpend" Background="Transparent" Visibility="Collapsed" Margin="-20" Height="Auto">
                            <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center" ToolTip="{Binding DisplayName}">
                                <TextBlock Text="{Binding Logo}" Style="{DynamicResource S.TextBlock.FIcon}" FontSize="{Binding RelativeSource={RelativeSource AncestorType=local:LeftMenu},Path=FIconSize}"/>
                                <TextBlock Text="{Binding DisplayName}" Style="{DynamicResource S.TextBlock.Default}" FontSize="8" Foreground="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem},Path=Foreground}"/>
                            </StackPanel>
                        </Grid>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=local:LeftMenu},Path=IsExpended}" Value="true">
                            <Setter Property="Visibility" Value="Visible" TargetName="unexpend"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=local:LeftMenu},Path=IsExpended}" Value="false">
                            <Setter Property="Visibility" Value="Visible" TargetName="expend"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </RadioButton.Template>
        </RadioButton>
    </DataTemplate>

    <Style x:Key="S.LeftMenu.ListBoxItem.Default" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="boder" CornerRadius="{DynamicResource S.Window.Item.CornerRadius}" Margin="10,5" Height="45">
                        <ContentPresenter/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background"  Value="{DynamicResource S.Brush.TextForeground.White.Opacity.4}" TargetName="boder"/>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="IsMouseOver" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"  Value="{DynamicResource S.Brush.TextForeground.White.Opacity.2}" TargetName="boder"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="false"/>
                                <Condition Property="IsMouseOver" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"  Value="{DynamicResource S.Brush.TextForeground.White.Opacity.1}" TargetName="boder"/>
                        </MultiTrigger>

                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=local:LeftMenu},Path=IsExpended}" Value="true">
                            <Setter Property="Margin"  Value="0,0" TargetName="boder"/>
                            <Setter Property="Height"  Value="70" TargetName="boder"/>
                            <Setter Property="CornerRadius"  Value="0" TargetName="boder"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="S.LeftMenu.Default" TargetType="{x:Type local:LeftMenu}">
        <Setter Property="Foreground" Value="{DynamicResource S.Brush.TextForeground.White}"/>
        <Setter Property="Background" Value="{DynamicResource S.Brush.Accent}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Width" Value="250"/>
        <Setter Property="FIconSize" Value="20"/>
        <Setter Property="ItemTemplate" Value="{StaticResource S.LinkAction.LeftMenu}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource S.LeftMenu.ListBoxItem.Default}"/>
        <!--<Setter Property="ItemContainerStyle" Value="{DynamicResource S.ListBoxItem.LeftAccent}"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:LeftMenu}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid x:Name="sp_left">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="180"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid>

                                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                                    <TextBlock x:Name="logo"  Style="{DynamicResource S.TextBlock.FIcon}" Text="&#xe7b1;" FontSize="75" VerticalAlignment="Center" Margin="0,40,0,0"/>
                                    
                                    <!--<StackPanel VerticalAlignment="Center">
                                        <TextBlock Text="Administor" Style="{DynamicResource S.TextBlock.Default}" FontSize="22" Foreground="{DynamicResource S.Brush.TextForeground.White}"/>
                                    </StackPanel>-->
                                
                                </StackPanel>

                                <!--隐藏菜单按钮-->
                                <ToggleButton Content="&#xeb3a;"  Style="{DynamicResource S.ToggleButton.DoubleFIconChecked.Single}" 
                                              IsTabStop="False" h:Cattach.FIconSize="30" IsChecked="{Binding RelativeSource={RelativeSource AncestorType=local:LeftMenu},Path=IsExpended}" Foreground="{DynamicResource S.Brush.TextForeground.White}"
                                              h:Cattach.FIcon="&#xe7f2;" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="13,7,0,0"   Opacity="1"  
                                              h:Cattach.AllowsAnimation="{Binding RelativeSource={RelativeSource Mode=Self},Path=IsChecked}">
                                    <ToggleButton.Triggers>
                                        <EventTrigger RoutedEvent="ToggleButton.Checked">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation From="{TemplateBinding Width}" To="60" Duration="00:00:00.2"  Storyboard.TargetProperty="(Control.Width)" Storyboard.Target="{Binding RelativeSource={RelativeSource AncestorType=local:LeftMenu}}"/>
                                                    <DoubleAnimation From="75" To="35" Duration="00:00:00.2"  Storyboard.TargetProperty="(TextBlock.FontSize)" Storyboard.TargetName="logo"/>
                                                    <DoubleAnimation From="20" To="35" Duration="00:00:00.2"  Storyboard.TargetProperty="(FIconSize)"  Storyboard.Target="{Binding RelativeSource={RelativeSource AncestorType=local:LeftMenu}}"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>

                                        <EventTrigger RoutedEvent="ToggleButton.Unchecked">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation From="60" To="{TemplateBinding Width}" Duration="00:00:00.2" Storyboard.TargetProperty="(Control.Width)" Storyboard.Target="{Binding RelativeSource={RelativeSource AncestorType=local:LeftMenu}}"/>
                                                    <DoubleAnimation From="35" To="75" Duration="00:00:00.2"  Storyboard.TargetProperty="(TextBlock.FontSize)" Storyboard.TargetName="logo"/>
                                                    <DoubleAnimation From="35" To="20" Duration="00:00:00.2"  Storyboard.TargetProperty="(FIconSize)"  Storyboard.Target="{Binding RelativeSource={RelativeSource AncestorType=local:LeftMenu}}"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </ToggleButton.Triggers>
                                </ToggleButton>
                            </Grid>

                            <ItemsPresenter Grid.Row="1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity"  Value="{DynamicResource S.Opacity.Disable}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="S.LeftMenu.LinkActions.Default" TargetType="{x:Type local:LeftMenu}" BasedOn="{StaticResource S.LeftMenu.Default}">
        <Setter Property="ItemTemplate" Value="{StaticResource S.LinkAction.LeftMenu}"/>
        <Setter Property="SelectedItem" Value="{Binding RelativeSource={RelativeSource Mode=Self},Path=SelectedLink,Mode=OneWayToSource}"/>
    </Style>

    <DataTemplate x:Key="S.LinkActionGroup.LeftMenu" DataType="{x:Type h:LinkActionGroup}">
        <Grid>
            <Grid x:Name="expend" Margin="0"  Visibility="Collapsed">
                <local:FExpander Header="{Binding DisplayName}" 
                             h:Cattach.FIconSize="{Binding RelativeSource={RelativeSource AncestorType=local:LeftMenu},Path=FIconSize}" 
                             h:Cattach.FIconMargin="10,0,0,0"
                             IsExpanded="{Binding IsExpanded,Mode=TwoWay}" Background="Transparent"
                             Style="{DynamicResource S.FExpander.Default}"
                             IconFont="{Binding Logo}">
                    <ListBox ItemsSource="{Binding Links}"
                         SelectedItem="{Binding RelativeSource={RelativeSource AncestorType=local:LeftMenu},Path=SelectedLink,Mode=TwoWay}" 
                         Foreground="{DynamicResource S.Brush.TextForeground.White}"
                         ItemContainerStyle="{StaticResource S.LeftMenu.ListBoxItem.Default}" 
                         ItemTemplate="{StaticResource S.LinkAction.LeftMenu}"
                         Background="Transparent" BorderThickness="0">
                    </ListBox>
                </local:FExpander>
            </Grid>

            <Grid x:Name="unexpend" Background="Transparent" Visibility="Collapsed" Tag="{Binding RelativeSource={RelativeSource AncestorType=local:LeftMenu} }">
                <!--<StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="-10,0" ToolTip="{Binding DisplayName}">
                    <TextBlock Text="{Binding Logo}" Style="{DynamicResource S.TextBlock.FIcon}" FontSize="{Binding RelativeSource={RelativeSource AncestorType=local:LeftMenu},Path=FIconSize}"/>
                </StackPanel>-->

                <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center" ToolTip="{Binding DisplayName}">
                    <TextBlock Text="{Binding Logo}" Style="{DynamicResource S.TextBlock.FIcon}" FontSize="{Binding RelativeSource={RelativeSource AncestorType=local:LeftMenu},Path=FIconSize}"/>
                    <TextBlock Text="{Binding DisplayName}" Style="{DynamicResource S.TextBlock.Default}" FontSize="8" Foreground="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem},Path=Foreground}"/>
                </StackPanel>

                <Popup x:Name="Pop" PopupAnimation="Slide" IsOpen="{Binding ElementName=unexpend,Path=IsMouseOver,Mode=OneWay}"
                       PlacementTarget="{Binding ElementName=unexpend}" Placement="Right"
                       AllowsTransparency="True" StaysOpen="True" HorizontalAlignment="Left" VerticalAlignment="Bottom">
                    <Border Background="{DynamicResource S.Brush.Accent.Opacity.8}"
                          CornerRadius="5" BorderBrush="{DynamicResource S.Brush.Accent}"
                          BorderThickness="1">
                        <ListBox ItemsSource="{Binding Links}" Margin="5"
                         SelectedItem="{Binding RelativeSource={RelativeSource AncestorType=Popup},Path=PlacementTarget.Tag.SelectedLink,Mode=TwoWay}" 
                         Foreground="{DynamicResource S.Brush.TextForeground.White}"
                         Background="Transparent" BorderThickness="0">
                            <ListBox.ItemTemplate>
                                <DataTemplate DataType="{x:Type local:LinkAction}">
                                    <RadioButton Foreground="{Binding RelativeSource={RelativeSource AncestorType=local:LeftMenu},Path=Foreground}" Content="{Binding }"
                     FontSize="{DynamicResource S.FontSize.Fixed}" IsChecked="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem},Path=IsSelected,Mode=TwoWay}" 
                     GroupName="sssss">
                                        <RadioButton.Template>
                                            <ControlTemplate TargetType="RadioButton">
                                                <Grid>
                                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="25,0" >
                                                        <TextBlock Text="{Binding Logo}" Style="{DynamicResource S.TextBlock.FIcon}"/>
                                                        <TextBlock Text="{Binding DisplayName}" Style="{DynamicResource S.TextBlock.Default}" Foreground="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem},Path=Foreground}"/>
                                                    </StackPanel>
                                                </Grid>
                                            </ControlTemplate>
                                        </RadioButton.Template>
                                    </RadioButton>
                                </DataTemplate>
                            </ListBox.ItemTemplate>

                            <ListBox.ItemContainerStyle>
                                <Style TargetType="{x:Type ListBoxItem}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                <Border x:Name="boder" CornerRadius="{DynamicResource S.Window.Item.CornerRadius}" Margin="5,2" Height="40">
                                                    <ContentPresenter/>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsSelected" Value="true">
                                                        <Setter Property="Background"  Value="{DynamicResource S.Brush.TextForeground.White.Opacity.4}" TargetName="boder"/>
                                                    </Trigger>

                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition Property="IsSelected" Value="true"/>
                                                            <Condition Property="IsMouseOver" Value="true"/>
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="Background"  Value="{DynamicResource S.Brush.TextForeground.White.Opacity.2}" TargetName="boder"/>
                                                    </MultiTrigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition Property="IsSelected" Value="false"/>
                                                            <Condition Property="IsMouseOver" Value="true"/>
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="Background"  Value="{DynamicResource S.Brush.TextForeground.White.Opacity.1}" TargetName="boder"/>
                                                    </MultiTrigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ListBox.ItemContainerStyle>
                        </ListBox>
                    </Border>

                    <h:Interaction.Behaviors>
                        <local:PopupRefreshBehavior LeftMenu="{Binding RelativeSource={RelativeSource AncestorType=local:LeftMenu}}"/>
                    </h:Interaction.Behaviors>
                </Popup>
            </Grid>
        </Grid>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=local:LeftMenu},Path=IsExpended}" Value="true">
                <Setter Property="Visibility" Value="Visible" TargetName="unexpend"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=local:LeftMenu},Path=IsExpended}" Value="false">
                <Setter Property="Visibility" Value="Visible" TargetName="expend"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <Style x:Key="S.LeftMenu.LinkActionGroup.Default" TargetType="{x:Type local:LeftMenu}" BasedOn="{StaticResource S.LeftMenu.Default}">
        <Setter Property="ItemTemplate" Value="{StaticResource S.LinkActionGroup.LeftMenu}"/>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <Border x:Name="boder" Height="Auto">
                                    <ContentPresenter/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="Background"  Value="{DynamicResource S.Brush.TextForeground.White.Opacity.1}" TargetName="boder"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:LeftMenu}" BasedOn="{StaticResource S.LeftMenu.LinkActions.Default}"/>

</ResourceDictionary>

