<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:s="clr-namespace:System;assembly=mscorlib"
                    >
    <Style TargetType="{x:Type TabItem}" x:Key="TabItemStyle">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Height" Value="60"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid x:Name="templateRoot" SnapsToDevicePixels="True" Background="#00FFFFFF">
                        <Border x:Name="mainBorder" Background="Transparent">
                            <ContentPresenter Margin="30,0,30,0" x:Name="contentPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}"
                                              ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" 
                                              Focusable="False" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}" 
                                              RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, 
                                AncestorType={x:Type ItemsControl}}}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <!--<Setter TargetName="mainBorder" Property="BorderBrush" Value="{x:Null}"/>-->
                            <Setter TargetName="mainBorder" Property="Background" Value="White"/>
                            <Setter  Property="Foreground" Value="{DynamicResource S.Brush.Accent}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style> 
    
    <!--下划线样式-->
    <Style x:Key="S.TabItem.UnderLine.Default" TargetType="{x:Type TabItem}">
        <Setter Property="Foreground" Value="{DynamicResource S.Brush.Accent}"/>
        <Setter Property="Header" Value="{Binding Content.DataContext.HeaderInfo, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Height" Value="{DynamicResource S.Window.Row.Height}"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid Width="Auto" Height="Auto"  x:Name="TabItemRoot" Margin="0">

                        <Border x:Name="underline" BorderThickness="0,0,0,2" BorderBrush="{DynamicResource S.Brush.TextBorderBrush.Default}" />
                        
                        <ContentPresenter  x:Name="Content" ContentSource="Header" 
                                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                           RecognizesAccessKey="True" Margin="0,8,0,0"
                                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>

                    </Grid>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsSelected" Value="false">
                            <Setter TargetName="underline" Property="BorderBrush" Value="{DynamicResource S.Brush.TextBorderBrush.Default}"/>
                            <Setter TargetName="underline" Property="BorderThickness" Value="0,0,0,2"/>
                            <Setter  Property="Foreground" Value="{DynamicResource S.Brush.TextForeground.Assist}"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="underline" Property="BorderThickness" Value="0,0,0,2"/>
                            <Setter TargetName="underline" Property="BorderBrush" Value="{DynamicResource S.Brush.Accent.MouseOver}"/>
                            <Setter  Property="Foreground" Value="{DynamicResource S.Brush.Accent.MouseOver}"/>
                        </Trigger>

                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="underline" Property="BorderThickness" Value="0,0,0,2"/>
                            <Setter TargetName="underline" Property="BorderBrush" Value="{DynamicResource S.Brush.Accent}"/>
                            <Setter  Property="Foreground" Value="{DynamicResource S.Brush.Accent}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--上划线样式-->
    <Style x:Key="S.TabItem.TopLine.Default" TargetType="{x:Type TabItem}">
        <Setter Property="Foreground" Value="{DynamicResource S.Brush.Accent}"/>
        <Setter Property="Header" Value="{Binding Content.DataContext.HeaderInfo, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid Width="Auto" Height="Auto"  x:Name="TabItemRoot" Margin="13,0,13,0">
                        
                        <Border x:Name="underline"  BorderThickness="0,2,0,0" BorderBrush="{DynamicResource S.Brush.TextBorderBrush.Default}" />
                        
                        <ContentPresenter Margin="13" x:Name="Content" ContentSource="Header" RecognizesAccessKey="True" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="false">
                            <Setter TargetName="underline" Property="BorderBrush" Value="{DynamicResource S.Brush.TextBorderBrush.Default}"/>
                            <Setter TargetName="underline" Property="BorderThickness" Value="0,2,0,0"/>
                            <Setter  Property="Foreground" Value="{DynamicResource S.Brush.TextForeground.Assist}"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="underline" Property="BorderThickness" Value="0,2,0,0"/>
                            <Setter TargetName="underline" Property="BorderBrush" Value="{DynamicResource S.Brush.Accent.MouseOver}"/>

                            <Setter  Property="Foreground" Value="{DynamicResource S.Brush.Accent.MouseOver}"/>
                        </Trigger>

                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="underline" Property="BorderThickness" Value="0,2,0,0"/>
                            <Setter TargetName="underline" Property="BorderBrush" Value="{DynamicResource S.Brush.Accent}"/>
                            <Setter  Property="Foreground" Value="{DynamicResource S.Brush.Accent}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--默认样式-->
    <Style x:Key="S.TabControl.Default" TargetType="{x:Type TabControl}">
        <Setter Property="Foreground" Value="{DynamicResource S.Brush.TextForeground.Default}"/>
        <Setter Property="Padding" Value="0"/>
        <!--<Setter Property="ItemContainerStyle" Value="{StaticResource TabItemStyle}"/>-->
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <!--<Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid ClipToBounds="True" SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0"/>
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                            <RowDefinition x:Name="RowDefinition1" Height="*"/>
                        </Grid.RowDefinitions>
                        <TabPanel x:Name="HeaderPanel" Grid.Column="0" IsItemsHost="True" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="140,0,0,0"/>
                        <Border x:Name="ContentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter x:Name="PART_SelectedContentHost" ContentTemplate="{TemplateBinding SelectedContentTemplate}" Content="{TemplateBinding SelectedContent}" ContentStringFormat="{TemplateBinding SelectedContentStringFormat}" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="1"/>
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                            <Setter Property="Margin" TargetName="HeaderPanel" Value="2,0,2,2"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="1"/>
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                            <Setter Property="Margin" TargetName="HeaderPanel" Value="2,2,0,2"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="1"/>
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                            <Setter Property="Margin" TargetName="HeaderPanel" Value="0,2,2,2"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>-->
    </Style>
    
    <Style TargetType="{x:Type TabControl}" BasedOn="{StaticResource S.TabControl.Default}"/>
</ResourceDictionary>