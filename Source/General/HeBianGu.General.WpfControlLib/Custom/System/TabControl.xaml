<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:s="clr-namespace:System;assembly=mscorlib"
                    xmlns:local="clr-namespace:HeBianGu.General.WpfControlLib" xmlns:h="QQ:908293466">
    <!--默认样式-->
    <Style TargetType="{x:Type TabItem}" x:Key="S.TabItem.Default">
        <Setter Property="Foreground" Value="{DynamicResource S.Brush.TextForeground.Default}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{DynamicResource S.Brush.TextBorderBrush.Default}"/>
        <Setter Property="Height" Value="{DynamicResource S.Window.Row.Height}"/>
        <Setter Property="FontSize" Value="{DynamicResource S.FontSize.Default}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="5,0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="h:Cattach.CornerRadius" Value="{DynamicResource S.Window.Item.CornerRadius}"/>
        <Setter Property="h:Cattach.IsUseClose" Value="{Binding RelativeSource={RelativeSource AncestorType=TabControl},Path=(h:Cattach.IsUseClose)}"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="h:Cattach.CellMargin" Value="{Binding RelativeSource={RelativeSource AncestorType=TabControl},Path=(h:Cattach.CellMargin)}"/>
        <Setter Property="h:Cattach.MouseOverBackground" Value="{DynamicResource S.Brush.Accent.MouseOver.Background}" />
        <Setter Property="h:Cattach.MouseOverForeground" Value="{DynamicResource S.Brush.TextForeground.Default}" />
        <Setter Property="h:Cattach.SelectBackground" Value="{DynamicResource S.Brush.Accent}" />
        <Setter Property="h:Cattach.SelectForeground" Value="{DynamicResource S.Brush.TextForeground.White}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">

                    <Grid Margin="{TemplateBinding Padding}">

                        <Border x:Name="boder_back" CornerRadius="{DynamicResource S.Window.Item.CornerRadius}" 
                                BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}"/>

                        <Border x:Name="boder_mouseover" BorderBrush="{TemplateBinding BorderBrush}" 
                                Background="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=(h:Cattach.MouseOverBackground)}"
                                Opacity="0"
                                CornerRadius="{TemplateBinding h:Cattach.CornerRadius}"
                                BorderThickness="{TemplateBinding BorderThickness}"/>

                        <Border x:Name="boder" BorderBrush="{TemplateBinding BorderBrush}" 
                                Background="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=(h:Cattach.SelectBackground)}"
                                Opacity="0"
                                CornerRadius="{TemplateBinding h:Cattach.CornerRadius}"
                                BorderThickness="{TemplateBinding BorderThickness}"/>

                        <DockPanel>
                            <local:FButton Style="{DynamicResource S.FButton.Close}" DockPanel.Dock="Right"
                                       Visibility="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=(h:Cattach.IsUseClose),Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}"
                                       FIconSize="{DynamicResource S.FIcon.Size.Small}">
                                <h:Interaction.Triggers>
                                    <h:EventTrigger EventName="Click">
                                        <h:CloseItemsAction ItemsControl="{Binding RelativeSource={RelativeSource AncestorType=TabControl}}" 
                                                        Item="{Binding RelativeSource={RelativeSource AncestorType=TabItem}}"/>
                                    </h:EventTrigger>
                                </h:Interaction.Triggers>
                            </local:FButton>

                            <ContentPresenter x:Name="Content" ContentSource="Header" 
                                           VerticalAlignment="Center" 
                                           Margin="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=(h:Cattach.CellMargin)}"
                                           RecognizesAccessKey="True"
                                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>


                        </DockPanel>

                    </Grid>
                    <!--<ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="boder" Property="Background" Value="{DynamicResource S.Brush.Accent.MouseOver.Background}"/>
                            <Setter  Property="Foreground" Value="{DynamicResource S.Brush.TextForeground.White}"/>
                        </Trigger>

                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="boder" Property="Background" Value="{DynamicResource S.Brush.Accent}"/>
                            <Setter  Property="Foreground" Value="{DynamicResource S.Brush.TextForeground.White}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>-->

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            
                            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=Self},Path=(h:Cattach.MouseOverForeground)}" />

                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="boder_mouseover" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.3" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>

                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="boder_mouseover" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=Self},Path=(h:Cattach.SelectForeground)}" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="boder" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>

                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="boder" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <Trigger Property="h:Cattach.IsDragEnter" Value="true">
                            <Setter Property="BorderBrush" TargetName="boder" Value="{DynamicResource S.Brush.Accent}"/>
                            <Setter Property="BorderThickness" TargetName="boder"   Value="0,1,0,0"/>
                        </Trigger>


                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--划线样式-->
    <Style x:Key="S.TabItem.Line.Default" TargetType="{x:Type TabItem}" BasedOn="{StaticResource S.TabItem.Default}">
        <Setter Property="Foreground" Value="{DynamicResource S.Brush.TextForeground.Assist}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource S.Brush.TextBorderBrush.Default}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid Width="Auto" Height="Auto" Margin="0" Background="Transparent">

                        <Border x:Name="boder_mouseover" BorderThickness="0,0,0,2" Opacity="0" BorderBrush="{DynamicResource S.Brush.Accent.MouseOver.Background}" />

                        <Border x:Name="underline" BorderThickness="0,0,0,2" Opacity="0" BorderBrush="{DynamicResource S.Brush.Accent}" />

                        <DockPanel Margin="{TemplateBinding Padding}">
                            
                            <local:FButton Style="{DynamicResource S.FButton.Close}" DockPanel.Dock="Right" VerticalAlignment="Center" Width="Auto" Margin="5,0,0,0"
                                       Visibility="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=(h:Cattach.IsUseClose),Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}"
                                       FIconSize="{DynamicResource S.FIcon.Size.Small}">
                                <h:Interaction.Triggers>
                                    <h:EventTrigger EventName="Click">
                                        <h:CloseItemsAction ItemsControl="{Binding RelativeSource={RelativeSource AncestorType=TabControl}}" 
                                                        Item="{Binding RelativeSource={RelativeSource AncestorType=TabItem}}"/>
                                    </h:EventTrigger>
                                </h:Interaction.Triggers>
                            </local:FButton>

                            <TextBlock VerticalAlignment="Center" Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=(h:Cattach.FIcon)}" Style="{DynamicResource S.TextBlock.FIcon}" DockPanel.Dock="Right" Margin="5,0"/>

                            <ContentPresenter  x:Name="Content" ContentSource="Header" 
                                           VerticalAlignment="Center" ContentTemplate="{TemplateBinding HeaderTemplate}"
                                           RecognizesAccessKey="True"
                                           Margin="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=(h:Cattach.CellMargin)}"
                                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                        </DockPanel>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=TabControl},Path=TabStripPlacement}" Value="Left">
                            <Setter TargetName="underline" Property="BorderThickness" Value="0,0,2,0"/>
                            <Setter TargetName="boder_mouseover" Property="BorderThickness" Value="0,0,2,0"/>

                        </DataTrigger>

                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=TabControl},Path=TabStripPlacement}" Value="Right">
                            <Setter TargetName="underline" Property="BorderThickness" Value="2,0,0,0"/>
                            <Setter TargetName="boder_mouseover" Property="BorderThickness" Value="2,0,0,0"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=TabControl},Path=TabStripPlacement}" Value="Bottom">
                            <Setter TargetName="underline" Property="BorderThickness" Value="0,2,0,0"/>
                            <Setter TargetName="boder_mouseover" Property="BorderThickness" Value="0,2,0,0"/>
                        </DataTrigger>

                        <!--<Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="underline" Property="BorderBrush" Value="{DynamicResource S.Brush.Accent.MouseOver}"/>
                            <Setter  Property="Foreground" Value="{DynamicResource S.Brush.Accent.MouseOver}"/>
                        </Trigger>

                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="underline" Property="BorderBrush" Value="{DynamicResource S.Brush.Accent}"/>
                            <Setter  Property="Foreground" Value="{DynamicResource S.Brush.Accent}"/>
                        </Trigger>-->

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter  Property="Foreground" Value="{DynamicResource S.Brush.Accent.MouseOver}"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="boder_mouseover" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.3" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>

                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="boder_mouseover" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <Trigger Property="IsSelected" Value="true">
                            <Setter  Property="Foreground" Value="{DynamicResource S.Brush.Accent}"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="underline" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.3" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>

                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="underline" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <!--<Trigger Property="h:Cattach.IsDragEnter" Value="true">
                            <Setter Property="BorderBrush" TargetName="boder" Value="{DynamicResource S.Brush.Accent}"/>
                            <Setter Property="BorderThickness" TargetName="boder"   Value="0,1,0,0"/>
                        </Trigger>-->

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style  x:Key="S.TabItem.Single" BasedOn="{StaticResource S.TabItem.Default}" TargetType="TabItem">
        <Setter Property="h:Cattach.MouseOverBackground" Value="{DynamicResource S.Brush.TextForeground.MouseOver}"/>
        <Setter Property="h:Cattach.MouseOverForeground" Value="{DynamicResource S.Brush.TextForeground.Default}"/>
        <Setter Property="h:Cattach.SelectBackground" Value="{DynamicResource S.Brush.TextForeground.Selected}"/>
        <Setter Property="h:Cattach.SelectForeground" Value="{DynamicResource S.Brush.TextForeground.Default}"/> 
    </Style>

    <Style  x:Key="S.TabItem.Office" BasedOn="{StaticResource S.TabItem.Default}" TargetType="TabItem">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Foreground" Value="{DynamicResource S.Brush.TextForeground.White}"/>
        <Setter Property="h:Cattach.MouseOverBackground" Value="{DynamicResource S.Brush.TextForeground.White.Opacity.1}"/>
        <Setter Property="h:Cattach.MouseOverForeground" Value="{DynamicResource S.Brush.TextForeground.White}"/>
        <Setter Property="h:Cattach.SelectBackground" Value="{DynamicResource S.Brush.Dark.1}"/>
        <Setter Property="h:Cattach.SelectForeground" Value="{DynamicResource S.Brush.Accent}"/>
        <Setter Property="h:Cattach.CornerRadius" Value="{DynamicResource S.Window.Item.CornerRadius.Top}"/>
    </Style>

    <!--默认样式-->
    <Style x:Key="S.TabControl.Default" TargetType="{x:Type TabControl}">
        <Setter Property="Foreground" Value="{DynamicResource S.Brush.TextForeground.Default}"/>
        <Setter Property="Background" Value="{DynamicResource S.Brush.TextBackground.Default}"/>
        <Setter Property="Padding" Value="10,6"/>
        <!--<Setter Property="ItemContainerStyle" Value="{StaticResource TabItemStyle}"/>-->
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource S.Brush.TextBorderBrush.Default}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="h:Cattach.Bool" Value="False"/>
        <Setter Property="h:Cattach.CellMargin" Value="{StaticResource S.Thickness.Margin.10.0}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid ClipToBounds="True" SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0"/>
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                        </Grid.ColumnDefinitions>

                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                            <RowDefinition x:Name="RowDefinition1" Height="*"/>
                        </Grid.RowDefinitions>

                        <Border Grid.RowSpan="2" Grid.ColumnSpan="2" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="{DynamicResource S.Window.Item.CornerRadius}"/>

                        <ScrollViewer x:Name="HeaderPanel" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                            <TabPanel Grid.Column="0" Margin="{TemplateBinding Padding}" IsItemsHost="True" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                        </ScrollViewer>

                        <Border x:Name="ContentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter x:Name="PART_SelectedContentHost" ContentTemplate="{TemplateBinding SelectedContentTemplate}" Content="{TemplateBinding SelectedContent}" ContentStringFormat="{TemplateBinding SelectedContentStringFormat}" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="1"/>
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                            <Setter Property="Margin" TargetName="HeaderPanel" Value="2,0,2,2"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="1"/>
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                            <Setter Property="Margin" TargetName="HeaderPanel" Value="2,2,0,2"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="1"/>
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                            <Setter Property="Margin" TargetName="HeaderPanel" Value="0,2,2,2"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <Grid/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="S.TabControl.Office" TargetType="{x:Type TabControl}" BasedOn="{StaticResource S.TabControl.Default}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource S.TabItem.Office}"/>
        <Setter Property="Background" Value="{DynamicResource S.Brush.Dark.1}"/>
        <Setter Property="Padding" Value="0,0"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid ClipToBounds="True" SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0"/>
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                        </Grid.ColumnDefinitions>

                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                            <RowDefinition x:Name="RowDefinition1" Height="*"/>
                        </Grid.RowDefinitions>

                        <Border Grid.RowSpan="2" Grid.ColumnSpan="2" BorderThickness="{TemplateBinding BorderThickness}" 
                                BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="{DynamicResource S.Window.Item.CornerRadius}"/>

                        <Border x:Name="ContentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter x:Name="PART_SelectedContentHost" ContentTemplate="{TemplateBinding SelectedContentTemplate}" Content="{TemplateBinding SelectedContent}" ContentStringFormat="{TemplateBinding SelectedContentStringFormat}" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        
                        <ScrollViewer x:Name="HeaderPanel" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                            <DockPanel LastChildFill="False">
                                <TabPanel Grid.Column="0" Margin="{TemplateBinding Padding}" IsItemsHost="True" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>

                                <DockPanel DockPanel.Dock="Right" Margin="2,0">
                                    <CheckBox  Style="{DynamicResource S.CheckBox.Single}"  h:Cattach.SelectedText="&#xe66e;"
                  h:Cattach.UnSelectedText="&#xe66f;" Margin="5,0" IsChecked="{Binding ElementName=ContentPanel,Path=Visibility,Converter={x:Static h:XConverter.VisibilityToBoolenConverter}}"
                  Foreground="{DynamicResource S.Brush.TextForeground.White}"
                  h:Cattach.SelectForeground="{DynamicResource S.Brush.TextForeground.White}"
                  h:Cattach.MouseOverBackground="{DynamicResource S.Brush.TextForeground.White.Opacity.2}"
                  h:Cattach.FIconSize="{DynamicResource S.FIcon.Size.Small}"/>
                                </DockPanel>
                            </DockPanel>
                        </ScrollViewer>

                     
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="1"/>
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                            <Setter Property="Margin" TargetName="HeaderPanel" Value="2,0,2,2"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="1"/>
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                            <Setter Property="Margin" TargetName="HeaderPanel" Value="2,2,0,2"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="1"/>
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                            <Setter Property="Margin" TargetName="HeaderPanel" Value="0,2,2,2"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>