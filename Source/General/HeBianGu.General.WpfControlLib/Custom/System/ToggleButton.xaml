<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                     xmlns:local="clr-namespace:HeBianGu.General.WpfControlLib"
                     xmlns:h="QQ:908293466"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--<ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../SystemControls/FIcon.xaml" />
    </ResourceDictionary.MergedDictionaries>-->

    <Style TargetType="{x:Type ToggleButton}" x:Key="S.ToggleButton.Default">
        <Setter Property="Foreground" Value="{DynamicResource S.Brush.Accent}" />
        <Setter Property="RenderTransform" Value="{StaticResource S.TransformGroup.Default}"/>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid x:Name="Grid" Margin="{TemplateBinding Padding}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Grid>
                    <!--z触发器-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource S.Brush.Accent}" />
                            <Setter Property="Opacity" Value="{StaticResource S.Opacity.Disable}" TargetName="Grid"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource S.Brush.Gray.Notice}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource S.Brush.Accent}" />
                            <Setter Property="Opacity" Value="0.8" TargetName="Grid"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="{StaticResource S.Opacity.Disable}" TargetName="Grid"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ToggleButton}" x:Key="S.ToggleButton.Accent" BasedOn="{StaticResource S.ToggleButton.Default}">
        <Setter Property="Foreground" Value="{DynamicResource S.Brush.TextForeground.Default}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid x:Name="Grid" Margin="{TemplateBinding Padding}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Grid>
                    <!--z触发器-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource S.Brush.Accent.MouseOver.Background}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource S.Brush.Accent}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="{StaticResource S.Opacity.Disable}" TargetName="Grid"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource S.Brush.Accent.MouseOver}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--选中和未选中设置两种颜色-->
    <Style TargetType="{x:Type ToggleButton}" x:Key="S.ToggleButton.BrushFIconChecked" BasedOn="{StaticResource S.ToggleButton.Default}">
        <Setter Property="Foreground" Value="{DynamicResource S.Brush.TextForeground.Default}" />
        <Setter Property="h:Cattach.FIconSize" Value="{DynamicResource S.FIcon.Size.Large}"/>
        <Setter Property="h:Cattach.FIconMargin" Value="1"/>
        <Setter Property="h:Cattach.FIcon" Value="&#xe603;"/>
        <Setter Property="h:Cattach.CheckedForegroundBrush" Value="{DynamicResource S.Brush.Accent}"/>
        <Setter Property="h:Cattach.CheckedBackgroundBrush" Value="Transparent"/>
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid x:Name="Grid" Margin="{TemplateBinding Padding}">
                        <StackPanel Orientation="Horizontal" Margin="{TemplateBinding h:Cattach.FIconMargin}">
                            
                            <TextBlock x:Name="FIcon" 
                                   FontSize="{Binding Path=(h:Cattach.FIconSize),RelativeSource={RelativeSource TemplatedParent}}"
                                   Text="{TemplateBinding h:Cattach.FIcon}" 
                                   Foreground="{TemplateBinding Foreground}" 
                                   Style="{DynamicResource FIcon}" />
                            
                            <TextBlock x:Name="txt" Text="{TemplateBinding Content}" 
                                       FontSize="{Binding Path=FontSize,RelativeSource={RelativeSource TemplatedParent}}"  
                                       Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </StackPanel>
                    </Grid>
                    <!--z触发器-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="{StaticResource S.Opacity.Disable}" TargetName="FIcon"/>
                            <Setter Property="Opacity" Value="{StaticResource S.Opacity.Disable}" TargetName="txt"/>

                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource S.Brush.Gray.Notice}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="{Binding Path=(h:Cattach.CheckedForegroundBrush),RelativeSource={RelativeSource TemplatedParent}}" TargetName="FIcon"/>
                            <Setter Property="Foreground" Value="{Binding Path=(h:Cattach.CheckedForegroundBrush),RelativeSource={RelativeSource TemplatedParent}}" TargetName="txt"/>
                            <Setter Property="Background" Value="{Binding Path=(h:Cattach.CheckedBackgroundBrush),RelativeSource={RelativeSource TemplatedParent}}"  TargetName="FIcon"/>
                            <Setter Property="Background" Value="{Binding Path=(h:Cattach.CheckedBackgroundBrush),RelativeSource={RelativeSource TemplatedParent}}" TargetName="txt"/>
                            <Setter Property="Opacity" Value="{StaticResource S.Opacity.Disable}" TargetName="FIcon"/>
                            <Setter Property="Opacity" Value="{StaticResource S.Opacity.Disable}" TargetName="txt"/>

                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="{StaticResource S.Opacity.Disable}" TargetName="Grid"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--选中和未选中设置两种颜色-->
    <Style TargetType="{x:Type ToggleButton}" x:Key="S.ToggleButton.BrushFIconChecked.RightToLeft" BasedOn="{StaticResource S.ToggleButton.Default}">
        <Setter Property="Foreground" Value="{DynamicResource S.Brush.TextForeground.Default}" />
        <Setter Property="h:Cattach.FIconSize" Value="{DynamicResource S.FIcon.Size.Large}"/>
        <Setter Property="h:Cattach.FIconMargin" Value="1"/>
        <Setter Property="h:Cattach.FIcon" Value="&#xe603;"/>
        <Setter Property="h:Cattach.CheckedForegroundBrush" Value="{DynamicResource S.Brush.Accent}"/>
        <Setter Property="h:Cattach.CheckedBackgroundBrush" Value="{DynamicResource S.Brush.Accent}"/>
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid x:Name="Grid" Margin="{TemplateBinding Padding}">
                        <StackPanel Orientation="Horizontal" Margin="{TemplateBinding h:Cattach.FIconMargin}">
                          
                            <TextBlock x:Name="txt" Text="{TemplateBinding Content}" 
                                       FontSize="{Binding Path=FontSize,RelativeSource={RelativeSource TemplatedParent}}"  
                                       Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center"/>

                            <TextBlock x:Name="FIcon" 
                                   FontSize="{Binding Path=(h:Cattach.FIconSize),RelativeSource={RelativeSource TemplatedParent}}"
                                   Margin="{Binding Path=(h:Cattach.FIconMargin),RelativeSource={RelativeSource TemplatedParent}}"
                                   Text="{TemplateBinding h:Cattach.FIcon}" 
                                   Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center"
                                   Style="{DynamicResource FIcon}" />
                        </StackPanel>
                    </Grid>
                    <!--z触发器-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="{StaticResource S.Opacity.Disable}" TargetName="FIcon"/>
                            <Setter Property="Opacity" Value="{StaticResource S.Opacity.Disable}" TargetName="txt"/>

                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource S.Brush.Gray.Notice}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="{Binding Path=(h:Cattach.CheckedForegroundBrush),RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter Property="Background" Value="{Binding Path=(h:Cattach.CheckedBackgroundBrush),RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter Property="Opacity" Value="{StaticResource S.Opacity.Disable}" TargetName="FIcon"/>
                            <Setter Property="Opacity" Value="{StaticResource S.Opacity.Disable}" TargetName="txt"/>

                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="{StaticResource S.Opacity.Disable}" TargetName="Grid"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--选中和未选中设置成两种图标-->
    <Style TargetType="{x:Type ToggleButton}" x:Key="S.ToggleButton.DoubleFIconChecked" BasedOn="{StaticResource S.ToggleButton.Default}">
        <Setter Property="Foreground" Value="{DynamicResource S.Brush.Accent}" />
        <Setter Property="h:Cattach.FIconSize" Value="{DynamicResource S.FontSize.Default}"/>
        <Setter Property="h:Cattach.FIconMargin" Value="1"/>
        <Setter Property="h:Cattach.FIcon" Value="&#xe81a;"/>
        <Setter Property="Content" Value="&#xe81d;"/>
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid x:Name="Grid" Margin="{TemplateBinding Padding}">
                        <!--<StackPanel Orientation="Horizontal" Margin="{TemplateBinding h:Cattach.FIconMargin}">-->

                            <TextBlock x:Name="FIcon" HorizontalAlignment="Center" VerticalAlignment="Center"
                                   FontSize="{Binding Path=(h:Cattach.FIconSize),RelativeSource={RelativeSource TemplatedParent}}"
                                   Text="{TemplateBinding h:Cattach.FIcon}"
                                   Foreground="{TemplateBinding Foreground}" 
                                   Style="{DynamicResource FIcon}" />

                        <!--</StackPanel>-->
                    </Grid>
                    <!--z触发器-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource S.Brush.Accent}" />
                            <Setter Property="Opacity" Value="{DynamicResource S.Opacity.Disable}" TargetName="FIcon"/>
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource S.Brush.Gray.Notice}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource S.Brush.TextForeground.Default}" />
                            <Setter Property="Opacity" Value="{DynamicResource S.Opacity.Disable}" TargetName="FIcon"/>
                            <Setter Property="Text" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Content}" TargetName="FIcon"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="{DynamicResource S.Opacity.Disable}" TargetName="Grid"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

   
    <Style TargetType="{x:Type ToggleButton}" x:Key="S.ToggleButton.DoubleFIconChecked.Single" BasedOn="{StaticResource S.ToggleButton.DoubleFIconChecked}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid x:Name="Grid" Margin="{TemplateBinding Padding}">
                        <StackPanel Orientation="Horizontal" Margin="{TemplateBinding h:Cattach.FIconMargin}">

                            <TextBlock x:Name="FIcon" 
                                   FontSize="{Binding Path=(h:Cattach.FIconSize),RelativeSource={RelativeSource TemplatedParent}}"
                                   Text="{TemplateBinding h:Cattach.FIcon}" 
                                   Foreground="{TemplateBinding Foreground}" 
                                   Style="{DynamicResource FIcon}" />

                        </StackPanel>
                    </Grid>
                    <!--z触发器-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource S.Brush.Accent}" />
                            <Setter Property="Opacity" Value="{DynamicResource S.Opacity.Disable}" TargetName="FIcon"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource S.Brush.Gray.Notice}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource S.Brush.TextForeground.Default}" />
                            <Setter Property="Text" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Content}" TargetName="FIcon"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="{DynamicResource S.Opacity.Disable}" TargetName="Grid"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type ToggleButton}" x:Key="S.ToggleButton.FIconSingle" BasedOn="{StaticResource S.ToggleButton.Default}">
        <Setter Property="Foreground" Value="{DynamicResource S.Brush.TextForeground.Assist}" />
        <Setter Property="h:Cattach.FIconSize" Value="{DynamicResource S.FIcon.Size.Large}"/>
        <Setter Property="h:Cattach.FIconMargin" Value="1"/>
        <Setter Property="h:Cattach.FIcon" Value="&#xe603;"/>
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid x:Name="Grid" Margin="{TemplateBinding Padding}">
                        <StackPanel Orientation="Horizontal" Margin="{TemplateBinding h:Cattach.FIconMargin}">
                            <TextBlock x:Name="FIcon" 
                                   FontSize="{Binding Path=(h:Cattach.FIconSize),RelativeSource={RelativeSource TemplatedParent}}"
                                   Text="{TemplateBinding h:Cattach.FIcon}" 
                                   Foreground="{TemplateBinding Foreground}" 
                                   Style="{DynamicResource FIcon}" />
                            <TextBlock x:Name="txt" Text="{TemplateBinding Content}" 
                                       FontSize="{Binding Path=FontSize,RelativeSource={RelativeSource TemplatedParent}}"  
                                       Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </StackPanel>
                    </Grid>
                    <!--z触发器-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource S.Brush.Accent}" TargetName="FIcon"/>
                            <Setter Property="Foreground" Value="{DynamicResource S.Brush.Accent}" TargetName="txt"/> 
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource S.Brush.Gray.Notice}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource S.Brush.Accent}" TargetName="FIcon"/>
                            <Setter Property="Foreground" Value="{DynamicResource S.Brush.Accent}" TargetName="txt"/>
                            <Setter Property="Opacity" Value="{StaticResource S.Opacity.Disable}" TargetName="FIcon"/>
                            <Setter Property="Opacity" Value="{StaticResource S.Opacity.Disable}" TargetName="txt"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="{StaticResource S.Opacity.Disable}" TargetName="Grid"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ToggleButton}" x:Key="S.ToggleButton.Combobox" BasedOn="{StaticResource S.ToggleButton.Default}">
        <!--<Setter Property="Foreground" Value="{DynamicResource S.Brush.TextForeground.Default}" />-->
        <Setter Property="h:Cattach.FIconSize" Value="{DynamicResource S.FIcon.Size.Small}"/>
        <Setter Property="h:Cattach.FIconMargin" Value="0,1,3,1"/>
        <Setter Property="h:Cattach.FIcon" Value="&#xe63a;"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="h:Cattach.MouseOverForeground" Value="Transparent"/>
        <Setter Property="h:Cattach.PressForeground" Value="Transparent"/>
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid x:Name="Grid">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        
                        <Border Background="{TemplateBinding Background}" x:Name="Bg" Grid.ColumnSpan="2" Margin="0,1,1,1"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"  Opacity="0.3"/>

                        <TextBlock Grid.Column="1" x:Name="FIcon" 
                                   FontSize="{Binding Path=(h:Cattach.FIconSize),RelativeSource={RelativeSource TemplatedParent}}"
                                   Text="{TemplateBinding h:Cattach.FIcon}" 
                                   h:Cattach.AllowsAnimation="{TemplateBinding IsChecked}"
                                   Foreground="{TemplateBinding Foreground}"
                                   Style="{DynamicResource FIcon}" RenderTransformOrigin="0.5,0.5"
                                   Margin="{TemplateBinding h:Cattach.FIconMargin}">
                            <TextBlock.RenderTransform>
                                <RotateTransform x:Name="rts"/>
                            </TextBlock.RenderTransform>
                        </TextBlock>
                    </Grid>
                    <!--z触发器-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=Self},Path=(h:Cattach.MouseOverForeground)}" />
                            <Setter Property="Opacity" TargetName="Bg" Value="0.55" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=Self},Path=(h:Cattach.PressForeground)}" />
                            <Setter Property="Opacity" TargetName="Bg" Value="0.6" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=Self},Path=(h:Cattach.PressForeground)}" />
                            <Setter Property="Opacity" TargetName="Bg" Value="0.6" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation To="-90" Duration="00:00:0.2" Storyboard.TargetProperty="Angle" Storyboard.TargetName="rts"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>

                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation To="0" Duration="00:00:0.2"  Storyboard.TargetProperty="Angle" Storyboard.TargetName="rts"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="{StaticResource S.Opacity.Disable}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ToggleButton}" x:Key="S.ToggleButton.Single" BasedOn="{StaticResource S.ToggleButton.Default}">
        <Setter Property="Foreground" Value="{DynamicResource S.Brush.TextForeground.Default}" />
        <Setter Property="Background" Value="{DynamicResource S.Brush.TextBackground.Default}" />
        <Setter Property="h:Cattach.FIconSize" Value="{DynamicResource S.FIcon.Size.Small}"/>
        <Setter Property="h:Cattach.FIconMargin" Value="0,1,3,1"/>
        <Setter Property="h:Cattach.FIcon" Value="&#xe63a;"/>
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="h:Cattach.CheckedForegroundBrush" Value="{DynamicResource S.Brush.Accent}"/>
        <Setter Property="h:Cattach.CheckedBackgroundBrush" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Border x:Name="border" Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                                Grid.ColumnSpan="2" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ContentPresenter/>
                        </Border>
                    </Grid>
                    <!--z触发器-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="0.8"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity" Value="0.7"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{Binding Path=(h:Cattach.CheckedBackgroundBrush),RelativeSource={RelativeSource TemplatedParent}}" TargetName="border"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="{StaticResource S.Opacity.Disable}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

 
</ResourceDictionary>