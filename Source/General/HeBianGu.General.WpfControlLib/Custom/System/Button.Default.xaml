<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:HeBianGu.General.WpfControlLib"
                    xmlns:h="QQ:908293466"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <Style x:Key="S.Button.Default" TargetType="Button">
        <Setter Property="Height" Value="{DynamicResource S.Window.Item.Height}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource S.Brush.TextBorderBrush.Default}"/>
        <Setter Property="Padding" Value="10,6"/>
        <Setter Property="Foreground" Value="{DynamicResource S.Brush.TextForeground.Default}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="{DynamicResource S.Brush.TextBackground.Default}"/>
        <Setter Property="h:Cattach.CornerRadius" Value="{DynamicResource S.Window.Item.CornerRadius}"/>
        <Setter Property="h:Cattach.FIcon" Value="{x:Null}"/>
        <Setter Property="h:Cattach.FIconSize" Value="{DynamicResource S.IconFontSize.Default}"/>
        <Setter Property="RenderTransform" Value="{StaticResource S.TransformGroup.Default}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Height="{TemplateBinding Height}">
                        <Border Background="{TemplateBinding Background}" CornerRadius="{Binding Path=(h:Cattach.CornerRadius),RelativeSource={RelativeSource TemplatedParent}}"/>

                        <Border BorderThickness="{TemplateBinding BorderThickness}"  BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="{Binding Path=(h:Cattach.CornerRadius),RelativeSource={RelativeSource TemplatedParent}}">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}">
                                <TextBlock x:Name="icon" Style="{DynamicResource FIcon}" FontSize="{TemplateBinding h:Cattach.FIconSize}" Text="{TemplateBinding h:Cattach.FIcon}"/>
                                <ContentPresenter x:Name="content" RecognizesAccessKey="True" VerticalAlignment="Center" Margin="6,0,0,0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </StackPanel>
                        </Border>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Content" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="content"/>
                        </Trigger>
                        <Trigger Property="h:Cattach.FIcon" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="icon"/>
                            <Setter Property="Margin" Value="0" TargetName="content"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value=".9"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Opacity" Value=".6"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.4"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="S.Button.Accent" TargetType="Button" BasedOn="{StaticResource S.Button.Default}">
        <Setter Property="Background" Value="{DynamicResource S.Brush.Accent}"/>
        <Setter Property="Foreground" Value="{DynamicResource S.Brush.TextForeground.White}"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <Style BasedOn="{StaticResource S.Button.Default}" TargetType="Button"/>

</ResourceDictionary>
