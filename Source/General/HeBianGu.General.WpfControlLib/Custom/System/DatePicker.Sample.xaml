<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:local="clr-namespace:HeBianGu.General.WpfControlLib"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:h="QQ:908293466"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">


    <!--默认样式-->
    <ControlTemplate x:Key="S.DatePick.Template.Default" TargetType="{x:Type DatePicker}">
        <Grid x:Name="PART_Root">
            <Border x:Name="Bg" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"  CornerRadius="{TemplateBinding h:Cattach.CornerRadius}"
                                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" />
            <Grid x:Name="PART_InnerGrid" Margin="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                
                <!--Label区域-->
                <ContentControl x:Name="Label" Template="{TemplateBinding h:Cattach.LabelTemplate}" IsTabStop="False" IsHitTestVisible="False"
                                            Content="{TemplateBinding h:Cattach.Label}" Margin="1"/>
                <!--附加内容区域-->
                <Border Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Center" >
                    <ContentControl  x:Name="PART_AttachContent"  VerticalAlignment="Center" VerticalContentAlignment="Center"  Foreground="{DynamicResource S.Brush.TextForeground.Assist}" Template="{TemplateBinding h:Cattach.AttachContent}"/>
                </Border>

                <!--下拉按钮-->
                <ToggleButton x:Name="PART_DropDownToggle" 
                                          IsTabStop="False" h:Cattach.FIcon="{TemplateBinding h:Cattach.FIcon}"
                                          Style="{DynamicResource S.ToggleButton.FIconSingle}" Width="20"
                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                          Grid.Column="3"  
                                          Margin="{TemplateBinding h:Cattach.FIconMargin}"
                                          h:Cattach.FIconSize="{TemplateBinding h:Cattach.FIconSize}"/>
                <!--水印-->
                <Border Grid.Column="1">
                    <TextBlock x:Name="Message"  Padding="0" Visibility="Collapsed" Text="{TemplateBinding h:Cattach.Watermark}" 
                                       Foreground="{TemplateBinding Foreground}" IsHitTestVisible="False" Opacity="{StaticResource S.Opacity.Watermark}" HorizontalAlignment="Left" TextAlignment="Center" 
                                       VerticalAlignment="Center" Margin="5,2,5,2" />
                </Border>
                <!--Date内容区-->
                <Grid Grid.Column="1">
                    <TextBox x:Name="PART_TextBox" Style="{DynamicResource EditableTextBoxStyle}" HorizontalAlignment="Stretch" 
                                     SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" IsHitTestVisible="True" IsReadOnly="True"
                                     FontFamily="{TemplateBinding FontFamily}" Foreground="{TemplateBinding Foreground}" FontSize="{TemplateBinding FontSize}"  Margin="{TemplateBinding Padding}"
                                     Text="{Binding Path=SelectedDate,Mode=OneWay,RelativeSource={RelativeSource TemplatedParent},StringFormat={StaticResource DateFormat}}"/>
                </Grid>
                <!--弹出日历-->
                <Popup x:Name="PART_Popup" AllowsTransparency="True" Placement="MousePoint"
                                   PlacementTarget="{Binding ElementName=PART_DropDownToggle}" StaysOpen="False" />
            </Grid>
        </Grid>

        <ControlTemplate.Triggers>
            <!--1.显示水印-->
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value="">
                <Setter TargetName="Message" Property="Visibility" Value="Visible" />
            </DataTrigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="{StaticResource S.Opacity.Disable}" />
            </Trigger>
            
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{Binding Path=(h:Cattach.MouseOverBorderBrush),RelativeSource={RelativeSource Self}}"/>
                <Setter  Property="Foreground" TargetName="PART_AttachContent" Value="{Binding Path=(h:Cattach.MouseOverBorderBrush),RelativeSource={RelativeSource Self}}"/>
                <Setter  Property="Foreground" TargetName="PART_DropDownToggle" Value="{Binding Path=(h:Cattach.MouseOverBorderBrush),RelativeSource={RelativeSource Self}}"/>
                <Setter  Property="Foreground" Value="{Binding Path=(h:Cattach.MouseOverBorderBrush),RelativeSource={RelativeSource Self}}"/>
                <Setter  Property="Foreground" TargetName="Message" Value="{Binding Path=(h:Cattach.MouseOverBorderBrush),RelativeSource={RelativeSource Self}}"/>

            </Trigger>
            
            <Trigger Property="IsFocused" Value="True">
                <Setter  Property="BorderBrush"  Value="{Binding Path=(h:Cattach.FocusBorderBrush),RelativeSource={RelativeSource Self}}"/>
                <Setter  Property="Foreground" TargetName="PART_AttachContent" Value="{DynamicResource S.Brush.Accent}"/>
                <Setter  Property="Foreground" TargetName="PART_DropDownToggle" Value="{DynamicResource S.Brush.Accent}"/>

            </Trigger>
            
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter  Property="BorderBrush" Value="{Binding Path=(h:Cattach.FocusBorderBrush),RelativeSource={RelativeSource Self}}"/>
                <Setter  Property="Foreground" TargetName="PART_AttachContent" Value="{DynamicResource S.Brush.Accent}"/>
                <Setter  Property="Foreground" TargetName="PART_DropDownToggle" Value="{DynamicResource S.Brush.Accent}"/>
                <Setter  Property="Foreground" Value="{DynamicResource S.Brush.Accent}"/>
                <Setter  Property="Foreground" TargetName="Message" Value="{DynamicResource S.Brush.Accent}"/> 
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--抬头在外边样式-->
    <ControlTemplate x:Key="S.DatePick.Template.Single" TargetType="{x:Type DatePicker}">
        <Grid x:Name="PART_Root">

            <Grid x:Name="PART_InnerGrid" Margin="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <Border x:Name="Bg" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Grid.Column="1" Grid.ColumnSpan="3"  CornerRadius="{TemplateBinding h:Cattach.CornerRadius}"
                                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" />
                
                <!--Label区域-->
                <ContentControl x:Name="Label" Template="{TemplateBinding h:Cattach.LabelTemplate}" IsTabStop="False"
                                            Content="{TemplateBinding h:Cattach.Label}" Margin="1"/>
                
                <!--附加内容区域-->
                <Border Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Center" >
                    <ContentControl  x:Name="PART_AttachContent" VerticalAlignment="Center" VerticalContentAlignment="Center"  Foreground="{DynamicResource S.Brush.TextForeground.Assist}" Template="{TemplateBinding h:Cattach.AttachContent}"/>
                </Border>
                
                <!--下拉按钮-->
                <ToggleButton x:Name="PART_DropDownToggle" 
                                          IsTabStop="False" h:Cattach.FIcon="{TemplateBinding h:Cattach.FIcon}"
                                          Style="{DynamicResource S.ToggleButton.FIconSingle}" Width="20"
                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                          Grid.Column="3"  h:Cattach.FIconMargin="{TemplateBinding h:Cattach.FIconMargin}"
                                          Margin="{TemplateBinding h:Cattach.FIconMargin}"
                                          h:Cattach.FIconSize="{TemplateBinding h:Cattach.FIconSize}"/>
                <!--水印-->
                <Border Grid.Column="1">
                    <TextBlock x:Name="Message"  Padding="0" Visibility="Collapsed" Text="{TemplateBinding h:Cattach.Watermark}" 
                                       Foreground="{TemplateBinding Foreground}" IsHitTestVisible="False" Opacity="{StaticResource S.Opacity.Watermark}" HorizontalAlignment="Left" TextAlignment="Center" 
                                       VerticalAlignment="Center" Margin="5,2,5,2" />
                </Border>
                <!--Date内容区-->
                <Grid Grid.Column="1">
                    <TextBox x:Name="PART_TextBox" Style="{DynamicResource EditableTextBoxStyle}" HorizontalAlignment="Stretch" 
                                     SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" IsHitTestVisible="True" IsReadOnly="True"
                                     FontFamily="{TemplateBinding FontFamily}" Foreground="{TemplateBinding Foreground}" FontSize="{TemplateBinding FontSize}"  Margin="{TemplateBinding Padding}"
                                     Text="{Binding Path=SelectedDate,Mode=OneWay,RelativeSource={RelativeSource TemplatedParent},StringFormat={StaticResource DateFormat}}"/>
                </Grid>
                <!--弹出日历-->
                <Popup x:Name="PART_Popup" AllowsTransparency="True" Placement="MousePoint"
                                   PlacementTarget="{Binding ElementName=PART_Root}" StaysOpen="False" />
            </Grid>
        </Grid>

        <ControlTemplate.Triggers>
            <!--1.显示水印-->
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value="">
                <Setter TargetName="Message" Property="Visibility" Value="Visible" />
            </DataTrigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="PART_Root" Property="Opacity" Value="{StaticResource S.Opacity.Disable}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{Binding Path=(h:Cattach.MouseOverBorderBrush),RelativeSource={RelativeSource Self}}"/>
                <Setter  Property="Foreground" TargetName="Label" Value="{Binding Path=(h:Cattach.MouseOverBorderBrush),RelativeSource={RelativeSource Self}}"/>
                <Setter  Property="Foreground" TargetName="PART_AttachContent" Value="{Binding Path=(h:Cattach.MouseOverBorderBrush),RelativeSource={RelativeSource Self}}"/>
                <Setter  Property="Foreground" TargetName="PART_DropDownToggle" Value="{Binding Path=(h:Cattach.MouseOverBorderBrush),RelativeSource={RelativeSource Self}}"/>
                <Setter  Property="Foreground" TargetName="Message" Value="{Binding Path=(h:Cattach.MouseOverBorderBrush),RelativeSource={RelativeSource Self}}"/>
                <Setter  Property="Foreground" Value="{Binding Path=(h:Cattach.MouseOverBorderBrush),RelativeSource={RelativeSource Self}}"/>


            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter  Property="Foreground" TargetName="Label" Value="{DynamicResource S.Brush.Accent}"/>
                <Setter  Property="Foreground" TargetName="PART_AttachContent" Value="{DynamicResource S.Brush.Accent}"/>
                <Setter  Property="BorderBrush"  Value="{Binding Path=(h:Cattach.FocusBorderBrush),RelativeSource={RelativeSource Self}}"/>

            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter  Property="BorderBrush" Value="{Binding Path=(h:Cattach.FocusBorderBrush),RelativeSource={RelativeSource Self}}"/>
                <Setter  Property="Foreground" TargetName="Label" Value="{DynamicResource S.Brush.Accent}"/>
                <Setter  Property="Foreground" TargetName="PART_AttachContent" Value="{DynamicResource S.Brush.Accent}"/>
                <Setter  Property="Foreground" TargetName="PART_DropDownToggle" Value="{DynamicResource S.Brush.Accent}"/>
                <Setter  Property="Foreground" TargetName="Message" Value="{DynamicResource S.Brush.Accent}"/>
                <Setter  Property="Foreground"  Value="{DynamicResource S.Brush.Accent}"/>


            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="S.DatePicker.Default" TargetType="{x:Type DatePicker}">
        <Setter Property="SelectedDate" Value="{x:Static sys:DateTime.Now}"/>
        <Setter Property="Foreground" Value="{DynamicResource S.Brush.TextForeground.Default}" />
        <Setter Property="Background" Value="{DynamicResource S.Brush.TextBackground.Default}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource S.Brush.TextBorderBrush.Default}" />
        <Setter Property="h:Cattach.FocusBorderBrush" Value="{DynamicResource S.Brush.Accent}" />
        <Setter Property="h:Cattach.MouseOverBorderBrush" Value="{DynamicResource S.Brush.Accent.MouseOver}" />
        <Setter Property="h:Cattach.FocusBackground" Value="{DynamicResource S.Brush.Accent}" />
        <Setter Property="h:Cattach.FIconSize" Value="18" />
        <Setter Property="h:Cattach.FIconMargin" Value="0,0,3,0" />
        <Setter Property="h:Cattach.FIcon" Value="&#xe6f3;" />
        <Setter Property="h:Cattach.CornerRadius" Value="{DynamicResource S.Window.Item.CornerRadius}" />
        <Setter Property="FontFamily" Value="{DynamicResource S.FontFamily.Default}" />
        <Setter Property="FontSize" Value="{DynamicResource S.FontSize.Default}" />
        <Setter Property="MinHeight" Value="26" />
        <Setter Property="Height" Value="{DynamicResource S.Window.Item.Height}" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Margin" Value="{DynamicResource S.Thickness.Margin.10.0}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="IsTodayHighlighted" Value="True" />
        <Setter Property="Padding" Value="10,0,0,0"/>
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="CalendarStyle" Value="{DynamicResource S.Calendar.Default}" />
        <Setter Property="Template" Value="{DynamicResource  S.DatePick.Template.Default}"/>
        <Setter Property="RenderTransform" Value="{StaticResource S.TransformGroup.Default}"/>
    </Style>

    <Style x:Key="S.DatePicker.Single" TargetType="{x:Type DatePicker}" BasedOn="{StaticResource S.DatePicker.Default}">
        <Setter Property="Template" Value="{DynamicResource  S.DatePick.Template.Single}"/>
    </Style>

    <!--DatePicker包含清除Text按钮的样式 ClearButtonDatePicker -->
    <Style TargetType="{x:Type DatePicker}" x:Key="S.DatePicker.Clear" BasedOn="{StaticResource S.DatePicker.Default}"> 
        <Setter Property="h:Cattach.AttachContent">
            <Setter.Value>
                <ControlTemplate>
                    <local:FButton FIcon="&#xe6f4;" Style="{DynamicResource S.FButton.Style.Transparent}" 
                                   IsTabStop="False" FIconMargin="0" AllowsAnimation="True" 
                                   h:Cattach.IsClearTextButtonBehaviorEnabled="True" 
                                   Command="h:Cattach.ClearTextCommand" 
                                   CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type DatePicker}}}"
                                   Margin="1,3,0,4" FIconSize="14" 
                                   Foreground="{TemplateBinding Foreground}" 
                                   Cursor="Arrow"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--DatePicker包含附加属性Label的样式 LabelDatePicker -->
    <Style TargetType="{x:Type DatePicker}" x:Key="S.DatePicker.Label" BasedOn="{StaticResource S.DatePicker.Default}">
        <Setter Property="h:Cattach.LabelTemplate" >
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Border MinWidth="70" Background="{DynamicResource S.Brush.Accent}" CornerRadius="{DynamicResource S.Window.Item.CornerRadius.Left}">
                        <TextBlock   Margin="3" VerticalAlignment="Center" HorizontalAlignment="Right" Foreground="{DynamicResource S.Brush.TextForeground.White}" Text="{TemplateBinding Content}"></TextBlock>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--DatePicker包含附加属性Label，以及ClearText按钮的样式 LabelClearButtonDatePicker -->
    <Style TargetType="{x:Type DatePicker}" x:Key="S.DatePicker.LabelClear" BasedOn="{StaticResource S.DatePicker.Label}">
        <Setter Property="h:Cattach.AttachContent">
            <Setter.Value>
                <ControlTemplate>
                    <local:FButton FIcon="&#xe6f4;" 
                                   Style="{DynamicResource S.FButton.Style.Transparent}" 
                                   IsTabStop="False" FIconMargin="0"
                                   h:Cattach.IsClearTextButtonBehaviorEnabled="True" 
                                   Command="h:Cattach.ClearTextCommand" 
                                   CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type DatePicker}}}"
                                   Margin="0,3,0,4" FIconSize="14"  Foreground="{TemplateBinding Foreground}"   Cursor="Arrow"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--DatePicker包含附加属性Label的样式 LabelDatePicker -->
    <Style TargetType="{x:Type DatePicker}" x:Key="S.DatePicker.Single.Label" BasedOn="{StaticResource S.DatePicker.Single}">
        <Setter Property="h:Cattach.LabelTemplate" >
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Border MinWidth="70"  Margin="3">
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Right" Foreground="{TemplateBinding Foreground}" Text="{TemplateBinding Content}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--DatePicker包含附加属性Label，以及ClearText按钮的样式 LabelClearButtonDatePicker -->
    <Style TargetType="{x:Type DatePicker}" x:Key="S.DatePicker.Single.LabelClear" BasedOn="{StaticResource S.DatePicker.Single.Label}">
        <Setter Property="h:Cattach.AttachContent">
            <Setter.Value>
                <ControlTemplate>
                    <local:FButton FIcon="&#xe6f4;" 
                                   Style="{DynamicResource S.FButton.Style.Transparent}" 
                                   IsTabStop="False" FIconMargin="0"
                                   h:Cattach.IsClearTextButtonBehaviorEnabled="True" 
                                   Command="h:Cattach.ClearTextCommand" 
                                   CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type DatePicker}}}"
                                   Margin="0,3,0,4" FIconSize="14"  Foreground="{TemplateBinding Foreground}"   Cursor="Arrow"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type DatePicker}" x:Key="S.DatePicker.Circle" BasedOn="{StaticResource S.DatePicker.Default}">
        <Setter Property="Padding" Value="30,0,0,0"/>
        <Setter Property="h:Cattach.FIconMargin" Value="0,0,10,0" />
        <Setter Property="Width" Value="180"/>
        <Setter Property="h:Cattach.CornerRadius" Value="{DynamicResource S.Window.Item.CornerRadius}"/>
    </Style>

    <Style TargetType="{x:Type DatePicker}" x:Key="S.DatePicker.Circle.Label" BasedOn="{StaticResource S.DatePicker.Label}">
        <Setter Property="Padding" Value="10,0,0,0"/>
        <Setter Property="h:Cattach.CornerRadius" Value="{DynamicResource S.Window.Item.CornerRadius}"/>
        <Setter Property="h:Cattach.FIconMargin" Value="0,0,10,0" />
        <Setter Property="h:Cattach.LabelTemplate" >
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Border MinWidth="90" Background="Transparent">
                        <TextBlock  Margin="3" VerticalAlignment="Center" HorizontalAlignment="Right" Foreground="{TemplateBinding Foreground}" Text="{TemplateBinding Content}"></TextBlock>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>