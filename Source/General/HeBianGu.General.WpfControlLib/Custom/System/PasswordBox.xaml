<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:h="QQ:908293466"
                    xmlns:local="clr-namespace:HeBianGu.General.WpfControlLib">


    <ControlTemplate x:Key="S.PasswordBox.Template.Default" TargetType="{x:Type PasswordBox}">
        <Grid x:Name="PART_Root">
            <Border x:Name="Bg" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                CornerRadius="{TemplateBinding h:Cattach.CornerRadius}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" />
            <Grid x:Name="PART_InnerGrid">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition  Width="Auto" />
                    <ColumnDefinition  Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition  Width="Auto" />
                </Grid.ColumnDefinitions>
                
                <!--Label区域-->
                <ContentControl x:Name="Label" 
                                            Margin="1" 
                                            Template="{TemplateBinding h:Cattach.LabelTemplate}"
                                            Content="{TemplateBinding h:Cattach.Label}"/>

                <TextBlock x:Name="ficon" Style="{DynamicResource S.TextBlock.FIcon}" HorizontalAlignment="Center"  Foreground="{TemplateBinding Foreground}"
                                       VerticalAlignment="Center" Grid.Column="1" 
                                       FontSize="{TemplateBinding h:Cattach.FIconSize}"
                                       Margin="{TemplateBinding h:Cattach.FIconMargin}" 
                                       Text="{TemplateBinding h:Cattach.FIcon}"/>
                
                <!--内容区域-->
                <ScrollViewer x:Name="PART_ContentHost" 
                                          BorderThickness="0" 
                                          Grid.Column="2" 
                                          IsTabStop="False" Margin="2"
                                          VerticalAlignment="Stretch" Background="{x:Null}" />

                <!--水印-->
                <TextBlock x:Name="Message"  Padding="{TemplateBinding Padding}" Visibility="Collapsed"
                                       Text="{TemplateBinding h:Cattach.Watermark}" Grid.Column="2"
                                       IsHitTestVisible="False"
                                       Opacity="{DynamicResource S.Opacity.Watermark}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="5,2,5,2" />
                <!--附加内容区域-->
                <Border Grid.Column="3" Margin="2"
                                    VerticalAlignment="Center" HorizontalAlignment="Center">
                    <ContentControl  x:Name="PART_AttachContent" VerticalAlignment="Center"  Foreground="{DynamicResource S.Brush.TextForeground.Assist}" VerticalContentAlignment="Center" Template="{TemplateBinding h:Cattach.AttachContent}" />
                </Border>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <!--显示水印--><!--
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Password}" Value="">
                <Setter TargetName="Message" Property="Visibility" Value="Visible" />
            </DataTrigger>
            --><!--显示水印--><!--
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Password}" Value="{x:Null}">
                <Setter TargetName="Message" Property="Visibility" Value="Visible" />
            </DataTrigger>-->

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{Binding Path=(h:Cattach.MouseOverBorderBrush),RelativeSource={RelativeSource Self}}"/>
                <Setter  Property="Foreground" TargetName="PART_AttachContent" Value="{Binding Path=(h:Cattach.MouseOverBorderBrush),RelativeSource={RelativeSource Self}}"/>
            </Trigger> 
            <Trigger Property="IsFocused" Value="True">
                <Setter  Property="Foreground" TargetName="Label" Value="{DynamicResource S.Brush.Accent}"/>
                <Setter  Property="BorderBrush"  Value="{Binding Path=(h:Cattach.FocusBorderBrush),RelativeSource={RelativeSource Self}}"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter  Property="BorderBrush" Value="{Binding Path=(h:Cattach.FocusBorderBrush),RelativeSource={RelativeSource Self}}"/>
                <Setter  Property="Foreground" TargetName="Label" Value="{DynamicResource S.Brush.Accent}"/>
                <Setter  Property="Foreground" TargetName="PART_AttachContent" Value="{DynamicResource S.Brush.Accent}"/>
            </Trigger>
            <!--不可用-->
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="PART_Root" Property="Opacity" Value="{DynamicResource S.Opacity.Disable}"></Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="S.PasswordBox.Template.Single" TargetType="{x:Type PasswordBox}">
        <Grid x:Name="PART_Root"> 
            <Grid x:Name="PART_InnerGrid">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition  Width="Auto" />
                    <ColumnDefinition  Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition  Width="Auto" />
                </Grid.ColumnDefinitions>

                <Border x:Name="Bg" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                CornerRadius="{TemplateBinding h:Cattach.CornerRadius}"
                                BorderBrush="{TemplateBinding BorderBrush}" Grid.Column="1" Grid.ColumnSpan="4"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" />

                <Border x:Name="boder_mouseover" BorderBrush="{TemplateBinding BorderBrush}" 
                                Background="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=(h:Cattach.MouseOverBackground)}"
                                Opacity="0.5"  Grid.Column="1" Grid.ColumnSpan="4"
                                CornerRadius="{TemplateBinding h:Cattach.CornerRadius}"
                                BorderThickness="{TemplateBinding BorderThickness}"/>

                <Border x:Name="boder" BorderBrush="{TemplateBinding BorderBrush}" 
                                Background="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=(h:Cattach.FocusBackground)}"
                                Opacity="0"  Grid.Column="1" Grid.ColumnSpan="4"
                                CornerRadius="{TemplateBinding h:Cattach.CornerRadius}"
                                BorderThickness="{TemplateBinding BorderThickness}"/>

                <!--Label区域-->
                <ContentControl x:Name="Label" Margin="1" 
                                            Template="{TemplateBinding h:Cattach.LabelTemplate}"
                                            Content="{TemplateBinding h:Cattach.Label}"/>


                <TextBlock x:Name="ficon" Style="{DynamicResource S.TextBlock.FIcon}" HorizontalAlignment="Center"  Foreground="{TemplateBinding Foreground}"
                                       VerticalAlignment="Center" Grid.Column="1" 
                                       FontSize="{TemplateBinding h:Cattach.FIconSize}"
                                       Margin="{TemplateBinding h:Cattach.FIconMargin}" 
                                       Text="{TemplateBinding h:Cattach.FIcon}"/>
                
                <!--内容区域-->
                <ScrollViewer x:Name="PART_ContentHost" 
                                          BorderThickness="0" 
                                          Grid.Column="2" 
                                          IsTabStop="False" Margin="2"
                                          VerticalAlignment="Stretch" Background="{x:Null}" />
                <!--附加内容区域-->
                <Border  Grid.Column="3" Width="{DynamicResource S.Window.Item.Height}" VerticalAlignment="Center" HorizontalAlignment="Center" >
                    <ContentControl VerticalAlignment="Center" x:Name="PART_AttachContent"  Foreground="{DynamicResource S.Brush.TextForeground.Assist}"
                                    HorizontalAlignment="Center" VerticalContentAlignment="Center" 
                                    Template="{TemplateBinding h:Cattach.AttachContent}" />
                </Border>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{Binding Path=(h:Cattach.MouseOverBorderBrush),RelativeSource={RelativeSource Self}}"/>
                <Setter  Property="Foreground" TargetName="Label" Value="{Binding Path=(h:Cattach.MouseOverBorderBrush),RelativeSource={RelativeSource Self}}"/>
                <Setter  Property="Foreground" TargetName="PART_AttachContent" Value="{Binding Path=(h:Cattach.MouseOverBorderBrush),RelativeSource={RelativeSource Self}}"/>

                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="boder_mouseover" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.3" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>

                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="boder_mouseover" Storyboard.TargetProperty="Opacity" To="0.5" Duration="0:0:1" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
                
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter  Property="BorderBrush" Value="{Binding Path=(h:Cattach.FocusBorderBrush),RelativeSource={RelativeSource Self}}"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter  Property="BorderBrush" Value="{Binding Path=(h:Cattach.FocusBorderBrush),RelativeSource={RelativeSource Self}}"/>
                <Setter  Property="Foreground" TargetName="Label" Value="{DynamicResource S.Brush.Accent}"/>
                <Setter  Property="Foreground" TargetName="PART_AttachContent" Value="{DynamicResource S.Brush.Accent}"/>

                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="boder" Storyboard.TargetProperty="Opacity" To="0.5" Duration="0:0:0.1" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>

                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="boder" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            <!--不可用-->
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="PART_Root" Property="Opacity" Value="{DynamicResource S.Opacity.Disable}"></Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <!--TextBox默认样式-->
    <Style TargetType="{x:Type PasswordBox}" x:Key="S.PasswordBox.Default">
        <Setter Property="ContextMenu" Value="{DynamicResource TextBoxContextMenu}" />
        <Setter Property="SelectionBrush" Value="{DynamicResource S.Brush.Accent}" />
        <Setter Property="FontFamily" Value="{DynamicResource  S.FontFamily.Default}" />
        <Setter Property="FontSize" Value="{DynamicResource S.FontSize.Default}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="PasswordChar" Value="●"/>
        <Setter Property="Height" Value="{DynamicResource S.Window.Item.Height}" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Background" Value="{DynamicResource S.Brush.TextBackground.Default}" />
        <Setter Property="Foreground" Value="{DynamicResource S.Brush.TextForeground.Default}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderBrush" Value="{DynamicResource S.Brush.Accent}" />
        <Setter Property="h:Cattach.FocusBorderBrush" Value="{DynamicResource S.Brush.Accent}" />
        <Setter Property="h:Cattach.MouseOverBorderBrush" Value="{DynamicResource S.Brush.Accent.MouseOver}" />
        <Setter Property="h:Cattach.CornerRadius" Value="{DynamicResource S.Window.Item.CornerRadius}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderBrush" Value="{DynamicResource S.Brush.TextBorderBrush.Default}" />
        <!-- change SnapsToDevicePixels to True to view a better border and validation error -->
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <!--英 ['kærət]  美 ['kærət]  插入符号-->
        <Setter Property="CaretBrush" Value="{DynamicResource S.Brush.Accent}" />

        <Setter Property="h:Cattach.FocusBorderBrush" Value="{DynamicResource S.Brush.Accent}" />
        <Setter Property="h:Cattach.FocusBackground" Value="{DynamicResource S.Brush.TextForeground.Selected}" />

        <Setter Property="h:Cattach.MouseOverBorderBrush" Value="{DynamicResource S.Brush.Accent.MouseOver}"/>
        <Setter Property="h:Cattach.MouseOverBackground" Value="{DynamicResource S.Brush.TextForeground.MouseOver}"/>

        <Setter Property="h:Cattach.FIcon" Value="&#xe6ed;"/>
        <Setter Property="h:Cattach.FIconSize" Value="{DynamicResource S.FIcon.Size.Default}"/>
        <Setter Property="h:Cattach.FIconMargin" Value="5,0,0,0"/>

        <Setter Property="h:Cattach.TitleForeground" Value="{DynamicResource S.Brush.TextForeground.Default}"/>
        <Setter Property="h:Cattach.TitleMargin" Value="{DynamicResource S.Thickness.Margin.10.0}"/>
        <Setter Property="h:Cattach.TitleWidth" Value="{DynamicResource S.Window.Title.Width}"/>
        
        <Setter Property="Template" Value="{StaticResource S.PasswordBox.Template.Default}"/>
    </Style>
    
    <Style TargetType="{x:Type PasswordBox}" x:Key="S.PasswordBox.Single" BasedOn="{StaticResource S.PasswordBox.Default}"> 
        <Setter Property="Template" Value="{StaticResource S.PasswordBox.Template.Single}"/>
    </Style>

    <!--TextBox包含清除Text按钮的样式-->
    <Style TargetType="{x:Type PasswordBox}" x:Key="S.PasswordBox.Clear" BasedOn="{StaticResource S.PasswordBox.Default}">
        <Setter Property="h:Cattach.AttachContent">
            <Setter.Value>
                <ControlTemplate>

                    <Button Style="{DynamicResource S.Button.Clear}" Width="Auto"
                                h:Cattach.IsClearTextButtonBehaviorEnabled="True" 
                            CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type PasswordBox}}}"
                            Command="h:Cattach.ClearTextCommand"/>
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--TextBox包含附加属性Label的样式-->
    <Style TargetType="{x:Type PasswordBox}" x:Key="S.PasswordBox.Label" BasedOn="{StaticResource S.PasswordBox.Default}">
        <Setter Property="h:Cattach.LabelTemplate" >
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Border MinWidth="70"  Background="{DynamicResource S.Brush.Accent}" CornerRadius="{DynamicResource S.Window.Item.CornerRadius.Left}">
                        <TextBlock VerticalAlignment="Center" 
                                   Foreground="{DynamicResource S.Brush.TextForeground.White}" 
                                   HorizontalAlignment="Right" 
                                   Margin="3" 
                                   Text="{TemplateBinding Content}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--TextBox包含附加属性Label，以及ClearText按钮的样式-->
    <Style TargetType="{x:Type PasswordBox}" x:Key="S.PasswordBox.LabelClear" BasedOn="{StaticResource S.PasswordBox.Label}">
        <Setter Property="h:Cattach.AttachContent">
            <Setter.Value>
                <ControlTemplate>

                    <Button Style="{DynamicResource S.Button.Clear}" Width="Auto"
                                h:Cattach.IsClearTextButtonBehaviorEnabled="True" 
                            CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type PasswordBox}}}"
                            Command="h:Cattach.ClearTextCommand"/>
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--TextBox包含附加属性Label的样式-->
    <Style TargetType="{x:Type PasswordBox}" x:Key="S.PasswordBox.Single.Label" BasedOn="{StaticResource S.PasswordBox.Single}">
        <Setter Property="h:Cattach.LabelTemplate" >
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Border  Width="{Binding RelativeSource={RelativeSource AncestorType=PasswordBox},Path=(h:Cattach.TitleWidth)}"  
                             Margin="{Binding RelativeSource={RelativeSource AncestorType=PasswordBox},Path=(h:Cattach.TitleMargin)}">
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Left" 
                                   Foreground="{Binding RelativeSource={RelativeSource AncestorType=PasswordBox},Path=(h:Cattach.TitleForeground)}" 
                                   Text="{TemplateBinding Content}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--TextBox包含附加属性Label，以及ClearText按钮的样式-->
    <Style TargetType="{x:Type PasswordBox}" x:Key="S.PasswordBox.Single.LabelClear" BasedOn="{StaticResource S.PasswordBox.Single.Label}">
        <Setter Property="h:Cattach.AttachContent">
            <Setter.Value>
                <ControlTemplate>
                    <Button Style="{DynamicResource S.Button.Clear}" Width="Auto"
                            h:Cattach.IsClearTextButtonBehaviorEnabled="True" 
                            CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type PasswordBox}}}"
                            Command="h:Cattach.ClearTextCommand"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>