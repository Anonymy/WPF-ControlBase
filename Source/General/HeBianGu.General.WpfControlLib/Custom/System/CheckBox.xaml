<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:h="QQ:908293466"
                    xmlns:local="clr-namespace:HeBianGu.General.WpfControlLib">
    
    <Style x:Key="S.CheckBox.Default" TargetType="{x:Type CheckBox}">
        <Setter Property="RenderTransform" Value="{StaticResource S.TransformGroup.Default}"/>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource S.Brush.TextForeground.Default}"></Setter>
        <Setter Property="FontFamily" Value="{DynamicResource  S.FontFamily.Default}" />
        <Setter Property="Padding" Value="0"></Setter>
        <!--<Setter Property="Height" Value="{DynamicResource S.Window.Item.Height}" />-->
        <Setter Property="h:Cattach.FIconMargin" Value="1,1,10,1"></Setter>
        <Setter Property="h:Cattach.FIconSize" Value="{DynamicResource S.FIcon.Size.Default}"></Setter>
        <Setter Property="FontSize" Value="{DynamicResource S.FontSize.Default}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="grid" Margin="{TemplateBinding Padding}" VerticalAlignment="Center">
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                            <TextBlock  x:Name="icon" Style="{DynamicResource FIcon}" Text="&#xe6ac;"
                                        FontSize="{TemplateBinding h:Cattach.FIconSize}"
                                        Margin="{TemplateBinding h:Cattach.FIconMargin}"
                                        Foreground="{TemplateBinding Foreground}"/>
                            <ContentPresenter VerticalAlignment="Center"/>
                        </StackPanel>
                    </Grid>
                    <!--触发器：设置选中状态符号-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Text" Value="&#xe624;" TargetName="icon" ></Setter>
                            <Setter Property="Foreground" Value="{DynamicResource S.Brush.Accent}"></Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Text" Value="&#xe62b;" TargetName="icon" ></Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource S.Brush.Accent}"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="{DynamicResource S.Opacity.Disable}" TargetName="grid" ></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="S.CheckBox.Single" TargetType="{x:Type CheckBox}" BasedOn="{StaticResource S.CheckBox.Default}">
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource S.Brush.TextForeground.Default}"></Setter>
        <Setter Property="FontFamily" Value="{DynamicResource  S.FontFamily.Default}" />
        <Setter Property="Height" Value="{DynamicResource S.Window.Item.Height}" />
        <Setter Property="Padding" Value="0"></Setter>
        <Setter Property="h:Cattach.FIconMargin" Value="1,1,10,1"></Setter>
        <Setter Property="h:Cattach.FIconSize" Value="{DynamicResource S.FIcon.Size.Large}"/>
        <Setter Property="FontSize" Value="{DynamicResource S.FontSize.Default}"/>
        <Setter Property="h:Cattach.UnSelectedText" Value="&#xe843;"/>
        <Setter Property="h:Cattach.SelectedText" Value="&#xe841;"/>
        <Setter Property="h:Cattach.SelectedForegroundBrush" Value="{DynamicResource S.Brush.Accent}"/>
        <Setter Property="h:Cattach.FIcon" Value="&#xe842;"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <TextBlock  x:Name="icon" Style="{DynamicResource FIcon}" Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=(h:Cattach.UnSelectedText) }" 
                                VerticalAlignment="Center" HorizontalAlignment="Center"
                                        FontSize="{TemplateBinding h:Cattach.FIconSize}"
                                        Margin="{TemplateBinding h:Cattach.FIconMargin}"
                                        Foreground="{TemplateBinding Foreground}"/>
                    <!--触发器：设置选中状态符号-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Text" Value="{Binding RelativeSource={RelativeSource AncestorType=CheckBox},Path=(h:Cattach.SelectedText)}" TargetName="icon"/>
                            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType=CheckBox},Path=(h:Cattach.SelectedForegroundBrush)}"></Setter>
                        </Trigger>
                        
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Text" Value="{Binding RelativeSource={RelativeSource AncestorType=CheckBox},Path=(h:Cattach.UnSelectedText)}" TargetName="icon"/>
                        </Trigger>

                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Text" Value="{Binding RelativeSource={RelativeSource AncestorType=CheckBox},Path=(h:Cattach.UnSelectedText)}" TargetName="icon"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource S.Brush.Accent.MouseOver}"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="{DynamicResource S.Opacity.Disable}" TargetName="icon" ></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="S.RadioButton.Default" TargetType="{x:Type RadioButton}">
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource S.Brush.TextForeground.Default}"/>
        <Setter Property="FontFamily" Value="{StaticResource  S.FontFamily.Default}" />
        <Setter Property="Height" Value="{DynamicResource S.Window.Item.Height}" />
        <Setter Property="Padding" Value="0"></Setter>
        <Setter Property="h:Cattach.FIconMargin" Value="1,1,10,1"></Setter>
        <Setter Property="h:Cattach.FIconSize" Value="{DynamicResource S.FIcon.Size.Default}"/>
        <Setter Property="FontSize" Value="{DynamicResource S.FontSize.Default}"/>
        <Setter Property="RenderTransform" Value="{StaticResource S.TransformGroup.Default}"/>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid x:Name="grid" Margin="{TemplateBinding Padding}" VerticalAlignment="Center">
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                            <TextBlock x:Name="icon" Text="&#xe630;" Style="{DynamicResource FIcon}" SnapsToDevicePixels="True"
                                       FontSize="{TemplateBinding h:Cattach.FIconSize}"
                                        Margin="{TemplateBinding h:Cattach.FIconMargin}"
                                        Foreground="{TemplateBinding Foreground}"/>
                            <ContentPresenter VerticalAlignment="Center"/>
                        </StackPanel>
                    </Grid>
                    <!--触发器：设置选中状态符号-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Text" Value="&#xe631;" TargetName="icon" ></Setter>
                            <Setter Property="Foreground" Value="{DynamicResource S.Brush.Accent}"></Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource S.Brush.Accent}"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="{DynamicResource S.Opacity.Disable}" TargetName="grid" ></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="S.RadioButton.Box" TargetType="{x:Type RadioButton}">
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource S.Brush.TextForeground.Default}"/>
        <Setter Property="Padding" Value="3 2 3 2"></Setter>
        <Setter Property="FontFamily" Value="{DynamicResource S.FontFamily.Default}" />
        <Setter Property="FontSize" Value="{DynamicResource S.FontSize.Default}"></Setter>
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="Height" Value="{DynamicResource S.Window.Item.Height}" />
        <Setter Property="SnapsToDevicePixels" Value="true"></Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource S.Brush.TextForeground.Default}" />
        <Setter Property="RenderTransform" Value="{StaticResource S.TransformGroup.Default}"/>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid x:Name="grid" VerticalAlignment="Center">
                        <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"  Height="{TemplateBinding Height}" HorizontalAlignment="Stretch"
                                Background="{TemplateBinding Background}" Width="{TemplateBinding Width}">
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <!--选中的状态标识-->
                        <TextBlock Text="&#xe627;" x:Name="checkState" Style="{DynamicResource FIcon}" VerticalAlignment="Bottom" Visibility="Collapsed"
                                   FontSize="25" Margin="0,0,-3,-7" HorizontalAlignment="Right" 
                                   Foreground="{TemplateBinding Foreground}"/>
                    </Grid>
                    <!--触发器：设置选中状态符号-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Visibility" Value="Visible" TargetName="checkState" ></Setter>
                            <Setter Property="BorderBrush" Value="{DynamicResource S.Brush.Accent}"></Setter>
                            <Setter Property="Foreground" Value="{DynamicResource S.Brush.Accent}" TargetName="checkState"></Setter>
                            <Setter Property="Foreground" Value="{DynamicResource S.Brush.Accent}"></Setter>
                            <Setter Property="BorderThickness" Value="1.3"></Setter>

                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" Value="{DynamicResource S.Brush.Accent}"></Setter>
                            <Setter Property="Foreground" Value="{DynamicResource S.Brush.Accent}" TargetName="checkState"></Setter>
                            <Setter Property="Foreground" Value="{DynamicResource S.Brush.Accent}"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="{DynamicResource S.Opacity.Disable}" TargetName="grid" ></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="S.CheckBox.Box" TargetType="{x:Type CheckBox}" BasedOn="{StaticResource S.CheckBox.Default}">
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource S.Brush.TextForeground.Assist}"></Setter>
        <Setter Property="Padding" Value="3,0"></Setter>
        <Setter Property="FontFamily" Value="{DynamicResource S.FontFamily.Default}" />
        <Setter Property="FontSize" Value="{DynamicResource FontSize}"></Setter>
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="Height" Value="{DynamicResource S.Window.Item.Height}" />
        <Setter Property="SnapsToDevicePixels" Value="true"></Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource S.Brush.TextForeground.Assist}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="grid" VerticalAlignment="Center">
                        <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"  Height="{TemplateBinding Height}" HorizontalAlignment="Stretch"
                                Background="{TemplateBinding Background}" Width="{TemplateBinding Width}"
                                CornerRadius="{DynamicResource S.Window.Item.CornerRadius}">
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <!--选中的状态标识-->
                        <TextBlock Text="&#xe627;" x:Name="checkState" Style="{DynamicResource FIcon}" VerticalAlignment="Bottom" Visibility="Collapsed"
                                   FontSize="25" Margin="0,0,-4,-8" HorizontalAlignment="Right" 
                                   Foreground="{TemplateBinding Foreground}"/>
                    </Grid>
                    <!--触发器：设置选中状态符号-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Visibility" Value="Visible" TargetName="checkState" ></Setter>
                            <Setter Property="BorderBrush" Value="{DynamicResource S.Brush.Accent}"></Setter>
                            <Setter Property="Foreground" Value="{DynamicResource S.Brush.Accent}" TargetName="checkState"></Setter>
                            <Setter Property="Foreground" Value="{DynamicResource S.Brush.Accent}"></Setter>
                            <Setter Property="BorderThickness" Value="1.3"></Setter>

                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" Value="{DynamicResource S.Brush.Accent}"></Setter>
                            <Setter Property="Foreground" Value="{DynamicResource S.Brush.Accent}" TargetName="checkState"></Setter>
                            <Setter Property="Foreground" Value="{DynamicResource S.Brush.Accent}"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="{DynamicResource S.Opacity.Disable}" TargetName="grid" ></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>