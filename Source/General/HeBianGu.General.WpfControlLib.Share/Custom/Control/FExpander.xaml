<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:h="QQ:908293466"
                    xmlns:local="clr-namespace:HeBianGu.General.WpfControlLib">

    <Style x:Key="S.FExpander.Default" TargetType="{x:Type local:FExpander}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <!--  内容背景色  -->
        <Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.BackgroundDefault}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
        <Setter Property="MinWidth" Value="180" />
        <Setter Property="CanHide" Value="True" />
        <Setter Property="IsExpanded" Value="False" />
        <Setter Property="Hint" Value="{x:Null}" />
        <!--  详细信息颜色  -->
        <Setter Property="HintBackground" Value="Transparent" />
        <Setter Property="HintForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}" />

        <Setter Property="TitleBackground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
        <Setter Property="TitleForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}" />

        <Setter Property="FontSize" Value="{DynamicResource {x:Static h:FontSizeKeys.Header}}" />
        <Setter Property="HeaderHeight" Value="{Binding Source={StaticResource {x:Static h:SystemKeys.RowHeight}}, Converter={x:Static h:XConverter.MathMultiplicationConverter}, ConverterParameter=1.2}" />

        <Style.Triggers>
            <Trigger Property="CanHide" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:FExpander}">
                            <Grid Background="{TemplateBinding Background}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup>
                                        <VisualState x:Name="Normal">
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="height"
                                                                 Storyboard.TargetProperty="(Height)"
                                                                 To="0"
                                                                 Duration="0:0:0.15" />
                                                <DoubleAnimation Storyboard.TargetName="angle"
                                                                 Storyboard.TargetProperty="(Angle)"
                                                                 To="0"
                                                                 Duration="0:0:0.15" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="StartNormal">
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="height"
                                                                 Storyboard.TargetProperty="(Height)"
                                                                 To="0"
                                                                 Duration="0:0:0" />
                                                <DoubleAnimation Storyboard.TargetName="angle"
                                                                 Storyboard.TargetProperty="(Angle)"
                                                                 To="0"
                                                                 Duration="0:0:0" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Expand">
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="height"
                                                                 Storyboard.TargetProperty="(Height)"
                                                                 To="{Binding ElementName=content, Path=ActualHeight}"
                                                                 Duration="0:0:0.15" />
                                                <DoubleAnimation Storyboard.TargetName="angle"
                                                                 Storyboard.TargetProperty="(Angle)"
                                                                 To="90"
                                                                 Duration="0:0:0.15" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="StartExpand">
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="height"
                                                                 Storyboard.TargetProperty="(Height)"
                                                                 To="{Binding ElementName=content, Path=ActualHeight}"
                                                                 Duration="0:0:0" />
                                                <DoubleAnimation Storyboard.TargetName="angle"
                                                                 Storyboard.TargetProperty="(Angle)"
                                                                 To="90"
                                                                 Duration="0:0:0" />
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <!--  抬头部分  -->
                                <Border x:Name="border"
                                        Height="{TemplateBinding HeaderHeight}"
                                        Margin="0,0,0,0"
                                        Background="{TemplateBinding TitleBackground}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition x:Name="IconFontWidth" Width="Auto" />
                                            <ColumnDefinition />
                                            <ColumnDefinition x:Name="hintWidth" Width="Auto" />
                                            <ColumnDefinition x:Name="algleWidth" Width="Auto" />
                                        </Grid.ColumnDefinitions>

                                        <local:FButton Grid.ColumnSpan="5"
                                                       Width="{TemplateBinding Width}"
                                                       Background="Transparent"
                                                       BorderThickness="0"
                                                       Command="local:FExpander.ButtonClickCommand"
                                                       Foreground="Transparent"
                                                       Icon=""
                                                       MouseOverBackground="Transparent" />

                                        <!--  图像  -->
                                        <TextBlock Grid.Column="0"
                                                   Width="Auto"
                                                   Margin="{Binding RelativeSource={RelativeSource AncestorType=local:FExpander}, Path=(h:Cattach.FIconMargin)}"
                                                   HorizontalAlignment="Center"
                                                   VerticalAlignment="Center"
                                                   FontSize="{Binding RelativeSource={RelativeSource AncestorType=local:FExpander}, Path=(h:Cattach.FIconSize)}"
                                                   Foreground="{TemplateBinding HintForeground}"
                                                   Opacity="1"
                                                   Style="{DynamicResource {x:Static h:TextBlockKeys.Icon}}"
                                                   Text="{TemplateBinding IconFont}" />

                                        <!--  抬头文本  -->
                                        <TextBlock Grid.Column="1"
                                                   Margin="10,8,5,8"
                                                   HorizontalAlignment="Left"
                                                   VerticalAlignment="Center"
                                                   FontSize="{DynamicResource {x:Static h:FontSizeKeys.Default}}"
                                                   Foreground="{TemplateBinding HintForeground}"
                                                   IsHitTestVisible="False"
                                                   Text="{TemplateBinding Header}" />

                                        <!--  详细信息背景  -->
                                        <Border Grid.Column="2"
                                                Margin="0,0,5,0"
                                                VerticalAlignment="Center"
                                                Background="{TemplateBinding HintBackground}"
                                                IsHitTestVisible="False">
                                            <TextBlock Margin="8,1"
                                                       VerticalAlignment="Center"
                                                       Foreground="{TemplateBinding HintForeground}"
                                                       Text="{TemplateBinding Hint}" />
                                            <!--  FontSize="11"  -->
                                        </Border>

                                        <!--  下拉图标  -->
                                        <Grid Grid.Column="3"
                                              Margin="10,0"
                                              VerticalAlignment="Center"
                                              IsHitTestVisible="True">
                                            <Polyline Opacity="1"
                                                      Points="0,0 5,5 0,10"
                                                      RenderTransformOrigin="0.5,0.5"
                                                      Stroke="{TemplateBinding HintForeground}">
                                                <Polyline.RenderTransform>
                                                    <TransformGroup>
                                                        <RotateTransform x:Name="angle" Angle="0" />
                                                    </TransformGroup>
                                                </Polyline.RenderTransform>
                                            </Polyline>
                                        </Grid>
                                    </Grid>
                                </Border>

                                <Grid x:Name="height"
                                      Grid.Row="1"
                                      Height="{Binding ActualHeight, ElementName=content}"
                                      Background="{TemplateBinding Background}"
                                      ClipToBounds="True">
                                    <Canvas x:Name="canvas" Height="{Binding ActualHeight, ElementName=content}" MinWidth="{Binding ActualWidth, ElementName=content}">
                                        <Grid x:Name="content" MinWidth="{Binding ActualWidth, ElementName=canvas}" ClipToBounds="True">
                                            <ContentPresenter />
                                        </Grid>
                                    </Canvas>
                                </Grid>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Hint" Value="{x:Null}">
                                    <Setter TargetName="hintWidth" Property="Width" Value="0" />
                                </Trigger>

                                <Trigger Property="IconFont" Value="{x:Null}">
                                    <Setter TargetName="IconFontWidth" Property="Width" Value="0" />
                                </Trigger>
                                <Trigger Property="Content" Value="{x:Null}">
                                    <Setter TargetName="algleWidth" Property="MaxWidth" Value="0" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="{DynamicResource {x:Static h:OpacityKeys.Disable}}" />
                                </Trigger>
                                <!--<Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.AccentMouseOverForeground}}" TargetName="border"/>
                                </Trigger>-->
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>

            <Trigger Property="CanHide" Value="False">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:FExpander}">
                            <Grid Background="{TemplateBinding Background}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Border BorderBrush="{DynamicResource {x:Static h:BrushKeys.Accent}}" BorderThickness="0,0,0,1">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition x:Name="IconFontWidth" Width="Auto" />
                                            <ColumnDefinition />
                                            <ColumnDefinition x:Name="hintWidth" Width="Auto" />
                                        </Grid.ColumnDefinitions>

                                        <!--  图像  -->
                                        <TextBlock Grid.Column="0"
                                                   Margin="0,0,0,0"
                                                   HorizontalAlignment="Center"
                                                   VerticalAlignment="Center"
                                                   FontSize="{Binding RelativeSource={RelativeSource AncestorType=local:FExpander}, Path=(h:Cattach.FIconSize)}"
                                                   Style="{DynamicResource {x:Static h:TextBlockKeys.Icon}}"
                                                   Text="{TemplateBinding IconFont}" />

                                        <TextBlock Grid.Column="1"
                                                   Margin="10,8,5,8"
                                                   HorizontalAlignment="Left"
                                                   VerticalAlignment="Center"
                                                   FontSize="{DynamicResource {x:Static h:FontSizeKeys.Default}}"
                                                   Foreground="{TemplateBinding Foreground}"
                                                   Text="{TemplateBinding Header}" />

                                        <Border Grid.Column="2"
                                                Margin="0,0,5,0"
                                                VerticalAlignment="Center"
                                                Background="{TemplateBinding HintBackground}">
                                            <TextBlock Margin="8,1"
                                                       VerticalAlignment="Center"
                                                       Foreground="{TemplateBinding HintForeground}"
                                                       Text="{TemplateBinding Hint}" />
                                        </Border>
                                    </Grid>
                                </Border>

                                <Border Grid.Row="1"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="#e6e6e6"
                                        BorderThickness="0,0,0,1">
                                    <ContentPresenter />
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Hint" Value="{x:Null}">
                                    <Setter TargetName="hintWidth" Property="Width" Value="0" />
                                </Trigger>
                                <Trigger Property="IconFont" Value="{x:Null}">
                                    <Setter TargetName="IconFontWidth" Property="Width" Value="0" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>

    </Style>

    <Style x:Key="S.FExpander.Accent" BasedOn="{StaticResource S.FExpander.Default}" TargetType="{x:Type local:FExpander}">
        <!--  内容背景色  -->
        <Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}" />

        <Setter Property="HintBackground" Value="Transparent" />
        <Setter Property="HintForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}" />

        <Setter Property="TitleBackground" Value="{DynamicResource {x:Static h:BrushKeys.WhiteOpactiy4}}" />
        <Setter Property="TitleForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}" />
    </Style>

    <Style BasedOn="{StaticResource S.FExpander.Default}" TargetType="{x:Type local:FExpander}" />
</ResourceDictionary>
