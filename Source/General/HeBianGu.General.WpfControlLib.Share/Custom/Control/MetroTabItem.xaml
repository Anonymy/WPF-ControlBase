<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:h="QQ:908293466"
                    xmlns:local="clr-namespace:HeBianGu.General.WpfControlLib">


    <Style TargetType="{x:Type local:MetroTabItem}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="MinWidth" Value="150" />
        <Setter Property="Background" Value="Red" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:MetroTabItem}">
                    <Grid Background="#00000000">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="iconWidth" Width="Auto" />
                            <ColumnDefinition x:Name="contentWidth" />
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <!--<DoubleAnimation Storyboard.TargetName="back" Storyboard.TargetProperty="(UIElement.Opacity)" To="1" Duration="0:0:02"/>-->
                                        <!--<ColorAnimation Storyboard.TargetName="title" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" To="#A5000000" Duration="0:0:0.2"/>-->
                                        <!--<DoubleAnimation Storyboard.TargetName="icon" Storyboard.TargetProperty="(UIElement.Opacity)" To="0" Duration="0:0:0.2"/>-->
                                        <!--<DoubleAnimation Storyboard.TargetName="iconMove" Storyboard.TargetProperty="(UIElement.Opacity)" To="1" Duration="0:0:0.2"/>-->
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="back"
                                   Grid.ColumnSpan="2"
                                   Fill="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}"
                                   Opacity="0" />

                        <Rectangle x:Name="backstory"
                                   Grid.ColumnSpan="2"
                                   Fill="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}"
                                   Opacity="0" />

                        <StackPanel Width="45"
                                    Height="45"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center">
                            <TextBlock x:Name="icon"
                                       Margin="{TemplateBinding IconMargin}"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       FontSize="{TemplateBinding IconFontSize}"
                                       Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}"
                                       Style="{DynamicResource {x:Static h:TextBlockKeys.Icon}}"
                                       Text="{TemplateBinding Icon}" />
                        </StackPanel>
                        <TextBlock x:Name="title"
                                   Grid.Column="2"
                                   Margin="0,0,15,0"
                                   HorizontalAlignment="{TemplateBinding TextHorizontalAlignment}"
                                   VerticalAlignment="Center"
                                   Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}"
                                   Text="{TemplateBinding Header}" />

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">

                            <Setter TargetName="backstory" Property="Fill" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}" />
                            <Setter TargetName="title" Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
                            <Setter TargetName="icon" Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />

                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="backstory"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         To="1"
                                                         Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>

                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="backstory"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         To="0"
                                                         Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>

                        </Trigger>

                        <Trigger Property="Selector.IsSelected" Value="True">
                            <Setter TargetName="back" Property="Opacity" Value="1" />
                            <Setter TargetName="back" Property="Fill" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}" />
                            <Setter TargetName="title" Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
                            <Setter TargetName="icon" Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
                        </Trigger>

                        <!--  Icon 已经列为必须存在项，所以不隐藏区域  -->
                        <!--
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter TargetName="iconWidth" Property="Width" Value="0"/>
                            <Setter TargetName="title" Property="Margin" Value="15,0"/>
                        </Trigger>
                        -->


                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
