<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:local="clr-namespace:HeBianGu.General.WpfControlLib"
    xmlns:base="clr-namespace:HeBianGu.Base.WpfBase;assembly=HeBianGu.Base.WpfBase"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">


    <Style x:Key="S.MetroProgressBar.Default" TargetType="{x:Type local:MetroProgressBar}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="ProgressBarHeight" Value="15"/>
        <Setter Property="CornerRadius" Value="0"/>
        <Setter Property="ProgressBarState" Value="None"/>
        <Setter Property="Background" Value="{DynamicResource S.Brush.Accent}"/>
        <Setter Property="Foreground" Value="{DynamicResource S.Brush.Dark.2}"/>
        <Setter Property="Padding" Value="5,0"/>
        <Setter Property="Height" Value="{DynamicResource S.Window.Item.Height}"/>
        <Setter Property="TextHorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:MetroProgressBar}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" x:Name="height1"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate"/>
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard RepeatBehavior="Forever">
                                        <PointAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)">
                                            <EasingPointKeyFrame KeyTime="0:0:0" Value="0.5,0.5"/>
                                            <EasingPointKeyFrame KeyTime="0:0:1.5" Value="1.95,0.5"/>
                                            <EasingPointKeyFrame KeyTime="0:0:3" Value="0.5,0.5"/>
                                        </PointAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <TextBlock Text="{TemplateBinding Title}" FontSize="12" Opacity="0.65" Margin="0,0,0,10" HorizontalAlignment="{TemplateBinding TextHorizontalAlignment}"/>

                        <Grid Grid.Row="1" Height="{TemplateBinding ProgressBarHeight}">

                            <Border Background="{DynamicResource S.Brush.Dark.3}" CornerRadius="{TemplateBinding CornerRadius}" Opacity="0.05"/>

                            <Border BorderBrush="{DynamicResource S.Brush.Dark.4}" BorderThickness="1" CornerRadius="{TemplateBinding CornerRadius}" Opacity="0.1"/>

                            <Grid Margin="{TemplateBinding BorderThickness}">
                                <Border x:Name="PART_Track" Background="{TemplateBinding Foreground}"/>

                                <Grid x:Name="PART_Indicator" ClipToBounds="True" HorizontalAlignment="Left" MinWidth="{TemplateBinding CornerRadius,Converter={x:Static base:XConverter.VisibilityEmptyConverter},ConverterParameter=2}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition x:Name="width1"/>
                                        <ColumnDefinition x:Name="width2" Width="0"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid x:Name="Animation"  RenderTransformOrigin="0.5,0.5">
                                        <Grid.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform ScaleY="-1" ScaleX="1"/>
                                                <SkewTransform AngleY="0" AngleX="0"/>
                                                <RotateTransform Angle="180"/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Grid.RenderTransform>
                                        <Border Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}">
                                            <Viewbox HorizontalAlignment="Left" StretchDirection="DownOnly" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                                                <TextBlock Foreground="{DynamicResource S.Brush.TextForeground.White}" SnapsToDevicePixels="True" FontSize="{TemplateBinding FontSize}" VerticalAlignment="Center" Text="{TemplateBinding Hint}" RenderTransformOrigin="0.5,0.5">
                                                    <TextBlock.RenderTransform>
                                                        <TransformGroup>
                                                            <ScaleTransform ScaleY="1" ScaleX="-1"/>
                                                            <SkewTransform AngleY="0" AngleX="0"/>
                                                            <RotateTransform Angle="0"/>
                                                            <TranslateTransform/>
                                                        </TransformGroup>
                                                    </TextBlock.RenderTransform>
                                                </TextBlock>
                                            </Viewbox>
                                        </Border>

                                        <Border BorderBrush="{DynamicResource S.Brush.TextBackground.Default}" BorderThickness="1" 
                                                CornerRadius="{TemplateBinding CornerRadius}" Opacity="0.1"/>
                                    </Grid>
                                </Grid>
                            </Grid>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ProgressBarState" Value="Wait">
                            <Setter Property="IsIndeterminate" Value="true"/>
                            <Setter Property="Background" Value="#edb15a"/>
                        </Trigger>
                        <Trigger Property="Title" Value="{x:Null}">
                            <Setter TargetName="height1" Property="Height" Value="0"/>
                        </Trigger>
                        <Trigger Property="Title" Value="">
                            <Setter TargetName="height1" Property="Height" Value="0"/>
                        </Trigger>
                        <Trigger Property="ProgressBarState" Value="Error">
                            <Setter Property="Background" Value="#e67979"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="#c5c5c5"/>
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="true">
                            <Setter TargetName="width1" Property="Width" Value="0.25*"/>
                            <Setter TargetName="width2" Property="Width" Value="0.725*"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style  x:Key="S.MetroProgressBar.CornerRadius.30"  TargetType="{x:Type local:MetroProgressBar}" BasedOn="{StaticResource S.MetroProgressBar.Default}"> 
        <Setter Property="ProgressBarHeight" Value="30"/> 
        <Setter Property="Width" Value="300"/>
        <Setter Property="CornerRadius" Value="0"/>
        <Setter Property="Clip">
            <Setter.Value>
                <RectangleGeometry RadiusX="20" RadiusY="20">
                    <RectangleGeometry.Rect>
                        <Rect Width="300"  Height="30"/>
                    </RectangleGeometry.Rect>
                </RectangleGeometry>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:MetroProgressBar}" BasedOn="{StaticResource S.MetroProgressBar.Default}"/>
</ResourceDictionary>
