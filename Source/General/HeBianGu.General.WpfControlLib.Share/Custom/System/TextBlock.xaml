<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:h="QQ:908293466"
                    xmlns:local="clr-namespace:HeBianGu.General.WpfControlLib">


    <!--  Icon  -->
    <Style x:Key="{ComponentResourceKey ResourceId=S.TextBlock.Icon, TypeInTargetAssembly={x:Type local:TextBlockKeys}}" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="/HeBianGu.Base.WpfBase;component/Resources/#HBG" />
        <!--<Setter Property="Foreground" Value="{StaticResource TextForeground}"/>-->
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.FIconMargin)}" />
        <Setter Property="Text" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.Icon)}" />
        <Setter Property="FontSize" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.FIconSize)}" />
        <Setter Property="h:Cattach.Icon" Value="&#xe79c;" />
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.TextBlock.Default, TypeInTargetAssembly={x:Type local:TextBlockKeys}}" TargetType="TextBlock">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="10,0" />
        <Setter Property="FontSize" Value="{DynamicResource {x:Static h:FontSizeKeys.Default}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
        <Setter Property="Text" Value="S.TextBlock.Default" />
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.TextBlock.Title, TypeInTargetAssembly={x:Type local:TextBlockKeys}}" TargetType="TextBlock">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="10,0" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundTitle}}" />
        <Setter Property="Text" Value="S.TextBlock.Title" />
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.TextBlock.FontSize.18, TypeInTargetAssembly={x:Type local:TextBlockKeys}}" BasedOn="{StaticResource {x:Static h:TextBlockKeys.Default}}" TargetType="TextBlock">
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Text" Value="S.TextBlock.FontSize.18" />
    </Style>
    <Style x:Key="{ComponentResourceKey ResourceId=S.TextBlock.FontSize.16, TypeInTargetAssembly={x:Type local:TextBlockKeys}}" BasedOn="{StaticResource {x:Static h:TextBlockKeys.Default}}" TargetType="TextBlock">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Text" Value="S.TextBlock.FontSize.16" />
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.TextBlock.FontSize.14, TypeInTargetAssembly={x:Type local:TextBlockKeys}}" BasedOn="{StaticResource {x:Static h:TextBlockKeys.Default}}" TargetType="TextBlock">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Text" Value="S.TextBlock.FontSize.4" />
    </Style>


    <Style x:Key="{ComponentResourceKey ResourceId=S.Hyperlink.Default, TypeInTargetAssembly={x:Type local:HyperlinkKeys}}" TargetType="{x:Type Hyperlink}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
        <Setter Property="TextDecorations" Value="Underline" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.Hyperlink.Accent, TypeInTargetAssembly={x:Type local:HyperlinkKeys}}" TargetType="{x:Type Hyperlink}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
        <Setter Property="TextDecorations" Value="Underline" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.AccentMouseOverForeground}}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.AccentMouseOverBackground}}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>