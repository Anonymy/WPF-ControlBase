<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:h="https://github.com/HeBianGu"
                    xmlns:local="clr-namespace:HeBianGu.General.WpfControlLib">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/HeBianGu.General.WpfControlLib;component/Themes/Share.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <ControlTemplate x:Key="S.GroupBox.Template.Default" TargetType="{x:Type GroupBox}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>

            <Border x:Name="bordercenter"
                    Grid.RowSpan="2"
                    Margin="0,0,0,0"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="1"
                    CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(h:Cattach.CornerRadius)}"
                    Effect="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(local:ShadowAssist.ShadowDepth)}"
                    Opacity="1" />

            <ContentPresenter ContentSource="Header" />

            <ContentPresenter Grid.Row="1" Margin="{TemplateBinding Padding}" />

            <ContentControl HorizontalAlignment="Right" Foreground="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.TitleForeground)}" Template="{TemplateBinding h:Cattach.AttachContent}" />

        </Grid>
        <ControlTemplate.Triggers>
            <!--<Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.MouseOverBorderBrush)}" />
            </Trigger>-->

            <!--<Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Effect" Value="{Binding RelativeSource={RelativeSource Mode=Self},Path=(h:Cattach.MouseOverEffect)}"/>
            </Trigger>-->

            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="{DynamicResource {x:Static h:OpacityKeys.Disable}}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <DataTemplate x:Key="S.GroupBox.DateTemplate.Header">
        <Grid Height="{Binding RelativeSource={RelativeSource AncestorType=GroupBox}, Path=(h:Cattach.CaptionHeight)}">
            <Border x:Name="border"
                    Margin="0,-1,0,0"
                    Background="{Binding RelativeSource={RelativeSource AncestorType=GroupBox}, Path=(h:Cattach.CaptionBackground)}"
                    BorderBrush="{Binding RelativeSource={RelativeSource AncestorType=GroupBox}, Path=(h:Cattach.CaptionBorderBrush)}"
                    BorderThickness="{Binding RelativeSource={RelativeSource AncestorType=GroupBox}, Path=(h:Cattach.CaptionBorderThickness)}"
                    CornerRadius="{Binding RelativeSource={RelativeSource AncestorType=GroupBox}, Path=(h:Cattach.CaptionCornerRadius)}" />

            <Border x:Name="boder_mouseover"
                    Background="{Binding RelativeSource={RelativeSource AncestorType=GroupBox}, Path=(h:Cattach.MouseOverBackground)}"
                    BorderBrush="{Binding RelativeSource={RelativeSource AncestorType=GroupBox}, Path=(h:Cattach.MouseOverBorderBrush)}"
                    BorderThickness="{Binding RelativeSource={RelativeSource AncestorType=GroupBox}, Path=(h:Cattach.MouseOverBorderThickness)}"
                    CornerRadius="{Binding RelativeSource={RelativeSource AncestorType=GroupBox}, Path=(h:Cattach.CaptionCornerRadius)}"
                    Opacity="0"
                    Visibility="{Binding RelativeSource={RelativeSource AncestorType=GroupBox}, Path=(h:Cattach.UseBackground), Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}" />


            <StackPanel x:Name="sp"
                        HorizontalAlignment="{Binding RelativeSource={RelativeSource AncestorType=GroupBox}, Path=(h:Cattach.CaptionHorizontalAlignment)}"
                        Orientation="Horizontal"
                        TextBlock.Foreground="{Binding RelativeSource={RelativeSource AncestorType=GroupBox}, Path=(h:Cattach.CaptionForeground)}">

                <TextBlock Margin="{Binding RelativeSource={RelativeSource AncestorType=GroupBox}, Path=(h:Cattach.IconMargin)}"
                           FontSize="{Binding RelativeSource={RelativeSource AncestorType=GroupBox}, Path=(h:Cattach.IconSize)}"
                           Foreground="{Binding RelativeSource={RelativeSource AncestorType=GroupBox}, Path=(h:Cattach.CaptionForeground)}"
                           Style="{DynamicResource {x:Static h:TextBlockKeys.Icon}}"
                           Text="{Binding RelativeSource={RelativeSource AncestorType=GroupBox}, Path=(h:Cattach.Icon)}"
                           TextTrimming="CharacterEllipsis" />

                <TextBlock HorizontalAlignment="Left"
                           VerticalAlignment="Center"
                           FontSize="{DynamicResource {x:Static h:FontSizeKeys.Default}}"
                           Foreground="{Binding RelativeSource={RelativeSource AncestorType=GroupBox}, Path=(h:Cattach.CaptionForeground)}"
                           Text="{Binding}" />
            </StackPanel>
        </Grid>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=GroupBox}, Path=IsMouseOver}" Value="true">
                <Setter Property="Opacity" Value="{DynamicResource {x:Static h:OpacityKeys.MouseOver}}" />
                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="boder_mouseover"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"
                                             Duration="0:0:0.3" />
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>

                <DataTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="boder_mouseover"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0"
                                             Duration="0:0:1" />
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.ExitActions>
            </DataTrigger>

            <!--  Layout Style  -->
            <!--
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.LayoutStyle)}" Value="Circle">
                <Setter TargetName="border" Property="CornerRadius" Value="{DynamicResource {x:Static h:CornerRadiusKeys.CircleTop}}" />
            </DataTrigger>-->
        </DataTemplate.Triggers>
    </DataTemplate>

    <Style x:Key="{ComponentResourceKey ResourceId=S.GroupBox.Dynamic, TypeInTargetAssembly={x:Type local:GroupBoxKeys}}" BasedOn="{StaticResource {x:Static local:SelectorKeys.Dynamic}}" TargetType="{x:Type GroupBox}">
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="{DynamicResource {x:Static h:ThicknessKeys.Padding_10_6}}" />
        <!--<Setter Property="local:ShadowAssist.ShadowDepth" Value="{DynamicResource {x:Static h:EffectShadowKeys.Default5}}" />-->
        <Setter Property="Template" Value="{StaticResource S.GroupBox.Template.Default}" />
        <Setter Property="HeaderTemplate" Value="{StaticResource S.GroupBox.DateTemplate.Header}" />
        <Setter Property="Header" Value="Header" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <!--<Setter Property="RenderTransform" Value="{x:Null}" />-->
        <Setter Property="h:Cattach.IconMargin" Value="5 0 " />
        <Setter Property="Cursor" Value="Arrow" />
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.GroupBox.Default, TypeInTargetAssembly={x:Type local:GroupBoxKeys}}" BasedOn="{StaticResource {x:Static local:GroupBoxKeys.Dynamic}}" TargetType="{x:Type GroupBox}">
        <Setter Property="h:Cattach.StyleType" Value="Default" />
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.GroupBox.Close, TypeInTargetAssembly={x:Type local:GroupBoxKeys}}" BasedOn="{StaticResource {x:Static h:GroupBoxKeys.Dynamic}}" TargetType="{x:Type GroupBox}">
        <Setter Property="h:Cattach.AttachContent">
            <Setter.Value>
                <ControlTemplate>
                    <Button Command="{x:Static local:CommandService.Close}" Foreground="{Binding RelativeSource={RelativeSource AncestorType=GroupBox}, Path=(h:Cattach.CaptionForeground)}" Style="{DynamicResource {x:Static local:ButtonKeys.Clear}}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.GroupBox.Single, TypeInTargetAssembly={x:Type local:GroupBoxKeys}}" BasedOn="{StaticResource {x:Static local:GroupBoxKeys.Default}}" TargetType="{x:Type GroupBox}">
        <Setter Property="h:Cattach.StyleType" Value="Single" />
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.GroupBox.Single.Close, TypeInTargetAssembly={x:Type local:GroupBoxKeys}}" BasedOn="{StaticResource {x:Static h:GroupBoxKeys.Single}}" TargetType="{x:Type GroupBox}">
        <Setter Property="h:Cattach.AttachContent">
            <Setter.Value>
                <ControlTemplate>
                    <Button Command="{x:Static local:CommandService.Close}" Foreground="{Binding RelativeSource={RelativeSource AncestorType=GroupBox}, Path=(h:Cattach.CaptionForeground)}" Style="{DynamicResource {x:Static local:ButtonKeys.Clear}}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.GroupBox.Accent, TypeInTargetAssembly={x:Type local:GroupBoxKeys}}" BasedOn="{StaticResource {x:Static h:GroupBoxKeys.Default}}" TargetType="{x:Type GroupBox}">
        <Setter Property="h:Cattach.StyleType" Value="Accent" />
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.GroupBox.Accent.Close, TypeInTargetAssembly={x:Type local:GroupBoxKeys}}" BasedOn="{StaticResource {x:Static h:GroupBoxKeys.Accent}}" TargetType="{x:Type GroupBox}">
        <Setter Property="h:Cattach.AttachContent">
            <Setter.Value>
                <ControlTemplate>
                    <Button Command="{x:Static local:CommandService.Close}" Foreground="{Binding RelativeSource={RelativeSource AncestorType=GroupBox}, Path=(h:Cattach.CaptionForeground)}" Style="{DynamicResource {x:Static local:ButtonKeys.Clear}}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.GroupBox.System, TypeInTargetAssembly={x:Type local:GroupBoxKeys}}" BasedOn="{StaticResource {x:Static h:GroupBoxKeys.Dynamic}}" TargetType="{x:Type GroupBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.BackgroundDefault}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="Padding" Value="2,-8,2,0" />
        <Setter Property="h:Cattach.Icon" Value="&#xea5e;" />
        <Setter Property="h:Cattach.IconSize" Value="14" />
        <Setter Property="h:Cattach.IconMargin" Value="5,0" />
        <Setter Property="local:ShadowAssist.ShadowDepth" Value="{x:Null}" />
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid Height="{DynamicResource {x:Static h:SystemKeys.RowHeight}}">
                        <Border>
                            <StackPanel Margin="5,0"
                                        HorizontalAlignment="Left"
                                        Background="{Binding RelativeSource={RelativeSource AncestorType=GroupBox}, Path=Background}"
                                        Orientation="Horizontal"
                                        TextBlock.Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}">

                                <TextBlock Margin="{Binding RelativeSource={RelativeSource AncestorType=GroupBox}, Path=(h:Cattach.IconMargin)}"
                                           FontSize="{Binding RelativeSource={RelativeSource AncestorType=GroupBox}, Path=(h:Cattach.IconSize)}"
                                           Style="{DynamicResource {x:Static h:TextBlockKeys.Icon}}"
                                           Text="{Binding RelativeSource={RelativeSource AncestorType=GroupBox}, Path=(h:Cattach.Icon)}" />

                                <TextBlock Margin="1,0"
                                           HorizontalAlignment="Left"
                                           VerticalAlignment="Center"
                                           FontSize="{DynamicResource {x:Static h:FontSizeKeys.Default}}"
                                           Text="{Binding}" />
                            </StackPanel>
                        </Border>
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <Border x:Name="bordercenter"
                                Grid.RowSpan="2"
                                Margin="0,20,0,0"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1"
                                CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(h:Cattach.CornerRadius)}"
                                Effect="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(local:ShadowAssist.ShadowDepth)}"
                                Opacity="1" />

                        <ContentPresenter ContentSource="Header" />

                        <ContentPresenter Grid.Row="1" Margin="{TemplateBinding Padding}" />

                        <ContentControl HorizontalAlignment="Right" Template="{TemplateBinding h:Cattach.AttachContent}" />

                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=Self},Path=(h:Cattach.MouseOverBorderBrush)}" />
                        </Trigger>-->

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="{DynamicResource {x:Static h:OpacityKeys.Disable}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.GroupBox.UnderLine, TypeInTargetAssembly={x:Type local:GroupBoxKeys}}" BasedOn="{StaticResource {x:Static h:GroupBoxKeys.Dynamic}}" TargetType="{x:Type GroupBox}">
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="local:ShadowAssist.ShadowDepth" Value="{x:Null}" />
        <Setter Property="h:Cattach.CaptionBackground" Value="Transparent" />
        <Setter Property="h:Cattach.CaptionForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />

        <Setter Property="h:Cattach.CaptionBorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}" />
        <Setter Property="h:Cattach.CaptionBorderThickness" Value="0,0,0,1.5" />

        <Setter Property="h:Cattach.MouseOverBackground" Value="Transparent" />
        <Setter Property="h:Cattach.MouseOverForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
        <Setter Property="h:Cattach.MouseOverBorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}" />

        <!--<Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid Height="{DynamicResource {x:Static h:SystemKeys.RowHeight}}">
                        <Border BorderBrush="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}"
                                Background="Transparent"
                                BorderThickness="0,0,0,1.5" CornerRadius="{DynamicResource {x:Static h:CornerRadiusKeys.Top}}">

                            <StackPanel Orientation="Horizontal">
                                <TextBlock Style="{DynamicResource {x:Static h:TextBlockKeys.Icon}}"
                                           FontSize="{Binding RelativeSource={RelativeSource AncestorType=GroupBox},Path=(h:Cattach.IconSize)}"
                                           Margin="{Binding RelativeSource={RelativeSource AncestorType=GroupBox},Path=(h:Cattach.IconMargin)}"
                                           Text="{Binding RelativeSource={RelativeSource AncestorType=GroupBox},Path=(h:Cattach.Icon)}"/>

                                <TextBlock Text="{Binding}" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="{DynamicResource {x:Static h:FontSizeKeys.Default}}"/>
                            </StackPanel>
                        </Border>
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>-->
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.GroupBox.ShowCode, TypeInTargetAssembly={x:Type local:GroupBoxKeys}}" BasedOn="{StaticResource {x:Static h:GroupBoxKeys.Dynamic}}" TargetType="GroupBox">
        <Setter Property="RenderTransform" Value="{StaticResource {x:Static h:SystemKeys.TransformGroup}}" />
        <Setter Property="h:Cattach.AttachContent">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Button Margin="10,0"
                                h:Cattach.Icon="&#xe7e7;"
                                Command="{x:Static local:CommandService.ShowCopyWindowCommand}"
                                CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=GroupBox}, Path=(h:Cattach.Text)}"
                                Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}"
                                Style="{DynamicResource {x:Static local:ButtonKeys.Transparent}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.GroupBox.HeaderBottom, TypeInTargetAssembly={x:Type local:GroupBoxKeys}}" BasedOn="{StaticResource {x:Static h:GroupBoxKeys.UnderLine}}" TargetType="{x:Type GroupBox}">
        <Setter Property="h:Cattach.CaptionBorderThickness" Value="0,1,0,0" />
        <Setter Property="h:Cattach.CaptionHorizontalAlignment" Value="Center" />
        <Setter Property="h:Cattach.Icon" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid>
                        <Border x:Name="bordercenter"
                                Margin="0,0,0,0"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1"
                                CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(h:Cattach.CornerRadius)}"
                                Effect="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(local:ShadowAssist.ShadowDepth)}"
                                Opacity="1" />

                        <DockPanel>
                            <ContentPresenter ContentSource="Header" DockPanel.Dock="Bottom" />

                            <ContentPresenter Margin="{TemplateBinding Padding}" />

                            <ContentControl HorizontalAlignment="Right" Template="{TemplateBinding h:Cattach.AttachContent}" />

                        </DockPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.MouseOverBorderBrush)}" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="{DynamicResource {x:Static h:OpacityKeys.Disable}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.Group.ToolBar, TypeInTargetAssembly={x:Type local:GroupBoxKeys}}" BasedOn="{StaticResource {x:Static h:GroupBoxKeys.HeaderBottom}}" TargetType="{x:Type GroupBox}">
        <Setter Property="h:Cattach.CaptionHeight" Value="25" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="Padding" Value="5,0" />
        <Setter Property="h:Cattach.IconMargin" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="h:Cattach.MouseOverBorderBrush" Value="Transparent" />
        <Setter Property="h:Cattach.MouseOverBackground" Value="Transparent" />
        <Setter Property="h:Cattach.CaptionBackground" Value="Transparent" />
        <Setter Property="h:Cattach.CaptionForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
    </Style>
</ResourceDictionary>