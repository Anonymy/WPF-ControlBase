<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:h="QQ:908293466"
                    xmlns:local="clr-namespace:HeBianGu.General.WpfControlLib">


    <ControlTemplate x:Key="S.PasswordBox.Template.Default" TargetType="{x:Type PasswordBox}">
        <Grid x:Name="PART_Root">
            <Border x:Name="Bg"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="{TemplateBinding h:Cattach.CornerRadius}"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            <Grid x:Name="PART_InnerGrid">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <!--  Label区域  -->
                <ContentControl x:Name="Label"
                                Margin="1"
                                Content="{TemplateBinding h:Cattach.Label}"
                                Template="{TemplateBinding h:Cattach.LabelTemplate}" />

                <TextBlock x:Name="ficon"
                           Grid.Column="1"
                           Margin="{TemplateBinding h:Cattach.FIconMargin}"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           FontSize="{TemplateBinding h:Cattach.FIconSize}"
                           Foreground="{TemplateBinding Foreground}"
                           Style="{DynamicResource {x:Static h:TextBlockKeys.Icon}}"
                           Text="{TemplateBinding h:Cattach.Icon}" />

                <!--  内容区域  -->
                <ScrollViewer x:Name="PART_ContentHost"
                              Grid.Column="2"
                              Margin="2"
                              VerticalAlignment="Stretch"
                              Background="{x:Null}"
                              BorderThickness="0"
                              IsTabStop="False" />

                <!--  水印  -->
                <TextBlock x:Name="Message"
                           Grid.Column="2"
                           Margin="5,2,5,2"
                           Padding="{TemplateBinding Padding}"
                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                           IsHitTestVisible="False"
                           Opacity="{DynamicResource {x:Static h:OpacityKeys.Watermark}}"
                           Text="{TemplateBinding h:Cattach.Watermark}"
                           Visibility="Collapsed" />
                <!--  附加内容区域  -->
                <Border Grid.Column="3"
                        Margin="2"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center">
                    <ContentControl x:Name="PART_AttachContent"
                                    VerticalAlignment="Center"
                                    VerticalContentAlignment="Center"
                                    Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundAssist}}"
                                    Template="{TemplateBinding h:Cattach.AttachContent}" />
                </Border>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <!--  显示水印  -->
            <!--
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Password}" Value="">
                <Setter TargetName="Message" Property="Visibility" Value="Visible" />
            </DataTrigger>
            -->
            <!--  显示水印  -->
            <!--
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Password}" Value="{x:Null}">
                <Setter TargetName="Message" Property="Visibility" Value="Visible" />
            </DataTrigger>-->

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{Binding Path=(h:Cattach.MouseOverBorderBrush), RelativeSource={RelativeSource Self}}" />
                <Setter TargetName="PART_AttachContent" Property="Foreground" Value="{Binding Path=(h:Cattach.MouseOverBorderBrush), RelativeSource={RelativeSource Self}}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter TargetName="Label" Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
                <Setter Property="BorderBrush" Value="{Binding Path=(h:Cattach.FocusBorderBrush), RelativeSource={RelativeSource Self}}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="BorderBrush" Value="{Binding Path=(h:Cattach.FocusBorderBrush), RelativeSource={RelativeSource Self}}" />
                <Setter TargetName="Label" Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
                <Setter TargetName="PART_AttachContent" Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
            </Trigger>
            <!--  不可用  -->
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="PART_Root" Property="Opacity" Value="{DynamicResource {x:Static h:OpacityKeys.Disable}}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="S.PasswordBox.Template.Single" TargetType="{x:Type PasswordBox}">
        <Grid x:Name="PART_Root">
            <Grid x:Name="PART_InnerGrid">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <Border x:Name="Bg"
                        Grid.Column="1"
                        Grid.ColumnSpan="4"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding h:Cattach.CornerRadius}"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                <Border x:Name="boder_mouseover"
                        Grid.Column="1"
                        Grid.ColumnSpan="4"
                        Background="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.MouseOverBackground)}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding h:Cattach.CornerRadius}"
                        Opacity="0.5" />

                <Border x:Name="boder"
                        Grid.Column="1"
                        Grid.ColumnSpan="4"
                        Background="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.FocusBackground)}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding h:Cattach.CornerRadius}"
                        Opacity="0" />

                <!--  Label区域  -->
                <ContentControl x:Name="Label"
                                Margin="1"
                                Content="{TemplateBinding h:Cattach.Label}"
                                Template="{TemplateBinding h:Cattach.LabelTemplate}" />


                <TextBlock x:Name="ficon"
                           Grid.Column="1"
                           Margin="{TemplateBinding h:Cattach.FIconMargin}"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           FontSize="{TemplateBinding h:Cattach.FIconSize}"
                           Foreground="{TemplateBinding Foreground}"
                           Style="{DynamicResource {x:Static h:TextBlockKeys.Icon}}"
                           Text="{TemplateBinding h:Cattach.Icon}" />

                <!--  内容区域  -->
                <ScrollViewer x:Name="PART_ContentHost"
                              Grid.Column="2"
                              Margin="2"
                              VerticalAlignment="Stretch"
                              Background="{x:Null}"
                              BorderThickness="0"
                              IsTabStop="False" />
                <!--  附加内容区域  -->
                <Border Grid.Column="3"
                        Width="{DynamicResource {x:Static h:SystemKeys.ItemHeight}}"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center">
                    <ContentControl x:Name="PART_AttachContent"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    VerticalContentAlignment="Center"
                                    Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundAssist}}"
                                    Template="{TemplateBinding h:Cattach.AttachContent}" />
                </Border>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{Binding Path=(h:Cattach.MouseOverBorderBrush), RelativeSource={RelativeSource Self}}" />
                <Setter TargetName="Label" Property="Foreground" Value="{Binding Path=(h:Cattach.MouseOverBorderBrush), RelativeSource={RelativeSource Self}}" />
                <Setter TargetName="PART_AttachContent" Property="Foreground" Value="{Binding Path=(h:Cattach.MouseOverBorderBrush), RelativeSource={RelativeSource Self}}" />

                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="boder_mouseover"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"
                                             Duration="0:0:0.3" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>

                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="boder_mouseover"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0.5"
                                             Duration="0:0:1" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>

            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{Binding Path=(h:Cattach.FocusBorderBrush), RelativeSource={RelativeSource Self}}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="BorderBrush" Value="{Binding Path=(h:Cattach.FocusBorderBrush), RelativeSource={RelativeSource Self}}" />
                <Setter TargetName="Label" Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
                <Setter TargetName="PART_AttachContent" Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />

                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="boder"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0.5"
                                             Duration="0:0:0.1" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>

                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="boder"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0"
                                             Duration="0:0:0.5" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            <!--  不可用  -->
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="PART_Root" Property="Opacity" Value="{DynamicResource {x:Static h:OpacityKeys.Disable}}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  TextBox默认样式  -->
    <Style x:Key="{ComponentResourceKey ResourceId=S.PasswordBox.Default, TypeInTargetAssembly={x:Type local:PasswordBoxKeys}}" TargetType="{x:Type PasswordBox}">
        <Setter Property="ContextMenu" Value="{DynamicResource TextBoxContextMenu}" />
        <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
        <Setter Property="FontFamily" Value="{DynamicResource {x:Static h:SystemKeys.FontFamily}}" />
        <Setter Property="FontSize" Value="{DynamicResource {x:Static h:FontSizeKeys.Default}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="PasswordChar" Value="●" />
        <Setter Property="Height" Value="{DynamicResource {x:Static h:SystemKeys.ItemHeight}}" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.BackgroundDefault}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
        <Setter Property="h:Cattach.FocusBorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
        <Setter Property="h:Cattach.MouseOverBorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.AccentMouseOverForeground}}" />
        <Setter Property="h:Cattach.CornerRadius" Value="{DynamicResource {x:Static h:CornerRadiusKeys.CornerRadius}}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}" />
        <!--  change SnapsToDevicePixels to True to view a better border and validation error  -->
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <!--  英 ['kærət]  美 ['kærət]  插入符号  -->
        <Setter Property="CaretBrush" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />

        <Setter Property="h:Cattach.FocusBorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
        <Setter Property="h:Cattach.FocusBackground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundSelected}}" />

        <Setter Property="h:Cattach.MouseOverBorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.AccentMouseOverForeground}}" />
        <Setter Property="h:Cattach.MouseOverBackground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundMouseOver}}" />

        <Setter Property="h:Cattach.Icon" Value="&#xe6ed;" />
        <Setter Property="h:Cattach.FIconSize" Value="{DynamicResource {x:Static h:IconSizeKeys.Default}}" />
        <Setter Property="h:Cattach.FIconMargin" Value="5,0,0,0" />
        <Setter Property="h:Cattach.Label" Value="Label" />

        <Setter Property="h:Cattach.TitleForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
        <Setter Property="h:Cattach.TitleMargin" Value="{DynamicResource {x:Static h:ThicknessKeys.Margin_10_0}}" />
        <Setter Property="h:Cattach.TitleWidth" Value="{DynamicResource {x:Static h:SystemKeys.TitleWidth}}" />

        <Setter Property="Template" Value="{StaticResource S.PasswordBox.Template.Default}" />
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.PasswordBox.Single, TypeInTargetAssembly={x:Type local:PasswordBoxKeys}}" BasedOn="{StaticResource {x:Static h:PasswordBoxKeys.Default}}" TargetType="{x:Type PasswordBox}">
        <Setter Property="Template" Value="{StaticResource S.PasswordBox.Template.Single}" />
    </Style>

    <!--  TextBox包含清除Text按钮的样式  -->
    <Style x:Key="{ComponentResourceKey ResourceId=S.PasswordBox.Clear, TypeInTargetAssembly={x:Type local:PasswordBoxKeys}}" BasedOn="{StaticResource {x:Static h:PasswordBoxKeys.Default}}" TargetType="{x:Type PasswordBox}">
        <Setter Property="h:Cattach.AttachContent">
            <Setter.Value>
                <ControlTemplate>

                    <Button Width="Auto"
                            h:Cattach.IsClearTextButtonBehaviorEnabled="True"
                            Command="h:Cattach.ClearTextCommand"
                            CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type PasswordBox}}}"
                            Style="{DynamicResource {x:Static local:ButtonKeys.Clear}}" />

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  TextBox包含附加属性Label的样式  -->
    <Style x:Key="{ComponentResourceKey ResourceId=S.PasswordBox.Label, TypeInTargetAssembly={x:Type local:PasswordBoxKeys}}" BasedOn="{StaticResource {x:Static h:PasswordBoxKeys.Default}}" TargetType="{x:Type PasswordBox}">
        <Setter Property="h:Cattach.LabelTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Border MinWidth="70" Background="{DynamicResource {x:Static h:BrushKeys.Accent}}" CornerRadius="{DynamicResource {x:Static h:CornerRadiusKeys.Left}}">
                        <TextBlock Margin="3"
                                   HorizontalAlignment="Right"
                                   VerticalAlignment="Center"
                                   Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}"
                                   Text="{TemplateBinding Content}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  TextBox包含附加属性Label，以及ClearText按钮的样式  -->
    <Style x:Key="{ComponentResourceKey ResourceId=S.PasswordBox.LabelClear, TypeInTargetAssembly={x:Type local:PasswordBoxKeys}}" BasedOn="{StaticResource {x:Static h:PasswordBoxKeys.Label}}" TargetType="{x:Type PasswordBox}">
        <Setter Property="h:Cattach.AttachContent">
            <Setter.Value>
                <ControlTemplate>

                    <Button Width="Auto"
                            h:Cattach.IsClearTextButtonBehaviorEnabled="True"
                            Command="h:Cattach.ClearTextCommand"
                            CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type PasswordBox}}}"
                            Style="{DynamicResource {x:Static local:ButtonKeys.Clear}}" />

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  TextBox包含附加属性Label的样式  -->
    <Style x:Key="{ComponentResourceKey ResourceId=S.PasswordBox.Single.Label, TypeInTargetAssembly={x:Type local:PasswordBoxKeys}}" BasedOn="{StaticResource {x:Static h:PasswordBoxKeys.Single}}" TargetType="{x:Type PasswordBox}">
        <Setter Property="h:Cattach.LabelTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Border Width="{Binding RelativeSource={RelativeSource AncestorType=PasswordBox}, Path=(h:Cattach.TitleWidth)}" Margin="{Binding RelativeSource={RelativeSource AncestorType=PasswordBox}, Path=(h:Cattach.TitleMargin)}">
                        <TextBlock HorizontalAlignment="Left"
                                   VerticalAlignment="Center"
                                   Foreground="{Binding RelativeSource={RelativeSource AncestorType=PasswordBox}, Path=(h:Cattach.TitleForeground)}"
                                   Text="{TemplateBinding Content}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  TextBox包含附加属性Label，以及ClearText按钮的样式  -->
    <Style x:Key="{ComponentResourceKey ResourceId=S.PasswordBox.Single.LabelClear, TypeInTargetAssembly={x:Type local:PasswordBoxKeys}}" BasedOn="{StaticResource {x:Static h:PasswordBoxKeys.LabelSingle}}" TargetType="{x:Type PasswordBox}">
        <Setter Property="h:Cattach.AttachContent">
            <Setter.Value>
                <ControlTemplate>
                    <Button Width="Auto"
                            h:Cattach.IsClearTextButtonBehaviorEnabled="True"
                            Command="h:Cattach.ClearTextCommand"
                            CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type PasswordBox}}}"
                            Style="{DynamicResource {x:Static local:ButtonKeys.Clear}}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>