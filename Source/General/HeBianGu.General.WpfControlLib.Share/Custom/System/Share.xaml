<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:h="QQ:908293466"
                    xmlns:local="clr-namespace:HeBianGu.General.WpfControlLib"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <SolidColorBrush x:Key="TextForeground" Color="#433F3E" />
    <SolidColorBrush x:Key="TextSelectionBrush" Color="#007ACC" />
    <SolidColorBrush x:Key="MouseOverForeground" Color="#007ACC" />
    <SolidColorBrush x:Key="PressedForeground" Color="#BFBFBF" />
    <sys:Double x:Key="S.Opacity.Disable">0.5</sys:Double>
    <sys:Double x:Key="S.Opacity.Readonly">0.68</sys:Double>


    <Style x:Key="ComboToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground" Value="{StaticResource TextForeground}" />
        <Setter Property="h:Cattach.FIconSize" Value="{DynamicResource {x:Static h:IconSizeKeys.Default}}" />
        <Setter Property="h:Cattach.FIconMargin" Value="0,1,3,1" />
        <Setter Property="h:Cattach.Icon" Value="&#xe9bd;" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid x:Name="Grid">
                        <!--<Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>-->
                        <Border x:Name="Bg"
                                Grid.ColumnSpan="2"
                                Margin="0,1,1,1"
                                Background="{TemplateBinding Background}"
                                Opacity="0"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                        <TextBlock x:Name="Icon"
                                   Grid.Column="1"
                                   Margin="{TemplateBinding h:Cattach.FIconMargin}"
                                   HorizontalAlignment="Right"
                                   h:Cattach.AllowsAnimation="{TemplateBinding IsChecked}"
                                   FontSize="{Binding Path=(h:Cattach.FIconSize), RelativeSource={RelativeSource TemplatedParent}}"
                                   Foreground="{TemplateBinding Foreground}"
                                   Style="{DynamicResource {x:Static h:TextBlockKeys.Icon}}"
                                   Text="{TemplateBinding h:Cattach.Icon}" />
                    </Grid>
                    <!--  z触发器  -->
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource MouseOverForeground}" />
                            <Setter Property="Opacity" TargetName="Bg" Value="0.55" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource PressedForeground}" />
                            <Setter Property="Opacity" TargetName="Bg" Value="0.6" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource PressedForeground}" />
                            <Setter Property="Opacity" TargetName="Bg" Value="0.6" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="{DynamicResource {x:Static h:OpacityKeys.Disable}}" TargetName="Grid"/>
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  编辑状态文本框样式  -->
    <Style x:Key="EditableTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Margin" Value="1" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="MaxLength" Value="2048" />
        <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
        <Setter Property="ContextMenu" Value="{DynamicResource TextBoxContextMenu}" />
        <Setter Property="SelectionBrush" Value="{DynamicResource TextSelectionBrush}" />
        <Setter Property="FontSize" Value="{StaticResource {x:Static h:FontSizeKeys.Default}}" />
        <Setter Property="FontFamily" Value="{DynamicResource {x:Static h:SystemKeys.FontFamily}}" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="CaretBrush" Value="{DynamicResource TextForeground}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Style.Triggers>
            <Trigger Property="IsReadOnly" Value="True">
                <Setter Property="Opacity" Value="{StaticResource {x:Static h:OpacityKeys.Readonly}}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="{DynamicResource {x:Static h:OpacityKeys.Disable}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>