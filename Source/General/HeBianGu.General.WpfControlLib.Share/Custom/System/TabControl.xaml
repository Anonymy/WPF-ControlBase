<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:h="QQ:908293466"
                    xmlns:local="clr-namespace:HeBianGu.General.WpfControlLib"
                    xmlns:s="clr-namespace:System;assembly=mscorlib">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/HeBianGu.General.WpfControlLib;component/Themes/Share.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="{ComponentResourceKey ResourceId=S.TabItem.Default, TypeInTargetAssembly={x:Type local:TabItemKeys}}" TargetType="{x:Type TabItem}">
        <Setter Property="Height" Value="{DynamicResource {x:Static h:SystemKeys.RowHeight}}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource AncestorType=TabControl}, Path=Background}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid Margin="{TemplateBinding Padding}">
                        <Border x:Name="boder_back"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                CornerRadius="{TemplateBinding h:Cattach.CornerRadius}" />

                        <Border x:Name="boder_mouseover"
                                Background="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.MouseOverBackground)}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding h:Cattach.CornerRadius}"
                                Opacity="0" />

                        <Border x:Name="boder"
                                Background="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.SelectBackground)}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding h:Cattach.CornerRadius}"
                                Opacity="0" />

                        <DockPanel>
                            <Button VerticalAlignment="Center"
                                    DockPanel.Dock="Right"
                                    Foreground="{TemplateBinding Foreground}"
                                    Style="{DynamicResource {x:Static h:ButtonKeys.Clear}}"
                                    Visibility="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.IsUseClose), Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}">
                                <h:Interaction.Triggers>
                                    <h:EventTrigger EventName="Click">
                                        <h:CloseItemsAction Item="{Binding RelativeSource={RelativeSource AncestorType=TabItem}}" ItemsControl="{Binding RelativeSource={RelativeSource AncestorType=TabControl}}" />
                                    </h:EventTrigger>
                                </h:Interaction.Triggers>
                            </Button>

                            <ContentPresenter x:Name="Content"
                                              Margin="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.CellMargin)}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="Center"
                                              ContentSource="Header"
                                              RecognizesAccessKey="True" />
                        </DockPanel>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.MouseOverForeground)}" />
                            <Setter Property="Panel.ZIndex" Value="999" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="boder_mouseover"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0:0:0.3" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="boder_mouseover"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0"
                                                         Duration="0:0:1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.SelectForeground)}" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="boder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="boder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0"
                                                         Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <Trigger Property="h:Cattach.IsDragEnter" Value="true">
                            <Setter TargetName="boder" Property="BorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
                            <Setter TargetName="boder" Property="BorderThickness" Value="0,1,0,0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Effect" Value="{Binding RelativeSource={RelativeSource AncestorType=TabControl}, Path=(h:Cattach.MouseOverEffect)}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Effect" Value="{Binding RelativeSource={RelativeSource AncestorType=TabControl}, Path=(h:Cattach.SelectEffect)}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.TabItem.Line.Default, TypeInTargetAssembly={x:Type local:TabItemKeys}}" BasedOn="{StaticResource {x:Static h:TabItemKeys.Default}}" TargetType="{x:Type TabItem}">
        <!--<Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundAssist}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}" />-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid Width="Auto" Height="Auto" Margin="0">

                        <Border x:Name="boder_back"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="0,0,0,2"/>
                        
                        <Border x:Name="boder_mouseover"
                                BorderBrush="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.MouseOverBackground)}"
                                BorderThickness="0,0,0,2"
                                Opacity="0" />

                        <Border x:Name="underline"
                                BorderBrush="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.SelectBackground)}"
                                BorderThickness="0,0,0,2"
                                Opacity="0" />

                        <DockPanel Margin="{TemplateBinding Padding}">

                            <Button VerticalAlignment="Center"
                                    DockPanel.Dock="Right"
                                    Style="{DynamicResource {x:Static h:ButtonKeys.Clear}}"
                                    Visibility="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.IsUseClose), Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}">
                                <h:Interaction.Triggers>
                                    <h:EventTrigger EventName="Click">
                                        <h:CloseItemsAction Item="{Binding RelativeSource={RelativeSource AncestorType=TabItem}}" ItemsControl="{Binding RelativeSource={RelativeSource AncestorType=TabControl}}" />
                                    </h:EventTrigger>
                                </h:Interaction.Triggers>
                            </Button>

                            <TextBlock Margin="5,0"
                                       VerticalAlignment="Center"
                                       DockPanel.Dock="Right"
                                       Style="{DynamicResource {x:Static h:TextBlockKeys.Icon}}"
                                       Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.Icon)}" />

                            <ContentPresenter x:Name="Content"
                                              Margin="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.CellMargin)}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="Center"
                                              ContentSource="Header"
                                              ContentTemplate="{TemplateBinding HeaderTemplate}"
                                              RecognizesAccessKey="True" />
                        </DockPanel>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=TabControl}, Path=TabStripPlacement}" Value="Left">
                            <Setter TargetName="underline" Property="BorderThickness" Value="0,0,2,0" />
                            <Setter TargetName="boder_mouseover" Property="BorderThickness" Value="0,0,2,0" />

                        </DataTrigger>

                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=TabControl}, Path=TabStripPlacement}" Value="Right">
                            <Setter TargetName="underline" Property="BorderThickness" Value="2,0,0,0" />
                            <Setter TargetName="boder_mouseover" Property="BorderThickness" Value="2,0,0,0" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=TabControl}, Path=TabStripPlacement}" Value="Bottom">
                            <Setter TargetName="underline" Property="BorderThickness" Value="0,2,0,0" />
                            <Setter TargetName="boder_mouseover" Property="BorderThickness" Value="0,2,0,0" />
                        </DataTrigger>

                        <!--<Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="underline" Property="BorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.AccentMouseOverForeground}}"/>
                            <Setter  Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.AccentMouseOverForeground}}"/>
                        </Trigger>

                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="underline" Property="BorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}"/>
                            <Setter  Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}"/>
                        </Trigger>-->

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.MouseOverForeground)}" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="boder_mouseover"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0:0:0.3" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>

                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="boder_mouseover"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0"
                                                         Duration="0:0:1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.SelectForeground)}" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="underline"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0:0:0.3" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>

                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="underline"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0"
                                                         Duration="0:0:1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <!--<Trigger Property="h:Cattach.IsDragEnter" Value="true">
                            <Setter Property="BorderBrush" TargetName="boder" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}"/>
                            <Setter Property="BorderThickness" TargetName="boder"   Value="0,1,0,0"/>
                        </Trigger>-->

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--<Style x:Key="{ComponentResourceKey ResourceId=S.TabItem.Single, TypeInTargetAssembly={x:Type local:TabItemKeys}}" BasedOn="{StaticResource {x:Static h:TabItemKeys.Default}}" TargetType="TabItem">
        <Setter Property="h:Cattach.MouseOverBackground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundMouseOver}}" />
        <Setter Property="h:Cattach.MouseOverForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
        <Setter Property="h:Cattach.SelectBackground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundSelected}}" />
        <Setter Property="h:Cattach.SelectForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.TabItem.Accent, TypeInTargetAssembly={x:Type local:TabItemKeys}}" BasedOn="{StaticResource {x:Static h:TabItemKeys.Default}}" TargetType="TabItem">
        <Setter Property="h:Cattach.MouseOverBackground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundMouseOver}}" />
        <Setter Property="h:Cattach.MouseOverForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
        <Setter Property="h:Cattach.SelectBackground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
        <Setter Property="h:Cattach.SelectForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}" />
    </Style>-->

    <Style x:Key="{ComponentResourceKey ResourceId=S.TabItem.Office, TypeInTargetAssembly={x:Type local:TabItemKeys}}" BasedOn="{StaticResource {x:Static h:TabItemKeys.Default}}" TargetType="TabItem">
        <Setter Property="Padding" Value="0" />
        <Setter Property="Height" Value="{DynamicResource {x:Static h:SystemKeys.ItemHeight}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}" />
        <Setter Property="h:Cattach.MouseOverBackground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundWhiteOpacity1}}" />
        <Setter Property="h:Cattach.MouseOverForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}" />
        <Setter Property="h:Cattach.SelectBackground" Value="{DynamicResource {x:Static h:BrushKeys.Dark1}}" />
        <Setter Property="h:Cattach.SelectForeground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
        <Setter Property="h:Cattach.CornerRadius" Value="{DynamicResource {x:Static h:CornerRadiusKeys.Top}}" />
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.TabControl.Dynamic, TypeInTargetAssembly={x:Type local:TabControlKeys}}" BasedOn="{StaticResource {x:Static local:SelectorKeys.Dynamic}}" TargetType="{x:Type TabControl}">
        <Setter Property="ItemContainerStyle" Value="{DynamicResource {x:Static h:TabItemKeys.Default}}" />
        <Setter Property="h:Cattach.Bool" Value="False" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid ClipToBounds="True" KeyboardNavigation.TabNavigation="Local" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0" />
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
                        </Grid.ColumnDefinitions>

                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto" />
                            <RowDefinition x:Name="RowDefinition1" Height="*" />
                        </Grid.RowDefinitions>

                        <Border Grid.RowSpan="2"
                                Grid.ColumnSpan="2"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding h:Cattach.CornerRadius}" />

                        <DockPanel x:Name="HeaderPanel" Margin="{TemplateBinding Padding}">
                            <TextBox x:Name="tb_search"
                                     Width="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.SearchWidth)}"
                                     h:Cattach.Icon="&#xe8a4;"
                                     h:Cattach.IsUseHistory="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.SearchUseHistory)}"
                                     DockPanel.Dock="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.SearchDock)}"
                                     Visibility="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.UseSearch), Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}">
                                <h:Interaction.Behaviors>
                                    <h:SearchTabTextBoxBehvior TabControl="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                </h:Interaction.Behaviors>
                            </TextBox>
                            <local:FScrollView HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                                <TabPanel Grid.Row="0"
                                          Grid.Column="0"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Panel.ZIndex="1"
                                          IsItemsHost="True"
                                          KeyboardNavigation.TabIndex="1" />
                            </local:FScrollView>
                        </DockPanel>

                        <Border x:Name="ContentPanel"
                                Grid.Row="1"
                                Grid.Column="0"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                KeyboardNavigation.TabIndex="2"
                                KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter x:Name="PART_SelectedContentHost"
                                              Margin="{TemplateBinding Padding}"
                                              VerticalAlignment="Top"
                                              Content="{TemplateBinding SelectedContent}"
                                              ContentSource="SelectedContent"
                                              ContentStringFormat="{TemplateBinding SelectedContentStringFormat}"
                                              ContentTemplate="{TemplateBinding SelectedContentTemplate}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              TextBlock.Foreground="{TemplateBinding Foreground}" />
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="1" />
                            <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                            <Setter TargetName="RowDefinition1" Property="Height" Value="Auto" />
                            <Setter TargetName="HeaderPanel" Property="Margin" Value="2,0,2,2" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="0" />
                            <Setter TargetName="ContentPanel" Property="Grid.Column" Value="1" />
                            <Setter TargetName="ColumnDefinition0" Property="Width" Value="Auto" />
                            <Setter TargetName="ColumnDefinition1" Property="Width" Value="*" />
                            <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                            <Setter TargetName="RowDefinition1" Property="Height" Value="0" />
                            <Setter TargetName="HeaderPanel" Property="Margin" Value="2,2,0,2" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="1" />
                            <Setter TargetName="ContentPanel" Property="Grid.Column" Value="0" />
                            <Setter TargetName="ColumnDefinition0" Property="Width" Value="*" />
                            <Setter TargetName="ColumnDefinition1" Property="Width" Value="Auto" />
                            <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                            <Setter TargetName="RowDefinition1" Property="Height" Value="0" />
                            <Setter TargetName="HeaderPanel" Property="Margin" Value="0,2,2,2" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <Grid />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.TabControl.Default, TypeInTargetAssembly={x:Type local:TabControlKeys}}" BasedOn="{StaticResource {x:Static h:TabControlKeys.Dynamic}}" TargetType="{x:Type TabControl}">
        <Setter Property="h:Cattach.StyleType" Value="Default" />
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.TabControl.Single, TypeInTargetAssembly={x:Type local:TabControlKeys}}" BasedOn="{StaticResource {x:Static h:TabControlKeys.Default}}" TargetType="{x:Type TabControl}">
        <!--<Setter Property="ItemContainerStyle" Value="{DynamicResource {x:Static h:TabItemKeys.Single}}" />-->
        <Setter Property="h:Cattach.StyleType" Value="Single" />
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.TabControl.Accent, TypeInTargetAssembly={x:Type local:TabControlKeys}}" BasedOn="{StaticResource {x:Static h:TabControlKeys.Default}}" TargetType="{x:Type TabControl}">
        <!--<Setter Property="ItemContainerStyle" Value="{DynamicResource {x:Static h:TabItemKeys.Accent}}" />-->
        <Setter Property="h:Cattach.StyleType" Value="Accent" />
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.TabControl.Line, TypeInTargetAssembly={x:Type local:TabControlKeys}}" BasedOn="{StaticResource {x:Static h:TabControlKeys.Dynamic}}" TargetType="{x:Type TabControl}">
        <Setter Property="ItemContainerStyle" Value="{DynamicResource {x:Static h:TabItemKeys.Line}}" />
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.TabControl.Office, TypeInTargetAssembly={x:Type local:TabControlKeys}}" BasedOn="{StaticResource {x:Static h:TabControlKeys.Default}}" TargetType="{x:Type TabControl}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource {x:Static h:TabItemKeys.Office}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.Dark1}}" />
        <Setter Property="h:Cattach.TitleBackground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
        <Setter Property="Padding" Value="0,0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid ClipToBounds="True" KeyboardNavigation.TabNavigation="Local" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0" />
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
                        </Grid.ColumnDefinitions>

                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto" />
                            <RowDefinition x:Name="RowDefinition1" Height="*" />
                        </Grid.RowDefinitions>

                        <Border Grid.RowSpan="2"
                                Grid.ColumnSpan="2"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding h:Cattach.CornerRadius}" />

                        <Border x:Name="ContentPanel"
                                Grid.Row="1"
                                Grid.Column="0"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                KeyboardNavigation.TabIndex="2"
                                KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter x:Name="PART_SelectedContentHost"
                                              Content="{TemplateBinding SelectedContent}"
                                              ContentSource="SelectedContent"
                                              ContentStringFormat="{TemplateBinding SelectedContentStringFormat}"
                                              ContentTemplate="{TemplateBinding SelectedContentTemplate}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>

                        <local:FScrollView x:Name="HeaderPanel" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                            <DockPanel Background="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.TitleBackground)}" LastChildFill="False">
                                <TabPanel Grid.Row="0"
                                          Grid.Column="0"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Panel.ZIndex="1"
                                          IsItemsHost="True"
                                          KeyboardNavigation.TabIndex="1" />

                                <DockPanel Margin="2,0" DockPanel.Dock="Right">
                                    <CheckBox Margin="5,0"
                                              h:Cattach.IconSize="{DynamicResource {x:Static h:IconSizeKeys.Small}}"
                                              h:Cattach.MouseOverBackground="{DynamicResource {x:Static h:BrushKeys.ForegroundWhiteOpacity2}}"
                                              h:Cattach.SelectForeground="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}"
                                              h:Cattach.SelectedText="&#xe66e;"
                                              h:Cattach.UnSelectedText="&#xe66f;"
                                              Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}"
                                              IsChecked="{Binding ElementName=ContentPanel, Path=Visibility, Converter={x:Static h:XConverter.VisibilityToBoolenConverter}}"
                                              Style="{DynamicResource {x:Static h:CheckBoxKeys.Single}}" />
                                </DockPanel>
                            </DockPanel>
                        </local:FScrollView>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="1" />
                            <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                            <Setter TargetName="RowDefinition1" Property="Height" Value="Auto" />
                            <Setter TargetName="HeaderPanel" Property="Margin" Value="2,0,2,2" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="0" />
                            <Setter TargetName="ContentPanel" Property="Grid.Column" Value="1" />
                            <Setter TargetName="ColumnDefinition0" Property="Width" Value="Auto" />
                            <Setter TargetName="ColumnDefinition1" Property="Width" Value="*" />
                            <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                            <Setter TargetName="RowDefinition1" Property="Height" Value="0" />
                            <Setter TargetName="HeaderPanel" Property="Margin" Value="2,2,0,2" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="1" />
                            <Setter TargetName="ContentPanel" Property="Grid.Column" Value="0" />
                            <Setter TargetName="ColumnDefinition0" Property="Width" Value="*" />
                            <Setter TargetName="ColumnDefinition1" Property="Width" Value="Auto" />
                            <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                            <Setter TargetName="RowDefinition1" Property="Height" Value="0" />
                            <Setter TargetName="HeaderPanel" Property="Margin" Value="0,2,2,2" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>