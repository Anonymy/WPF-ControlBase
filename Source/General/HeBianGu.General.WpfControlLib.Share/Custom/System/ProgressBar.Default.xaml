<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:local="clr-namespace:HeBianGu.General.WpfControlLib"
                    xmlns:h="QQ:908293466"
                    xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:cl="clr-namespace:System.Collections;assembly=mscorlib">

    <SolidColorBrush x:Key="ControlBorderBrush" Color="#999C9F"></SolidColorBrush>
    <SolidColorBrush x:Key="FocusBorderBrush" Color="#EBCECE"></SolidColorBrush>
    <SolidColorBrush x:Key="TextForeground" Color="White"></SolidColorBrush>

    <Style TargetType="ProgressBar" x:Key="S.ProgressBar.Base">
        <Setter Property="Background" Value="{DynamicResource S.Brush.TextBackground.Default}" />
        <Setter Property="Maximum" Value="100" />
        <Setter Property="Value" Value="0" />
        <Setter Property="Height" Value="{DynamicResource S.Window.Item.Height}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Foreground" Value="{DynamicResource S.Brush.Accent}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="BorderBrush" Value="{DynamicResource S.Brush.TextBorderBrush.Default}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontSize" Value="{DynamicResource S.FontSize.Default}"/>
        <Setter Property="h:Cattach.CornerRadius" Value="{DynamicResource S.Window.Item.CornerRadius}" />
    </Style>

    <Style  x:Key="S.ProgressBar.Buzy" TargetType="ProgressBar" BasedOn="{StaticResource S.ProgressBar.Base}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="IsIndeterminate" Value="True" /> 
        <Setter Property="Height" Value="{DynamicResource S.Window.Item.Height}" /> 
        <Setter Property="Foreground" Value="{DynamicResource S.Brush.Accent}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/> 
    </Style>

    <Style TargetType="ProgressBar" x:Key="S.ProgressBar.Single" BasedOn="{StaticResource S.ProgressBar.Base}">
        <!--<Setter Property="h:Cattach.CornerRadius" Value="0" />-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <Grid x:Name="Root">
                        <Border x:Name="PART_Track" Background="{TemplateBinding Background}" 
                                CornerRadius="{TemplateBinding h:Cattach.CornerRadius}" BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>

                        <Border  x:Name="PART_Indicator" HorizontalAlignment="Left" Background="{TemplateBinding Foreground}" 
                                CornerRadius="{TemplateBinding h:Cattach.CornerRadius}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>

                        <!--<Grid.Effect>
                            <DropShadowEffect ShadowDepth="0" BlurRadius="50" Color="#007ACC" />
                        </Grid.Effect>-->
                    </Grid>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="LayoutTransform" TargetName="Root" >
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ProgressBar" x:Key="S.ProgressBar.RunningPoint"  BasedOn="{StaticResource S.ProgressBar.Base}">
        <Setter Property="Foreground" Value="{DynamicResource Accent}" />
        <Setter Property="Background" Value="{DynamicResource ProgressBackground}" />
        <Setter Property="FontSize" Value="10" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <local:RelativeAnimatingContentControl HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
                        <local:RelativeAnimatingContentControl.Resources>
                            <ExponentialEase EasingMode="EaseOut" Exponent="1" x:Key="ProgressBarEaseOut"/>
                            <ExponentialEase EasingMode="EaseOut" Exponent="1" x:Key="ProgressBarEaseIn"/>
                        </local:RelativeAnimatingContentControl.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate"/>
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard RepeatBehavior="Forever" Duration="00:00:04.4">
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.0" Storyboard.TargetProperty="X" Storyboard.TargetName="R1TT">
                                            <LinearDoubleKeyFrame KeyTime="00:00:00.0" Value="0.1"/>
                                            <EasingDoubleKeyFrame KeyTime="00:00:00.5" Value="33.1" EasingFunction="{StaticResource ProgressBarEaseOut}"/>
                                            <LinearDoubleKeyFrame KeyTime="00:00:02.0" Value="66.1"/>
                                            <EasingDoubleKeyFrame KeyTime="00:00:02.5" Value="100.1" EasingFunction="{StaticResource ProgressBarEaseIn}"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.2" Storyboard.TargetProperty="X" Storyboard.TargetName="R2TT">
                                            <LinearDoubleKeyFrame KeyTime="00:00:00.0" Value="0.1"/>
                                            <EasingDoubleKeyFrame KeyTime="00:00:00.5" Value="33.1" EasingFunction="{StaticResource ProgressBarEaseOut}"/>
                                            <LinearDoubleKeyFrame KeyTime="00:00:02.0" Value="66.1"/>
                                            <EasingDoubleKeyFrame KeyTime="00:00:02.5" Value="100.1" EasingFunction="{StaticResource ProgressBarEaseIn}"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.4" Storyboard.TargetProperty="X" Storyboard.TargetName="R3TT">
                                            <LinearDoubleKeyFrame KeyTime="00:00:00.0" Value="0.1"/>
                                            <EasingDoubleKeyFrame KeyTime="00:00:00.5" Value="33.1" EasingFunction="{StaticResource ProgressBarEaseOut}"/>
                                            <LinearDoubleKeyFrame KeyTime="00:00:02.0" Value="66.1"/>
                                            <EasingDoubleKeyFrame KeyTime="00:00:02.5" Value="100.1" EasingFunction="{StaticResource ProgressBarEaseIn}"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.6" Storyboard.TargetProperty="X" Storyboard.TargetName="R4TT">
                                            <LinearDoubleKeyFrame KeyTime="00:00:00.0" Value="0.1"/>
                                            <EasingDoubleKeyFrame KeyTime="00:00:00.5" Value="33.1" EasingFunction="{StaticResource ProgressBarEaseOut}"/>
                                            <LinearDoubleKeyFrame KeyTime="00:00:02.0" Value="66.1"/>
                                            <EasingDoubleKeyFrame KeyTime="00:00:02.5" Value="100.1" EasingFunction="{StaticResource ProgressBarEaseIn}"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.8" Storyboard.TargetProperty="X" Storyboard.TargetName="R5TT">
                                            <LinearDoubleKeyFrame KeyTime="00:00:00.0" Value="0.1"/>
                                            <EasingDoubleKeyFrame KeyTime="00:00:00.5" Value="33.1" EasingFunction="{StaticResource ProgressBarEaseOut}"/>
                                            <LinearDoubleKeyFrame KeyTime="00:00:02.0" Value="66.1"/>
                                            <EasingDoubleKeyFrame KeyTime="00:00:02.5" Value="100.1" EasingFunction="{StaticResource ProgressBarEaseIn}"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="R1">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="1"/>
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:02.5" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="R2">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="1"/>
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:02.5" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.4" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="R3">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="1"/>
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:02.5" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.6" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="R4">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="1"/>
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:02.5" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.8" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="R5">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="1"/>
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:02.5" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid x:Name="Root">
                            <Border x:Name="PART_Track" BorderBrush="{TemplateBinding BorderBrush}"  BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" />
                            <Grid x:Name="ProgressBarRootGrid">
                                <Grid x:Name="IndeterminateRoot" Visibility="Collapsed" ClipToBounds="True">
                                    <Grid HorizontalAlignment="Left">
                                        <Ellipse Fill="{TemplateBinding Foreground}" Height="{TemplateBinding FontSize}" 
                                                 IsHitTestVisible="False" 
                                                 Width="{TemplateBinding FontSize}" x:Name="R1" Opacity="0">
                                            <Ellipse.RenderTransform>
                                                <TranslateTransform x:Name="R1TT"/>
                                            </Ellipse.RenderTransform>
                                        </Ellipse>
                                        <Ellipse Fill="{TemplateBinding Foreground}" Height="{TemplateBinding FontSize}" IsHitTestVisible="False" Width="{TemplateBinding FontSize}" x:Name="R2" Opacity="0">
                                            <Ellipse.RenderTransform>
                                                <TranslateTransform x:Name="R2TT"/>
                                            </Ellipse.RenderTransform>
                                        </Ellipse>
                                        <Ellipse Fill="{TemplateBinding Foreground}" Height="{TemplateBinding FontSize}" IsHitTestVisible="False" Width="{TemplateBinding FontSize}" x:Name="R3" Opacity="0">
                                            <Ellipse.RenderTransform>
                                                <TranslateTransform x:Name="R3TT"/>
                                            </Ellipse.RenderTransform>
                                        </Ellipse>
                                        <Ellipse Fill="{TemplateBinding Foreground}" Height="{TemplateBinding FontSize}" IsHitTestVisible="False" Width="{TemplateBinding FontSize}" x:Name="R4" Opacity="0">
                                            <Ellipse.RenderTransform>
                                                <TranslateTransform x:Name="R4TT"/>
                                            </Ellipse.RenderTransform>
                                        </Ellipse>
                                        <Ellipse Fill="{TemplateBinding Foreground}" Height="{TemplateBinding FontSize}" IsHitTestVisible="False" Width="{TemplateBinding FontSize}" x:Name="R5" Opacity="0">
                                            <Ellipse.RenderTransform>
                                                <TranslateTransform x:Name="R5TT"/>
                                            </Ellipse.RenderTransform>
                                        </Ellipse>
                                    </Grid>
                                </Grid>
                                <Grid x:Name="DeterminateRoot">
                                    <Border x:Name="PART_Indicator"
                                        Background="{TemplateBinding Foreground}"
                                        HorizontalAlignment="Left" />
                                </Grid>
                            </Grid>
                        </Grid>
                    </local:RelativeAnimatingContentControl>

                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="LayoutTransform" TargetName="Root">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="true">
                            <Setter Property="Visibility" TargetName="IndeterminateRoot" Value="Visible" />
                            <Setter Property="Visibility" TargetName="DeterminateRoot" Value="Collapsed" />
                            <Setter Property="Background" TargetName="PART_Track" Value="Transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter> 
    </Style>

    <Style TargetType="ProgressBar" x:Key="S.ProgressBar.RunningWaitting"  BasedOn="{StaticResource S.ProgressBar.Base}">
        <Setter Property="Foreground" Value="{DynamicResource S.Brush.Accent}" />
        <Setter Property="Background"   Value="{DynamicResource S.Brush.Accent}" />
        <Setter Property="BorderThickness"  Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <Grid Height="{TemplateBinding Height}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate"/>
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard RepeatBehavior="Forever">
                                        <PointAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)">
                                            <EasingPointKeyFrame KeyTime="0:0:0" Value="0.5,0.5"/>
                                            <EasingPointKeyFrame KeyTime="0:0:1.5" Value="1.95,0.5"/>
                                            <EasingPointKeyFrame KeyTime="0:0:3" Value="0.5,0.5"/>
                                        </PointAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid Margin="{TemplateBinding BorderThickness}">
                            <Border x:Name="PART_Track" CornerRadius="28">
                                <Grid x:Name="PART_Indicator" ClipToBounds="True" HorizontalAlignment="Left" >
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition x:Name="width1"/>
                                        <ColumnDefinition x:Name="width2" Width="0"/>
                                    </Grid.ColumnDefinitions>

                                    <Grid x:Name="Animation"  RenderTransformOrigin="0.5,0.5">
                                        <Grid.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform ScaleY="-1" ScaleX="1"/>
                                                <SkewTransform AngleY="0" AngleX="0"/>
                                                <RotateTransform Angle="180"/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Grid.RenderTransform>

                                        <Border Background="{TemplateBinding Background}"  CornerRadius="0,28,28,0"/>
                                    </Grid>
                                </Grid>
                            </Border>
                        </Grid>
                    </Grid>

                    <!--<ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Loaded">
                            <BeginStoryboard Storyboard="{StaticResource S.Storyboard.OpacityForever}"/>
                        </EventTrigger>
                    </ControlTemplate.Triggers>-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style TargetType="ProgressBar" x:Key="S.Progessbar.WaittingPercent"  BasedOn="{StaticResource S.ProgressBar.Base}">
        <Setter Property="Background" Value="{DynamicResource S.Brush.TextBorderBrush.Default}"/>
        <Setter Property="Foreground" Value="{DynamicResource S.Brush.Accent}"/>
        <Setter Property="Width" Value="300"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="h:Cattach.Label" Value="当前进度"/>
        <Setter Property="Clip">
            <Setter.Value>
                <RectangleGeometry RadiusX="15" RadiusY="15">
                    <RectangleGeometry.Rect>
                        <Rect Width="300"  Height="30"/>
                    </RectangleGeometry.Rect>
                </RectangleGeometry>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <Grid Background="{TemplateBinding Background}">

                        <ProgressBar Value="{TemplateBinding Value}" Foreground="{TemplateBinding Foreground}" Background="Transparent"
                                     Style="{DynamicResource S.ProgressBar.Base}"
                                     Maximum="{TemplateBinding Maximum}" BorderThickness="{TemplateBinding BorderThickness}" Opacity="{TemplateBinding Value,Converter={x:Static h:XConverter.OpacityProgressBarConverter}}"
                                     Minimum="{TemplateBinding Minimum}"/>

                        <ProgressBar Background="Transparent"  BorderThickness="{TemplateBinding BorderThickness}"
                                     Opacity="0.5" Style="{DynamicResource S.ProgressBar.Base}"
                                     Foreground="{DynamicResource S.Brush.TextForeground.White}" 
                                     Maximum="100" Minimum="0" IsIndeterminate="True"/>
 
                            <TextBlock HorizontalAlignment="Center"
                                   Foreground="{DynamicResource S.Brush.TextForeground.White}" 
                                   VerticalAlignment="Center"
                                   FontSize="{TemplateBinding FontSize}">
                            <Run Text="{TemplateBinding h:Cattach.Label}"/>
                            <Run Text="{Binding RelativeSource={RelativeSource AncestorType=ProgressBar},Path=Value,Converter={x:Static h:XConverter.DoubleRoundConverter}}"/>
                            <Run Text="%"/>
                                <!--<TextBlock.Triggers>
                                    <EventTrigger RoutedEvent="Loaded">
                                        <BeginStoryboard Storyboard="{DynamicResource S.Storyboard.OpacityForever}"/>
                                    </EventTrigger>
                                </TextBlock.Triggers>-->

                            <TextBlock.Effect>
                                <DropShadowEffect Color="{DynamicResource AccentColor}" ShadowDepth="0" BlurRadius="3"/>
                            </TextBlock.Effect>
                            </TextBlock>
 
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ProgressBar" x:Key="S.Progessbar.CriclePercent" BasedOn="{StaticResource S.ProgressBar.Base}">
        <Setter Property="Background" Value="{DynamicResource S.Brush.TextBorderBrush.Default}"/>
        <Setter Property="Foreground" Value="{DynamicResource S.Brush.Accent}"/>
        <Setter Property="Height" Value="100"/>
        <Setter Property="Width" Value="100"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="h:Cattach.Label" Value=""/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <Viewbox>
                        <Grid>
                            <Grid>
                                <Ellipse Width="100" Height="100" Stroke="{TemplateBinding Background}" StrokeThickness="25"/>
                                <Ellipse Width="100" Height="100" Stroke="{TemplateBinding Foreground}" StrokeThickness="25" StrokeDashArray="182 182" 
                                         RenderTransformOrigin="0.5 0.5" Opacity="{TemplateBinding Value,Converter={x:Static h:XConverter.OpacityProgressBarConverter}}"
                                     StrokeDashOffset="{TemplateBinding Value,Converter={x:Static h:XConverter.CircleProgressBarConverter}}">
                                    <Ellipse.RenderTransform>
                                        <TransformGroup>
                                            <RotateTransform Angle="-90"/>
                                        </TransformGroup>
                                    </Ellipse.RenderTransform>
                                </Ellipse>
                            </Grid>

                            <TextBlock HorizontalAlignment="Center" FontWeight="Bold"
                                   Foreground="{DynamicResource S.Brush.TextForeground.Title}" 
                                   VerticalAlignment="Center"
                                   FontSize="{TemplateBinding FontSize}">
                            <Run Text="{TemplateBinding h:Cattach.Label}"/>
                            <Run Text="{Binding RelativeSource={RelativeSource AncestorType=ProgressBar},Path=Value,Converter={x:Static h:XConverter.DoubleRoundConverter}}"/><Run Text="%"/>
                                <TextBlock.Triggers>
                                    <EventTrigger RoutedEvent="Loaded">
                                        <BeginStoryboard Storyboard="{DynamicResource S.Storyboard.OpacityForever}"/>
                                    </EventTrigger>
                                </TextBlock.Triggers>
                            </TextBlock>
                        </Grid>
                    </Viewbox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style> 


    <!--<Style TargetType="ProgressBar" x:Key="S.ProgressBar.WaittingIFcon" BasedOn="{StaticResource S.ProgressBar.Base}">
        --><!--<Setter Property="h:Cattach.CornerRadius" Value="0" />--><!--
        <Setter Property="Height" Value="400"/>
        <Setter Property="Width" Value="400"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <Grid>
                        <h:Interaction.Triggers>
                            <h:EventTrigger EventName="Loaded">
                                <h:InvokeRandomSplitAnimationAction SplitMilliSecond="-700" RepeatBehavior="Forever">
                                    <h:InvokeRandomSplitAnimationAction.Timelines>
                                        <cl:ArrayList>
                                            <h:RandomDoubleAnimation Duration="00:00:01" UseFrom="False" UseTo="True" Max="3" Min="1" From="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"/>
                                            <h:RandomDoubleAnimation Duration="00:00:01" UseFrom="False" UseTo="True"  Max="3" Min="1" From="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"/>

                                            <h:RandomDoubleAnimation Duration="00:00:01" UseFrom="False" UseTo="True" Max="400" Min="-400" From="0"   Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)"/>
                                            <h:RandomDoubleAnimation Duration="00:00:01" UseFrom="False" UseTo="True" Max="400" Min="-400" From="0"   Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)"/>
                                            <h:RandomDoubleAnimation Duration="00:00:01" From="1" To="0"  Storyboard.TargetProperty="Opacity"/>
                                        </cl:ArrayList>
                                    </h:InvokeRandomSplitAnimationAction.Timelines>
                                </h:InvokeRandomSplitAnimationAction>
                            </h:EventTrigger>
                        </h:Interaction.Triggers>

                        --><!--<h:FButton  FIcon="&#xe90c;" Foreground="Orange"/>
                                <h:FButton  FIcon="&#xe90c;" Foreground="Orange"/>
                                <h:FButton  FIcon="&#xe90c;" Foreground="Orange"/>
                                <h:FButton  FIcon="&#xe90c;" Foreground="Orange"/>
                                <h:FButton  FIcon="&#xe90c;" Foreground="Orange"/>
                                <h:FButton  FIcon="&#xe90c;" Foreground="Orange"/>
                                <h:FButton  FIcon="&#xe90c;" Foreground="Orange"/>
                                <h:FButton  FIcon="&#xe90c;" Foreground="Orange"/>
                                <h:FButton  FIcon="&#xe90c;" Foreground="Orange"/>
                                <h:FButton  FIcon="&#xe90c;" Foreground="Orange"/>
                                <h:FButton  FIcon="&#xe90c;" Foreground="Orange"/>
                                <h:FButton  FIcon="&#xe90c;" Foreground="Orange"/>
                                <h:FButton  FIcon="&#xe90c;" Foreground="Orange"/>
                                <h:FButton  FIcon="&#xe90c;" Foreground="Orange"/>
                                <h:FButton  FIcon="&#xe90c;" Foreground="Orange"/>--><!--

                        <ContentPresenter/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->
</ResourceDictionary>