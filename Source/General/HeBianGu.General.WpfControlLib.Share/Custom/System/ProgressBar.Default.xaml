<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:cl="clr-namespace:System.Collections;assembly=mscorlib"
                    xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing"
                    xmlns:h="QQ:908293466"
                    xmlns:local="clr-namespace:HeBianGu.General.WpfControlLib">

    <SolidColorBrush x:Key="ControlBorderBrush" Color="#999C9F" />
    <SolidColorBrush x:Key="FocusBorderBrush" Color="#EBCECE" />
    <SolidColorBrush x:Key="TextForeground" Color="White" />


    <Style x:Key="{ComponentResourceKey ResourceId=S.ProgressBar.Default, TypeInTargetAssembly={x:Type local:ProgressBarKeys}}" TargetType="ProgressBar">
        <Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.BackgroundDefault}}" />
        <Setter Property="Maximum" Value="100" />
        <Setter Property="Value" Value="100" />
        <Setter Property="Height" Value="{DynamicResource {x:Static h:SystemKeys.ItemHeight}}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FontSize" Value="{DynamicResource {x:Static h:FontSizeKeys.Default}}" />
        <Setter Property="h:Cattach.CornerRadius" Value="{DynamicResource {x:Static h:CornerRadiusKeys.CornerRadius}}" />
        <Setter Property="h:Cattach.Label" Value="Label" />
        <Setter Property="h:Cattach.Watermark" Value="h:Cattach.Watermark " /> 
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.ProgressBar.Buzy, TypeInTargetAssembly={x:Type local:ProgressBarKeys}}" BasedOn="{StaticResource {x:Static h:ProgressBarKeys.Default}}" TargetType="ProgressBar">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="IsIndeterminate" Value="True" />
        <Setter Property="Height" Value="{DynamicResource {x:Static h:SystemKeys.ItemHeight}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.ProgressBar.Single, TypeInTargetAssembly={x:Type local:ProgressBarKeys}}" BasedOn="{StaticResource {x:Static h:ProgressBarKeys.Default}}" TargetType="ProgressBar">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundSelected}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.BackgroundDefault}}" />
        <!--<Setter Property="h:Cattach.CornerRadius" Value="0" />-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <Grid x:Name="Root">
                        <Border x:Name="PART_Track"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding h:Cattach.CornerRadius}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                        <Border x:Name="PART_Indicator"
                                HorizontalAlignment="Left"
                                Background="{TemplateBinding Foreground}"
                                CornerRadius="{TemplateBinding h:Cattach.CornerRadius}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                        <!--<Grid.Effect>
                            <DropShadowEffect ShadowDepth="0" BlurRadius="50" Color="#007ACC" />
                        </Grid.Effect>-->
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter TargetName="Root" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.ProgressBar.RunningPoint, TypeInTargetAssembly={x:Type local:ProgressBarKeys}}" BasedOn="{StaticResource {x:Static h:ProgressBarKeys.Default}}" TargetType="ProgressBar">
        <Setter Property="Foreground" Value="{DynamicResource Accent}" />
        <Setter Property="Background" Value="{DynamicResource ProgressBackground}" />
        <Setter Property="FontSize" Value="10" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <local:RelativeAnimatingContentControl HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
                        <local:RelativeAnimatingContentControl.Resources>
                            <ExponentialEase x:Key="ProgressBarEaseOut" EasingMode="EaseOut" Exponent="1" />
                            <ExponentialEase x:Key="ProgressBarEaseIn" EasingMode="EaseOut" Exponent="1" />
                        </local:RelativeAnimatingContentControl.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate" />
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard RepeatBehavior="Forever" Duration="00:00:04.4">
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.0" Storyboard.TargetName="R1TT" Storyboard.TargetProperty="X">
                                            <LinearDoubleKeyFrame KeyTime="00:00:00.0" Value="0.1" />
                                            <EasingDoubleKeyFrame EasingFunction="{StaticResource ProgressBarEaseOut}" KeyTime="00:00:00.5" Value="33.1" />
                                            <LinearDoubleKeyFrame KeyTime="00:00:02.0" Value="66.1" />
                                            <EasingDoubleKeyFrame EasingFunction="{StaticResource ProgressBarEaseIn}" KeyTime="00:00:02.5" Value="100.1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.2" Storyboard.TargetName="R2TT" Storyboard.TargetProperty="X">
                                            <LinearDoubleKeyFrame KeyTime="00:00:00.0" Value="0.1" />
                                            <EasingDoubleKeyFrame EasingFunction="{StaticResource ProgressBarEaseOut}" KeyTime="00:00:00.5" Value="33.1" />
                                            <LinearDoubleKeyFrame KeyTime="00:00:02.0" Value="66.1" />
                                            <EasingDoubleKeyFrame EasingFunction="{StaticResource ProgressBarEaseIn}" KeyTime="00:00:02.5" Value="100.1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.4" Storyboard.TargetName="R3TT" Storyboard.TargetProperty="X">
                                            <LinearDoubleKeyFrame KeyTime="00:00:00.0" Value="0.1" />
                                            <EasingDoubleKeyFrame EasingFunction="{StaticResource ProgressBarEaseOut}" KeyTime="00:00:00.5" Value="33.1" />
                                            <LinearDoubleKeyFrame KeyTime="00:00:02.0" Value="66.1" />
                                            <EasingDoubleKeyFrame EasingFunction="{StaticResource ProgressBarEaseIn}" KeyTime="00:00:02.5" Value="100.1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.6" Storyboard.TargetName="R4TT" Storyboard.TargetProperty="X">
                                            <LinearDoubleKeyFrame KeyTime="00:00:00.0" Value="0.1" />
                                            <EasingDoubleKeyFrame EasingFunction="{StaticResource ProgressBarEaseOut}" KeyTime="00:00:00.5" Value="33.1" />
                                            <LinearDoubleKeyFrame KeyTime="00:00:02.0" Value="66.1" />
                                            <EasingDoubleKeyFrame EasingFunction="{StaticResource ProgressBarEaseIn}" KeyTime="00:00:02.5" Value="100.1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.8" Storyboard.TargetName="R5TT" Storyboard.TargetProperty="X">
                                            <LinearDoubleKeyFrame KeyTime="00:00:00.0" Value="0.1" />
                                            <EasingDoubleKeyFrame EasingFunction="{StaticResource ProgressBarEaseOut}" KeyTime="00:00:00.5" Value="33.1" />
                                            <LinearDoubleKeyFrame KeyTime="00:00:02.0" Value="66.1" />
                                            <EasingDoubleKeyFrame EasingFunction="{StaticResource ProgressBarEaseIn}" KeyTime="00:00:02.5" Value="100.1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.0" Storyboard.TargetName="R1" Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:02.5" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.2" Storyboard.TargetName="R2" Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:02.5" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.4" Storyboard.TargetName="R3" Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:02.5" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.6" Storyboard.TargetName="R4" Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:02.5" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.8" Storyboard.TargetName="R5" Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:02.5" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid x:Name="Root">
                            <Border x:Name="PART_Track"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}" />
                            <Grid x:Name="ProgressBarRootGrid">
                                <Grid x:Name="IndeterminateRoot" ClipToBounds="True" Visibility="Collapsed">
                                    <Grid HorizontalAlignment="Left">
                                        <Ellipse x:Name="R1"
                                                 Width="{TemplateBinding FontSize}"
                                                 Height="{TemplateBinding FontSize}"
                                                 Fill="{TemplateBinding Foreground}"
                                                 IsHitTestVisible="False"
                                                 Opacity="0">
                                            <Ellipse.RenderTransform>
                                                <TranslateTransform x:Name="R1TT" />
                                            </Ellipse.RenderTransform>
                                        </Ellipse>
                                        <Ellipse x:Name="R2"
                                                 Width="{TemplateBinding FontSize}"
                                                 Height="{TemplateBinding FontSize}"
                                                 Fill="{TemplateBinding Foreground}"
                                                 IsHitTestVisible="False"
                                                 Opacity="0">
                                            <Ellipse.RenderTransform>
                                                <TranslateTransform x:Name="R2TT" />
                                            </Ellipse.RenderTransform>
                                        </Ellipse>
                                        <Ellipse x:Name="R3"
                                                 Width="{TemplateBinding FontSize}"
                                                 Height="{TemplateBinding FontSize}"
                                                 Fill="{TemplateBinding Foreground}"
                                                 IsHitTestVisible="False"
                                                 Opacity="0">
                                            <Ellipse.RenderTransform>
                                                <TranslateTransform x:Name="R3TT" />
                                            </Ellipse.RenderTransform>
                                        </Ellipse>
                                        <Ellipse x:Name="R4"
                                                 Width="{TemplateBinding FontSize}"
                                                 Height="{TemplateBinding FontSize}"
                                                 Fill="{TemplateBinding Foreground}"
                                                 IsHitTestVisible="False"
                                                 Opacity="0">
                                            <Ellipse.RenderTransform>
                                                <TranslateTransform x:Name="R4TT" />
                                            </Ellipse.RenderTransform>
                                        </Ellipse>
                                        <Ellipse x:Name="R5"
                                                 Width="{TemplateBinding FontSize}"
                                                 Height="{TemplateBinding FontSize}"
                                                 Fill="{TemplateBinding Foreground}"
                                                 IsHitTestVisible="False"
                                                 Opacity="0">
                                            <Ellipse.RenderTransform>
                                                <TranslateTransform x:Name="R5TT" />
                                            </Ellipse.RenderTransform>
                                        </Ellipse>
                                    </Grid>
                                </Grid>
                                <Grid x:Name="DeterminateRoot">
                                    <Border x:Name="PART_Indicator" HorizontalAlignment="Left" Background="{TemplateBinding Foreground}" />
                                </Grid>
                            </Grid>
                        </Grid>
                    </local:RelativeAnimatingContentControl>

                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter TargetName="Root" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="true">
                            <Setter TargetName="IndeterminateRoot" Property="Visibility" Value="Visible" />
                            <Setter TargetName="DeterminateRoot" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="PART_Track" Property="Background" Value="Transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.ProgressBar.RunningWaitting, TypeInTargetAssembly={x:Type local:ProgressBarKeys}}" BasedOn="{StaticResource {x:Static h:ProgressBarKeys.Default}}" TargetType="ProgressBar">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <Grid Height="{TemplateBinding Height}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate" />
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard RepeatBehavior="Forever">
                                        <PointAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)">
                                            <EasingPointKeyFrame KeyTime="0:0:0" Value="0.5,0.5" />
                                            <EasingPointKeyFrame KeyTime="0:0:1.5" Value="1.95,0.5" />
                                            <EasingPointKeyFrame KeyTime="0:0:3" Value="0.5,0.5" />
                                        </PointAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid Margin="{TemplateBinding BorderThickness}">
                            <Border x:Name="PART_Track" CornerRadius="28">
                                <Grid x:Name="PART_Indicator" HorizontalAlignment="Left" ClipToBounds="True">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition x:Name="width1" />
                                        <ColumnDefinition x:Name="width2" Width="0" />
                                    </Grid.ColumnDefinitions>

                                    <Grid x:Name="Animation" RenderTransformOrigin="0.5,0.5">
                                        <Grid.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform ScaleX="1" ScaleY="-1" />
                                                <SkewTransform AngleX="0" AngleY="0" />
                                                <RotateTransform Angle="180" />
                                                <TranslateTransform />
                                            </TransformGroup>
                                        </Grid.RenderTransform>

                                        <Border Background="{TemplateBinding Background}" CornerRadius="0,28,28,0" />
                                    </Grid>
                                </Grid>
                            </Border>
                        </Grid>
                    </Grid>

                    <!--<ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Loaded">
                            <BeginStoryboard Storyboard="{StaticResource {x:Static h:StoryBoardKeys.OpacityForever}}"/>
                        </EventTrigger>
                    </ControlTemplate.Triggers>-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.ProgessBar.WaittingPercent, TypeInTargetAssembly={x:Type local:ProgressBarKeys}}" BasedOn="{StaticResource {x:Static h:ProgressBarKeys.Default}}" TargetType="ProgressBar">
        <Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
        <Setter Property="Width" Value="300" />
        <Setter Property="Height" Value="30" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="h:Cattach.Label" Value="当前进度" />
        <Setter Property="Clip">
            <Setter.Value>
                <RectangleGeometry RadiusX="15" RadiusY="15">
                    <RectangleGeometry.Rect>
                        <Rect Width="300" Height="30" />
                    </RectangleGeometry.Rect>
                </RectangleGeometry>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <Grid Background="{TemplateBinding Background}">

                        <ProgressBar Background="Transparent"
                                     BorderThickness="{TemplateBinding BorderThickness}"
                                     Foreground="{TemplateBinding Foreground}"
                                     Maximum="{TemplateBinding Maximum}"
                                     Minimum="{TemplateBinding Minimum}"
                                     Opacity="{TemplateBinding Value,
                                                               Converter={x:Static h:XConverter.OpacityProgressBarConverter}}"
                                     Style="{DynamicResource {x:Static h:ProgressBarKeys.Default}}"
                                     Value="{TemplateBinding Value}" />

                        <ProgressBar Background="Transparent"
                                     BorderThickness="{TemplateBinding BorderThickness}"
                                     Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}"
                                     IsIndeterminate="True"
                                     Maximum="100"
                                     Minimum="0"
                                     Opacity="0.5"
                                     Style="{DynamicResource {x:Static h:ProgressBarKeys.Default}}" />

                        <TextBlock HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   FontSize="{TemplateBinding FontSize}"
                                   Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}">
                            <Run Text="{TemplateBinding h:Cattach.Label}" />
                            <Run Text="{Binding RelativeSource={RelativeSource AncestorType=ProgressBar}, Path=Value, Converter={x:Static h:XConverter.DoubleRoundConverter}}" />
                            <Run Text="%" />
                            <!--<TextBlock.Triggers>
                                    <EventTrigger RoutedEvent="Loaded">
                                        <BeginStoryboard Storyboard="{DynamicResource {x:Static h:StoryBoardKeys.OpacityForever}}"/>
                                    </EventTrigger>
                                </TextBlock.Triggers>-->

                            <TextBlock.Effect>
                                <DropShadowEffect BlurRadius="3" ShadowDepth="0" Color="{DynamicResource AccentColor}" />
                            </TextBlock.Effect>
                        </TextBlock>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.ProgressBar.CriclePercent, TypeInTargetAssembly={x:Type local:ProgressBarKeys}}" BasedOn="{StaticResource {x:Static h:ProgressBarKeys.Default}}" TargetType="ProgressBar">
        <Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
        <Setter Property="Height" Value="100" />
        <Setter Property="Width" Value="100" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="h:Cattach.Label" Value="" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <Viewbox>
                        <Grid>
                            <Grid>
                                <Ellipse Width="100"
                                         Height="100"
                                         Stroke="{TemplateBinding Background}"
                                         StrokeThickness="25" />
                                <Ellipse Width="100"
                                         Height="100"
                                         Opacity="{TemplateBinding Value,
                                                                   Converter={x:Static h:XConverter.OpacityProgressBarConverter}}"
                                         RenderTransformOrigin="0.5 0.5"
                                         Stroke="{TemplateBinding Foreground}"
                                         StrokeDashArray="182 182"
                                         StrokeDashOffset="{TemplateBinding Value,
                                                                            Converter={x:Static h:XConverter.CircleProgressBarConverter}}"
                                         StrokeThickness="25">
                                    <Ellipse.RenderTransform>
                                        <TransformGroup>
                                            <RotateTransform Angle="-90" />
                                        </TransformGroup>
                                    </Ellipse.RenderTransform>
                                </Ellipse>
                            </Grid>

                            <TextBlock HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       FontSize="{TemplateBinding FontSize}"
                                       FontWeight="Bold"
                                       Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundTitle}}">
                                <Run Text="{TemplateBinding h:Cattach.Label}" />
                                <Run Text="{Binding RelativeSource={RelativeSource AncestorType=ProgressBar}, Path=Value, Converter={x:Static h:XConverter.DoubleRoundConverter}}" /><Run Text="%" />
                                <TextBlock.Triggers>
                                    <EventTrigger RoutedEvent="Loaded">
                                        <BeginStoryboard Storyboard="{DynamicResource {x:Static h:StoryBoardKeys.OpacityForever}}" />
                                    </EventTrigger>
                                </TextBlock.Triggers>
                            </TextBlock>
                        </Grid>
                    </Viewbox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--<Style TargetType="ProgressBar" x:Key="S.ProgressBar.WaittingIFcon" BasedOn="{StaticResource {x:Static h:ProgressBarKeys.Default}}">
    -->
    <!--<Setter Property="h:Cattach.CornerRadius" Value="0" />-->
    <!--
        <Setter Property="Height" Value="400"/>
        <Setter Property="Width" Value="400"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <Grid>
                        <h:Interaction.Triggers>
                            <h:EventTrigger EventName="Loaded">
                                <h:InvokeRandomSplitAnimationAction SplitMilliSecond="-700" RepeatBehavior="Forever">
                                    <h:InvokeRandomSplitAnimationAction.Timelines>
                                        <cl:ArrayList>
                                            <h:RandomDoubleAnimation Duration="00:00:01" UseFrom="False" UseTo="True" Max="3" Min="1" From="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"/>
                                            <h:RandomDoubleAnimation Duration="00:00:01" UseFrom="False" UseTo="True"  Max="3" Min="1" From="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"/>

                                            <h:RandomDoubleAnimation Duration="00:00:01" UseFrom="False" UseTo="True" Max="400" Min="-400" From="0"   Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)"/>
                                            <h:RandomDoubleAnimation Duration="00:00:01" UseFrom="False" UseTo="True" Max="400" Min="-400" From="0"   Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)"/>
                                            <h:RandomDoubleAnimation Duration="00:00:01" From="1" To="0"  Storyboard.TargetProperty="Opacity"/>
                                        </cl:ArrayList>
                                    </h:InvokeRandomSplitAnimationAction.Timelines>
                                </h:InvokeRandomSplitAnimationAction>
                            </h:EventTrigger>
                        </h:Interaction.Triggers>

    -->
    <!--<h:FButton  Icon="&#xe90c;" Foreground="Orange"/>
                                <h:FButton  Icon="&#xe90c;" Foreground="Orange"/>
                                <h:FButton  Icon="&#xe90c;" Foreground="Orange"/>
                                <h:FButton  Icon="&#xe90c;" Foreground="Orange"/>
                                <h:FButton  Icon="&#xe90c;" Foreground="Orange"/>
                                <h:FButton  Icon="&#xe90c;" Foreground="Orange"/>
                                <h:FButton  Icon="&#xe90c;" Foreground="Orange"/>
                                <h:FButton  Icon="&#xe90c;" Foreground="Orange"/>
                                <h:FButton  Icon="&#xe90c;" Foreground="Orange"/>
                                <h:FButton  Icon="&#xe90c;" Foreground="Orange"/>
                                <h:FButton  Icon="&#xe90c;" Foreground="Orange"/>
                                <h:FButton  Icon="&#xe90c;" Foreground="Orange"/>
                                <h:FButton  Icon="&#xe90c;" Foreground="Orange"/>
                                <h:FButton  Icon="&#xe90c;" Foreground="Orange"/>
                                <h:FButton  Icon="&#xe90c;" Foreground="Orange"/>-->
    <!--

                        <ContentPresenter/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->
</ResourceDictionary>