<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:h="QQ:908293466"
                    xmlns:local="clr-namespace:HeBianGu.General.WpfControlLib">


    <Style x:Key="S.GroupBox.Default" TargetType="{x:Type GroupBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Background" Value="{DynamicResource S.Brush.TextBackground.Default}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource S.Brush.Accent}"/>
        <Setter Property="Foreground" Value="{DynamicResource S.Brush.TextForeground.Default}"/>
        <Setter Property="h:Cattach.SelectForeground" Value="{DynamicResource S.Brush.TextForeground.White}"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Padding" Value="15"/>
        <Setter Property="h:Cattach.FIcon" Value="&#xea5e;"/>
        <Setter Property="h:Cattach.FIconSize" Value="14"/>
        <Setter Property="h:Cattach.FIconMargin" Value="5"/>
        <Setter Property="h:Cattach.CornerRadius" Value="{DynamicResource S.Window.Item.CornerRadius}"/>
        <Setter Property="h:Cattach.TitleBackground" Value="{DynamicResource S.Brush.Accent}"/>
        <Setter Property="h:Cattach.TitleForeground" Value="{DynamicResource S.Brush.TextForeground.White}"/>
        <Setter Property="h:Cattach.TitleBorderBrush" Value="Transparent"/>
        <Setter Property="h:Cattach.TitleBorderThickness" Value="1"/>
        <Setter Property="h:Cattach.MouseOverBackground" Value="{DynamicResource S.Brush.Accent}" />
        <Setter Property="h:Cattach.MouseOverForeground" Value="{DynamicResource S.Brush.TextForeground.White}" />
        <Setter Property="h:Cattach.MouseOverBorderBrush" Value="{DynamicResource S.Brush.Accent}" /> 
        <Setter Property="local:ShadowAssist.ShadowDepth" Value="{DynamicResource S.EffectShadow.5}"/>
        <!--<Setter Property="RenderTransform" Value="{StaticResource S.TransformGroup.Default}"/>-->
        <Setter Property="FontSize" Value="{DynamicResource S.FontSize.Header.5}"/>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>

                        <Border Grid.RowSpan="2" Margin="0,0,0,0" x:Name="bordercenter"
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                Background="{TemplateBinding Background}" 
                                Effect="{Binding RelativeSource={RelativeSource TemplatedParent},Path=(local:ShadowAssist.ShadowDepth)}"
                                BorderThickness="1" CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent},Path=(h:Cattach.CornerRadius)}" Opacity="1">
                        </Border> 
                        
                        <ContentPresenter ContentSource="Header"/>
                        
                        <ContentPresenter Grid.Row="1" Margin="{TemplateBinding Padding}"/>

                        <ContentControl Template="{TemplateBinding h:Cattach.AttachContent}" HorizontalAlignment="Right"/>
                        
                    </Grid>
                    <ControlTemplate.Triggers> 
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=Self},Path=(h:Cattach.MouseOverBorderBrush)}" />
                        </Trigger> 
                        
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="{DynamicResource S.Opacity.Disable}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid Height="{DynamicResource S.Window.Row.Height}">
                        <Border x:Name="border" Background="{Binding RelativeSource={RelativeSource AncestorType=GroupBox},Path=(h:Cattach.TitleBackground)}"  
                                BorderThickness="{Binding RelativeSource={RelativeSource AncestorType=GroupBox},Path=(h:Cattach.TitleBorderThickness)}"
                                BorderBrush="{Binding RelativeSource={RelativeSource AncestorType=GroupBox},Path=(h:Cattach.TitleBorderBrush)}"
                                CornerRadius="{DynamicResource S.Window.Item.CornerRadius.Top}" Margin="0,-1,0,0">
                            <StackPanel x:Name="sp" Orientation="Horizontal" TextBlock.Foreground="{Binding RelativeSource={RelativeSource AncestorType=GroupBox},Path=(h:Cattach.TitleForeground)}">

                                <TextBlock Style="{DynamicResource FIcon}" 
                                           FontSize="{Binding RelativeSource={RelativeSource AncestorType=GroupBox},Path=(h:Cattach.FIconSize)}"
                                           Margin="{Binding RelativeSource={RelativeSource AncestorType=GroupBox},Path=(h:Cattach.FIconMargin)}"
                                           Text="{Binding RelativeSource={RelativeSource AncestorType=GroupBox},Path=(h:Cattach.FIcon)}"/>

                                <TextBlock Text="{Binding}" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="{DynamicResource S.FontSize.Default}"/>
                            </StackPanel>
                        </Border>
                    </Grid>

                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=GroupBox},Path=IsMouseOver}" Value="true">
                            <!--<Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource AncestorType=GroupBox},Path=(h:Cattach.MouseOverBorderBrush)}" TargetName="border"/>-->
                            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource AncestorType=GroupBox},Path=(h:Cattach.MouseOverBackground)}" TargetName="border"/>
                            <Setter Property="TextBlock.Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType=GroupBox},Path=(h:Cattach.MouseOverForeground)}" TargetName="sp"/>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Header" Value="Header"/>
    </Style>

    <Style x:Key="S.GroupBox.Default.WithClose" TargetType="{x:Type GroupBox}" BasedOn="{StaticResource S.GroupBox.Default}">
        <Setter Property="h:Cattach.AttachContent">
            <Setter.Value>
                <ControlTemplate>
                    <local:FButton  Width="35" Height="35" 
                                        MouseOverForeground="{DynamicResource S.Brush.TextForeground.White}"  PressedForeground="{DynamicResource S.Brush.TextForeground.White}"
                                        AllowsAnimation="True" 
                                        Style="{DynamicResource S.FButton.Style.Transparent}"  
                                        FIcon="&#xe6f4;" FIconSize="15" Command="{x:Static local:CommandService.Close}"
                                        Foreground="{DynamicResource S.Brush.TextForeground.White}">
                    </local:FButton>
                </ControlTemplate>
            </Setter.Value>
        </Setter> 
    </Style>

    <Style x:Key="S.GroupBox.System" TargetType="{x:Type GroupBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Background" Value="{DynamicResource S.Brush.TextBackground.Default}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource S.Brush.TextBorderBrush.Default}"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Padding" Value="15"/>
        <Setter Property="h:Cattach.FIcon" Value="&#xea5e;"/>
        <Setter Property="h:Cattach.FIconSize" Value="14"/>
        <Setter Property="h:Cattach.FIconMargin" Value="5,0"/>
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid Height="{DynamicResource S.Window.Row.Height}">
                        <Border>
                            <StackPanel Orientation="Horizontal" TextBlock.Foreground="{DynamicResource S.Brush.TextForeground.Default}">

                                <TextBlock Style="{DynamicResource FIcon}"
                                           FontSize="{Binding RelativeSource={RelativeSource AncestorType=GroupBox},Path=(h:Cattach.FIconSize)}"
                                           Margin="{Binding RelativeSource={RelativeSource AncestorType=GroupBox},Path=(h:Cattach.FIconMargin)}"
                                           Text="{Binding RelativeSource={RelativeSource AncestorType=GroupBox},Path=(h:Cattach.FIcon)}"/>

                                <TextBlock Text="{Binding}" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="{DynamicResource S.FontSize.Default}"/>
                            </StackPanel>
                        </Border>
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="S.GroupBox.UnderLine" TargetType="{x:Type GroupBox}" BasedOn="{StaticResource S.GroupBox.Default}">
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="local:ShadowAssist.ShadowDepth" Value="{x:Null}"/>
        <Setter Property="h:Cattach.TitleBackground" Value="Transparent"/>
        <Setter Property="h:Cattach.TitleForeground" Value="{DynamicResource S.Brush.TextForeground.Default}"/>
        <Setter Property="h:Cattach.TitleBorderBrush" Value="{DynamicResource S.Brush.TextBorderBrush.Default}"/>
        <Setter Property="h:Cattach.TitleBorderThickness" Value="0,0,0,1.5"/>

        <Setter Property="h:Cattach.MouseOverBackground" Value="Transparent" />
        <Setter Property="h:Cattach.MouseOverForeground" Value="{DynamicResource S.Brush.TextForeground.Default}" />
        <Setter Property="h:Cattach.MouseOverBorderBrush" Value="{DynamicResource S.Brush.TextBorderBrush.Default}" />
        
        <!--<Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid Height="{DynamicResource S.Window.Row.Height}">
                        <Border BorderBrush="{DynamicResource S.Brush.TextBorderBrush.Default}" 
                                Background="Transparent"  
                                BorderThickness="0,0,0,1.5" CornerRadius="{DynamicResource S.Window.Item.CornerRadius.Top}">

                            <StackPanel Orientation="Horizontal">
                                <TextBlock Style="{DynamicResource FIcon}" 
                                           FontSize="{Binding RelativeSource={RelativeSource AncestorType=GroupBox},Path=(h:Cattach.FIconSize)}"
                                           Margin="{Binding RelativeSource={RelativeSource AncestorType=GroupBox},Path=(h:Cattach.FIconMargin)}"
                                           Text="{Binding RelativeSource={RelativeSource AncestorType=GroupBox},Path=(h:Cattach.FIcon)}"/>

                                <TextBlock Text="{Binding}" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="{DynamicResource S.FontSize.Default}"/>
                            </StackPanel>
                        </Border>
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>-->
    </Style>

    <Style x:Key="S.GroupBox.Single" TargetType="{x:Type GroupBox}" BasedOn="{StaticResource S.GroupBox.Default}">
        <Setter Property="BorderBrush" Value="{DynamicResource S.Brush.TextBorderBrush.Default}"/>
        <Setter Property="local:ShadowAssist.ShadowDepth" Value="{x:Null}"/>
        <Setter Property="h:Cattach.TitleBackground" Value="{DynamicResource S.Brush.TextForeground.MouseOver}"/>
        <Setter Property="h:Cattach.TitleForeground" Value="{DynamicResource S.Brush.TextForeground.Default}"/>
        <Setter Property="h:Cattach.TitleBorderBrush" Value="{DynamicResource S.Brush.TextBorderBrush.Default}"/>

        <Setter Property="h:Cattach.MouseOverBackground" Value="{DynamicResource S.Brush.TextForeground.Selected}" />
        <Setter Property="h:Cattach.MouseOverForeground" Value="{DynamicResource S.Brush.TextForeground.Default}"/>
        <Setter Property="h:Cattach.MouseOverBorderBrush" Value="{DynamicResource S.Brush.TextBorderBrush.Default}"/> 
    </Style>
    <Style x:Key="S.GroupBox.ShowCode" TargetType="GroupBox" BasedOn="{StaticResource S.GroupBox.Default}">
        <Setter Property="RenderTransform" Value="{StaticResource S.TransformGroup.Default}"/>
        <Setter Property="h:Cattach.AttachContent">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Button Style="{DynamicResource S.Button.Transparent}" Margin="10,0"
                                    Foreground="{DynamicResource S.Brush.TextForeground.White}"
                                    h:Cattach.FIcon="&#xe7e7;" 
                                    Command="{x:Static local:CommandService.ShowCopyWindowCommand}"
                                    CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=GroupBox},Path=(h:Cattach.Text)}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>