<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:h="https://github.com/HeBianGu"
                    xmlns:local="clr-namespace:HeBianGu.Service.Mvp">
    <ResourceDictionary.MergedDictionaries>
        <!--<ResourceDictionary Source="pack://application:,,,/HeBianGu.General.WpfControlLib;component/Custom/Control/Button.xaml"/>-->
        <ResourceDictionary Source="pack://application:,,,/HeBianGu.General.WpfControlLib;component/Custom/System/ToggleButton.xaml" />
        <ResourceDictionary Source="pack://application:,,,/HeBianGu.General.WpfControlLib;component/Custom/System/Button.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="S.Button.Window.Setting" BasedOn="{StaticResource {x:Static h:ButtonKeys.SetTransparent}}" TargetType="{x:Type Button}">
        <Setter Property="h:Cattach.IconSize" Value="16" />
        <Setter Property="h:Cattach.Icon" Value="&#xe88e;" />
        <Setter Property="Margin" Value="5,0" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="IsEnabled" Value="{local:PresenterIsEnabled Type={x:Type local:ISettingViewPresenter}}" />
        <Setter Property="Visibility" Value="{local:PresenterVisiblity Type={x:Type local:ISettingViewPresenter}}" />
        <Setter Property="Command" Value="{x:Static local:PresenterCommands.Invoke}" />
        <Setter Property="CommandParameter" Value="{x:Type local:ISettingViewPresenter}" />
        <Setter Property="Foreground" Value="{Binding Path=(h:Cattach.CaptionForeground), RelativeSource={RelativeSource AncestorType=h:WindowBase}}" />
    </Style>

    <Style x:Key="S.ToggleButton.Window.Theme" BasedOn="{StaticResource {x:Static h:ToggleButtonKeys.BrushFIconChecked}}" TargetType="{x:Type ToggleButton}">
        <Setter Property="h:Cattach.IconSize" Value="25" />
        <Setter Property="h:Cattach.Icon" Value="&#xe6d2;" />
        <Setter Property="Margin" Value="5,0" />
        <Setter Property="IsEnabled" Value="{local:PresenterIsEnabled Type={x:Type local:IThemeViewPresenter}}" />
        <Setter Property="Visibility" Value="{local:PresenterVisiblity Type={x:Type local:IThemeViewPresenter}}" />
        <Setter Property="Command" Value="{x:Static local:PresenterCommands.Invoke}" />
        <Setter Property="CommandParameter" Value="{x:Type local:IThemeViewPresenter}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="ToolTip" Value="皮肤样式设置" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{Binding Path=(h:Cattach.CaptionForeground), RelativeSource={RelativeSource AncestorType=Window}}" />
    </Style>

    <Style x:Key="S.ToggleButton.Window.Guide" BasedOn="{StaticResource {x:Static h:ToggleButtonKeys.BrushFIconChecked}}" TargetType="{x:Type ToggleButton}">
        <Setter Property="h:Cattach.IconSize" Value="25" />
        <Setter Property="h:Cattach.Icon" Value="&#xe713;" />
        <Setter Property="Margin" Value="5,0" />
        <Setter Property="IsEnabled" Value="{local:PresenterIsEnabled Type={x:Type local:IGuideViewPresenter}}" />
        <Setter Property="Visibility" Value="{local:PresenterVisiblity Type={x:Type local:IGuideViewPresenter}}" />
        <Setter Property="Command" Value="{x:Static local:PresenterCommands.Invoke}" />
        <Setter Property="CommandParameter" Value="{x:Type local:IGuideViewPresenter}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="ToolTip" Value="新手向导" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{Binding Path=(h:Cattach.CaptionForeground), RelativeSource={RelativeSource AncestorType=Window}}" />
    </Style>

</ResourceDictionary>