<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:cl="clr-namespace:System.Collections;assembly=mscorlib"
                    xmlns:h="https://github.com/HeBianGu"
                    xmlns:local="clr-namespace:HeBianGu.Systems.Repository"
                    xmlns:sys="clr-namespace:System">

    <ResourceDictionary.MergedDictionaries>
        <!--<ResourceDictionary Source="pack://application:,,,/HeBianGu.General.WpfControlLib;component/Custom/Window/WindowBase.xaml"/>-->
        <ResourceDictionary Source="pack://application:,,,/HeBianGu.Control.PropertyGrid;component/PropertyView.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="S.RepositoryView.Default" TargetType="{x:Type local:RepositoryView}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:RepositoryView}">
                    <DockPanel>
                        <DockPanel DockPanel.Dock="Top" LastChildFill="False">
                            <CheckBox x:Name="cb_all"
                                      Command="{Binding CheckAllCommand}"
                                      CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsChecked}"
                                      Content="全选"
                                      Visibility="{Binding Source={x:Static sys:RepositorySetting.Instance}, Path=UseCheckAll, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}" />

                            <Button Margin="2,0"
                                    Command="{Binding AddCommand}"
                                    Content="添加"
                                    DockPanel.Dock="Right"
                                    Style="{DynamicResource {x:Static h:ButtonKeys.Add}}"
                                    Visibility="{Binding Source={x:Static sys:RepositorySetting.Instance}, Path=UseAdd, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}" />

                            <Button Command="{Binding AddCommand}"
                                    Content="批量添加"
                                    DockPanel.Dock="Right"
                                    Style="{DynamicResource {x:Static h:ButtonKeys.Add}}"
                                    Visibility="{Binding Source={x:Static sys:RepositorySetting.Instance}, Path=UseAdd, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}" />

                            <Button Command="{Binding DeleteSelectedCommand}"
                                    Content="删除选中"
                                    Style="{DynamicResource {x:Static h:ButtonKeys.Delete}}"
                                    Visibility="{Binding Source={x:Static sys:RepositorySetting.Instance}, Path=UseDeleteSelected, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}" />

                            <Button Command="{Binding ClearCommand}"
                                    Content="清空"
                                    DockPanel.Dock="Left"
                                    Style="{DynamicResource {x:Static h:ButtonKeys.Delete}}"
                                    Visibility="{Binding Source={x:Static sys:RepositorySetting.Instance}, Path=UseClear, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}" />

                            <Button x:Name="bt_gridset"
                                    Width="Auto"
                                    Command="{Binding GridSetCommand}"
                                    CommandParameter="{Binding ElementName=dg, Path=ColumnSet.ColumnSetItems}"
                                    Content="设置"
                                    DockPanel.Dock="Right"
                                    Style="{DynamicResource {x:Static h:ButtonKeys.Set}}"
                                    Visibility="{Binding Source={x:Static sys:RepositorySetting.Instance}, Path=UseGridSet, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}" />

                            <Button Command="{Binding ExportXmlCommand}"
                                    Content="导出Xml"
                                    Style="{DynamicResource {x:Static h:ButtonKeys.Transparent}}"
                                    Visibility="{Binding Source={x:Static sys:RepositorySetting.Instance}, Path=UseExportXml, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}" />

                            <Button Command="{Binding ExportXmlCommand}"
                                    Content="导出Json"
                                    Style="{DynamicResource {x:Static h:ButtonKeys.Transparent}}"
                                    Visibility="{Binding Source={x:Static sys:RepositorySetting.Instance}, Path=UseExportXml, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}" />

                            <Button Command="{Binding ExportXmlCommand}"
                                    Content="导出Excel"
                                    Style="{DynamicResource {x:Static h:ButtonKeys.Transparent}}"
                                    Visibility="{Binding Source={x:Static sys:RepositorySetting.Instance}, Path=UseExportXml, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}" />

                            <Button Command="{Binding ExportXmlCommand}"
                                    Content="导入Xml"
                                    Style="{DynamicResource {x:Static h:ButtonKeys.Transparent}}"
                                    Visibility="{Binding Source={x:Static sys:RepositorySetting.Instance}, Path=UseExportXml, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}" />

                            <Button Command="{Binding ExportXmlCommand}"
                                    Content="导入Json"
                                    Style="{DynamicResource {x:Static h:ButtonKeys.Transparent}}"
                                    Visibility="{Binding Source={x:Static sys:RepositorySetting.Instance}, Path=UseExportXml, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}" />

                            <Button Command="{Binding ExportXmlCommand}"
                                    Content="导入Excel"
                                    Style="{DynamicResource {x:Static h:ButtonKeys.Transparent}}"
                                    Visibility="{Binding Source={x:Static sys:RepositorySetting.Instance}, Path=UseExportXml, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}" />

                            <Button Command="{Binding ExportXmlCommand}"
                                    Content="撤销"
                                    Style="{DynamicResource {x:Static h:ButtonKeys.Transparent}}"
                                    Visibility="{Binding Source={x:Static sys:RepositorySetting.Instance}, Path=UseExportXml, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}" />

                            <Button Command="{Binding ExportXmlCommand}"
                                    Content="重做"
                                    Style="{DynamicResource {x:Static h:ButtonKeys.Transparent}}"
                                    Visibility="{Binding Source={x:Static sys:RepositorySetting.Instance}, Path=UseExportXml, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}" />

                        </DockPanel>

                        <Separator Margin="0,5,0,2" DockPanel.Dock="Top" />

                        <Grid>
                            <DockPanel x:Name="lb">
                                <Grid Height="{DynamicResource {x:Static h:SystemKeys.RowHeight}}" DockPanel.Dock="Bottom" Visibility="{Binding Source={x:Static sys:RepositorySetting.Instance}, Path=UsePagination, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}">
                                    <StackPanel HorizontalAlignment="Left" Orientation="Horizontal">
                                        <TextBlock Style="{DynamicResource {x:Static h:TextBlockKeys.FontSize16}}">
                                            <Run Text="第" />
                                            <Run FontWeight="Black" Text="{Binding ItemsSource.MinValue, FallbackValue=0}" />
                                            <Run Text="到" />
                                            <Run FontWeight="Black" Text="{Binding ItemsSource.MaxValue, FallbackValue=0}" />
                                            <Run Text="条记录，共" />
                                            <Run FontWeight="Black" Text="{Binding ItemsSource.Total}" />
                                            <Run Text="条" />
                                        </TextBlock>
                                    </StackPanel>

                                    <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                                        <h:Pagination Width="600" MaxPageCount="{Binding ItemsSource.TotalPage, Mode=TwoWay}" PageIndex="{Binding ItemsSource.PageIndex, Mode=TwoWay}" />
                                    </StackPanel>
                                </Grid>

                                <h:Row Margin="0,2" DockPanel.Dock="Bottom" Style="{DynamicResource {x:Static h:Row.Column4Key}}">
                                    <!--<ListBox Style="{DynamicResource {x:Static h:ListBoxKeys.Label}}" h:Cattach.Title="布局"
                                     SelectedItem="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=ItemsPanel}"
                                     ItemsSource="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=ItemsPanelSelectSource}">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Name}"/>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>-->

                                    <ComboBox h:Cattach.Title="布局"
                                              ItemsSource="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ItemsPanelSelectSource}"
                                              SelectedItem="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ItemsPanel}"
                                              Style="{DynamicResource {x:Static h:ComboBoxKeys.LabelSingle}}"
                                              Visibility="{Binding Source={x:Static sys:RepositorySetting.Instance}, Path=UseLoyout, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Name}" />
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>

                                    <ComboBox Grid.Column="1"
                                              h:Cattach.Title="显示"
                                              ItemsSource="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ItemTemplateSelectSource}"
                                              SelectedItem="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ItemTemplate}"
                                              Style="{DynamicResource {x:Static h:ComboBoxKeys.LabelSingle}}"
                                              Visibility="{Binding Source={x:Static sys:RepositorySetting.Instance}, Path=UseTemplate, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Name}" />
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>

                                    <DockPanel Grid.Column="3" DockPanel.Dock="Right" Visibility="{Binding Source={x:Static sys:RepositorySetting.Instance}, Path=UsePageCount, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}">
                                        <TextBlock Style="{DynamicResource {x:Static h:TextBlockKeys.Default}}" Text="每页显示条数:" />
                                        <TextBlock DockPanel.Dock="Right" Style="{DynamicResource {x:Static h:TextBlockKeys.Default}}" Text="{Binding ElementName=slider, Path=Value}" />
                                        <Slider x:Name="slider"
                                                VerticalAlignment="Center"
                                                Maximum="{Binding ItemsSource.Total}"
                                                Minimum="2"
                                                SmallChange="1"
                                                Value="{Binding ItemsSource.PageCount}" />

                                    </DockPanel>

                                    <TextBox Grid.Column="2"
                                             h:Cattach.Title="搜索"
                                             Style="{DynamicResource {x:Static h:TextBoxKeys.Label}}"
                                             Text="{Binding SearchText}">
                                        <h:Interaction.Triggers>
                                            <!--<h:EventTrigger EventName="TextChanged">
                                                <h:InvokeCommandAction Command="{Binding SearchTextCommand}"/>
                                            </h:EventTrigger>-->
                                            <h:KeyTrigger Key="Enter">
                                                <h:InvokeCommandAction Command="{Binding SearchTextCommand}" />
                                            </h:KeyTrigger>
                                        </h:Interaction.Triggers>
                                    </TextBox>
                                </h:Row>

                                <Separator Margin="0,5,0,2" DockPanel.Dock="Bottom" />

                                <ScrollViewer>
                                    <ListBox ItemsPanel="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ItemsPanel.ItemsPanelTemplate}"
                                             ItemsSource="{Binding ItemsSource.Source}"
                                             SelectedItem="{Binding SelectedItem}"
                                             Style="{DynamicResource {x:Static h:ListBoxKeys.Clear}}">
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <Border Style="{DynamicResource {x:Static h:BorderKeys.Card}}">
                                                    <h:PropertyView VerticalAlignment="Stretch" SelectObject="{Binding Model}" Style="{DynamicResource {x:Static h:PropertyView.SingleKey}}">
                                                        <h:PropertyView.BottomContent>
                                                            <DockPanel LastChildFill="False">
                                                                <UniformGrid DockPanel.Dock="Right" Rows="1">
                                                                    <Button Command="{Binding RelativeSource={RelativeSource AncestorType=local:RepositoryView}, Path=DataContext.DeleteCommand}"
                                                                            DockPanel.Dock="Right"
                                                                            Style="{DynamicResource {x:Static h:ButtonKeys.Delete}}"
                                                                            Visibility="{Binding Source={x:Static sys:RepositorySetting.Instance}, Path=UseDelete, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}">
                                                                        <h:Interaction.Behaviors>
                                                                            <h:SelectListBoxItemElementBehavior />
                                                                        </h:Interaction.Behaviors>
                                                                    </Button>

                                                                    <Button Command="{Binding RelativeSource={RelativeSource AncestorType=local:RepositoryView}, Path=DataContext.EditCommand}"
                                                                            DockPanel.Dock="Right"
                                                                            Style="{DynamicResource {x:Static h:ButtonKeys.Edit}}"
                                                                            Visibility="{Binding Source={x:Static sys:RepositorySetting.Instance}, Path=UseEdit, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}">
                                                                        <h:Interaction.Behaviors>
                                                                            <h:SelectListBoxItemElementBehavior />
                                                                        </h:Interaction.Behaviors>
                                                                    </Button>

                                                                    <Button Command="{Binding RelativeSource={RelativeSource AncestorType=local:RepositoryView}, Path=DataContext.DetialCommand}"
                                                                            DockPanel.Dock="Right"
                                                                            Style="{DynamicResource {x:Static h:ButtonKeys.Detial}}"
                                                                            Visibility="{Binding Source={x:Static sys:RepositorySetting.Instance}, Path=UseDetial, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}">
                                                                        <h:Interaction.Behaviors>
                                                                            <h:SelectListBoxItemElementBehavior />
                                                                        </h:Interaction.Behaviors>
                                                                    </Button>

                                                                </UniformGrid>

                                                                <CheckBox Content="选择"
                                                                          DockPanel.Dock="Left"
                                                                          IsChecked="{Binding Selected}"
                                                                          Visibility="{Binding Source={x:Static sys:RepositorySetting.Instance}, Path=UseCheckBox, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}" />

                                                            </DockPanel>

                                                        </h:PropertyView.BottomContent>
                                                    </h:PropertyView>
                                                </Border>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                </ScrollViewer>
                            </DockPanel>

                            <h:AutoColumnPagedDataGrid x:Name="dg"
                                                       AutoGenerateColumns="False"
                                                       BindingPath="Model.{0}"
                                                       DataSource="{Binding ItemsSource.Cache}"
                                                       IsReadOnly="False"
                                                       ModelType="{Binding ModelType}"
                                                       PageCount="{Binding ItemsSource.PageCount}"
                                                       SelectedItem="{Binding SelectedItem}">
                                <h:AutoColumnPagedDataGrid.HomeColumns>
                                    <DataGridTemplateColumn>
                                        <DataGridTemplateColumn.Header>
                                            <CheckBox h:Cattach.MouseOverForeground="{Binding RelativeSource={RelativeSource AncestorType=DataGridColumnHeader}, Path=Foreground}"
                                                      Command="{Binding RelativeSource={RelativeSource AncestorType=local:RepositoryView}, Path=DataContext.CheckAllCommand}"
                                                      CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsChecked}"
                                                      Content="全选"
                                                      Foreground="{Binding RelativeSource={RelativeSource AncestorType=DataGridColumnHeader}, Path=Foreground}"
                                                      Visibility="{Binding Source={x:Static sys:RepositorySetting.Instance}, Path=UseCheckAll, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}" />
                                        </DataGridTemplateColumn.Header>
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <CheckBox Foreground="{Binding RelativeSource={RelativeSource AncestorType=DataGridCell}, Path=Foreground}" IsChecked="{Binding Selected}" />
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                </h:AutoColumnPagedDataGrid.HomeColumns>
                                <h:AutoColumnPagedDataGrid.EndColumns>
                                    <DataGridTemplateColumn Width="Auto" Header="操作">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <UniformGrid Rows="1">
                                                    <Button Command="{Binding RelativeSource={RelativeSource AncestorType=local:RepositoryView}, Path=DataContext.DeleteCommand}" Style="{DynamicResource {x:Static h:ButtonKeys.Delete}}" Visibility="{Binding Source={x:Static sys:RepositorySetting.Instance}, Path=UseDelete, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}">
                                                        <h:Interaction.Behaviors>
                                                            <h:SelectListBoxItemElementBehavior />
                                                        </h:Interaction.Behaviors>
                                                    </Button>

                                                    <Button Command="{Binding RelativeSource={RelativeSource AncestorType=local:RepositoryView}, Path=DataContext.EditCommand}" Style="{DynamicResource {x:Static h:ButtonKeys.Edit}}" Visibility="{Binding Source={x:Static sys:RepositorySetting.Instance}, Path=UseEdit, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}">
                                                        <h:Interaction.Behaviors>
                                                            <h:SelectListBoxItemElementBehavior />
                                                        </h:Interaction.Behaviors>
                                                    </Button>

                                                    <Button Command="{Binding RelativeSource={RelativeSource AncestorType=local:RepositoryView}, Path=DataContext.DetialCommand}" Style="{DynamicResource {x:Static h:ButtonKeys.Detial}}" Visibility="{Binding Source={x:Static sys:RepositorySetting.Instance}, Path=UseDetial, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}">
                                                        <h:Interaction.Behaviors>
                                                            <h:SelectListBoxItemElementBehavior />
                                                        </h:Interaction.Behaviors>
                                                    </Button>
                                                </UniformGrid>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                </h:AutoColumnPagedDataGrid.EndColumns>
                            </h:AutoColumnPagedDataGrid>
                        </Grid>

                        <h:Interaction.Triggers>
                            <h:EventTrigger EventName="Loaded">
                                <h:InvokeCommandAction Command="{Binding LoadedCommand}" />
                            </h:EventTrigger>
                        </h:Interaction.Triggers>
                    </DockPanel>

                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Source={x:Static sys:RepositorySetting.Instance}, Path=ItemsControlType}" Value="ListBox">
                            <Setter TargetName="dg" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="lb" Property="Visibility" Value="Visible" />
                            <Setter TargetName="bt_gridset" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding Source={x:Static sys:RepositorySetting.Instance}, Path=ItemsControlType}" Value="PagedDataGrid">
                            <Setter TargetName="dg" Property="Visibility" Value="Visible" />
                            <Setter TargetName="lb" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="cb_all" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ItemsPanelSelectSource">
            <Setter.Value>
                <x:Array Type="{x:Type local:ItemsPanelTemplateDisplay}">
                    <local:ItemsPanelTemplateDisplay Name="StackPanel">
                        <local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                            <ItemsPanelTemplate>
                                <StackPanel />
                            </ItemsPanelTemplate>
                        </local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                    </local:ItemsPanelTemplateDisplay>

                    <local:ItemsPanelTemplateDisplay Name="StackPanel-Horizontal">
                        <local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal" />
                            </ItemsPanelTemplate>
                        </local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                    </local:ItemsPanelTemplateDisplay>

                    <local:ItemsPanelTemplateDisplay Name="UniformGrid(3)">
                        <local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                            <ItemsPanelTemplate>
                                <UniformGrid Columns="3" />
                            </ItemsPanelTemplate>
                        </local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                    </local:ItemsPanelTemplateDisplay>

                    <local:ItemsPanelTemplateDisplay Name="UniformGrid(2)">
                        <local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                            <ItemsPanelTemplate>
                                <UniformGrid Columns="2" />
                            </ItemsPanelTemplate>
                        </local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                    </local:ItemsPanelTemplateDisplay>

                    <local:ItemsPanelTemplateDisplay Name="CirclePanel">
                        <local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                            <ItemsPanelTemplate>
                                <h:CirclePanel />
                            </ItemsPanelTemplate>
                        </local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                    </local:ItemsPanelTemplateDisplay>

                    <local:ItemsPanelTemplateDisplay Name="CrossPanel">
                        <local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                            <ItemsPanelTemplate>
                                <h:CrossPanel />
                            </ItemsPanelTemplate>
                        </local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                    </local:ItemsPanelTemplateDisplay>

                    <local:ItemsPanelTemplateDisplay Name="DockPanel">
                        <local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                            <ItemsPanelTemplate>
                                <h:DockPanel />
                            </ItemsPanelTemplate>
                        </local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                    </local:ItemsPanelTemplateDisplay>

                    <local:ItemsPanelTemplateDisplay Name="DragPanel">
                        <local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                            <ItemsPanelTemplate>
                                <h:DragPanel />
                            </ItemsPanelTemplate>
                        </local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                    </local:ItemsPanelTemplateDisplay>

                    <local:ItemsPanelTemplateDisplay Name="FlashPanel">
                        <local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                            <ItemsPanelTemplate>
                                <h:FlashPanel>
                                    <h:FlashPanel.Timelines>
                                        <cl:ArrayList>
                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
                                                             From="0" To="1"
                                                             Duration="00:00:01" />
                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                                             From="0" To="1"
                                                             Duration="00:00:01" />
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                             From="1" To="0"
                                                             Duration="00:00:01" />
                                        </cl:ArrayList>
                                    </h:FlashPanel.Timelines>
                                </h:FlashPanel>
                            </ItemsPanelTemplate>
                        </local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                    </local:ItemsPanelTemplateDisplay>


                    <local:ItemsPanelTemplateDisplay Name="PagePanel">
                        <local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                            <ItemsPanelTemplate>
                                <h:PagePanel />
                            </ItemsPanelTemplate>
                        </local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                    </local:ItemsPanelTemplateDisplay>
                </x:Array>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>