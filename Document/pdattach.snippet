<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
	<CodeSnippet Format="1.0.0">
		<Header>
			<Title>pd</Title>
			<Shortcut>pd</Shortcut>
			<Description>2018-07-17 10:50:33</Description>
			<Author>Create By HeBianGu</Author>
			<SnippetTypes>
				<SnippetType></SnippetType>
			</SnippetTypes>
		</Header>
<Snippet xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
	<Declarations>
		<Literal>
			<ID>name</ID>
			<ToolTip>接口名称</ToolTip>
			<Default>NotifyClass</Default>
		</Literal>
		<Literal>
			<ID>type</ID>
			<ToolTip>接口名称</ToolTip>
			<Default>string</Default>
		</Literal>
		<Literal>
			<ID>classtype</ID>
			<ToolTip>接口名称</ToolTip>
			<Default>ClassType</Default>
		</Literal>
	</Declarations>
	<Code Language="csharp"><![CDATA[        
       public $type$  $name$ 
        {
            get { return ($type$ )GetValue($name$Property); }
            set { SetValue($name$Property, value); }
        }

        // Using a DependencyProperty as the backing store for MyProperty.  This enables animation, styling, binding, etc...
        public static readonly DependencyProperty $name$Property =
            DependencyProperty.Register("$name$", typeof($type$), typeof($classtype$), new PropertyMetadata(default($type$),(d,e) =>
            {
                $classtype$ control = d as $classtype$;
 
                if (control == null) return;

                $type$ config = e.NewValue as $type$;

            }));
]]></Code>
</Snippet>


	</CodeSnippet>
</CodeSnippets>